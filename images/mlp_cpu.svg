<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="774.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="757" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="757" > </text>
<g id="frames">
<g >
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::_M_realloc_insert&lt;char const*&gt; (29 samples, 0.02%)</title><rect x="291.1" y="581" width="0.2" height="15.0" fill="rgb(221,89,19)" rx="2" ry="2" />
<text  x="294.09" y="591.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::function&lt;void  (9,592 samples, 7.11%)</title><rect x="36.3" y="677" width="83.9" height="15.0" fill="rgb(208,105,4)" rx="2" ry="2" />
<text  x="39.29" y="687.5" >std::thre..</text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::assign&lt;int const*&gt; (13 samples, 0.01%)</title><rect x="34.2" y="421" width="0.1" height="15.0" fill="rgb(241,4,2)" rx="2" ry="2" />
<text  x="37.22" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,334 samples, 4.70%)</title><rect x="1013.8" y="661" width="55.4" height="15.0" fill="rgb(205,34,27)" rx="2" ry="2" />
<text  x="1016.78" y="671.5" >do_sy..</text>
</g>
<g >
<title>std::__miter_base&lt;int*&gt; (49 samples, 0.04%)</title><rect x="237.2" y="485" width="0.4" height="15.0" fill="rgb(253,27,48)" rx="2" ry="2" />
<text  x="240.17" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt;::emplace_back&lt;mshadow::Tensor&lt;mshadow::cpu, 2, float&gt;&amp;&gt; (25 samples, 0.02%)</title><rect x="34.2" y="517" width="0.2" height="15.0" fill="rgb(228,47,10)" rx="2" ry="2" />
<text  x="37.17" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::emplace&lt;char const*&amp;, char const*&amp;&gt; (40 samples, 0.03%)</title><rect x="290.0" y="565" width="0.4" height="15.0" fill="rgb(247,52,28)" rx="2" ry="2" />
<text  x="293.00" y="575.5" ></text>
</g>
<g >
<title>mxnet::TShape::Size (19 samples, 0.01%)</title><rect x="240.6" y="581" width="0.2" height="15.0" fill="rgb(218,87,30)" rx="2" ry="2" />
<text  x="243.59" y="591.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (14 samples, 0.01%)</title><rect x="236.9" y="469" width="0.2" height="15.0" fill="rgb(211,203,51)" rx="2" ry="2" />
<text  x="239.95" y="479.5" ></text>
</g>
<g >
<title>mxnet::cpp::MXDataIter::CreateDataIter (608 samples, 0.45%)</title><rect x="292.4" y="629" width="5.3" height="15.0" fill="rgb(246,32,12)" rx="2" ry="2" />
<text  x="295.36" y="639.5" ></text>
</g>
<g >
<title>mxnet::cpp::MXDataIter::GetLabel (425 samples, 0.32%)</title><rect x="239.4" y="629" width="3.7" height="15.0" fill="rgb(249,54,45)" rx="2" ry="2" />
<text  x="242.40" y="639.5" ></text>
</g>
<g >
<title>default_send_IPI_mask_sequence_phys (169 samples, 0.13%)</title><rect x="29.0" y="245" width="1.4" height="15.0" fill="rgb(240,187,54)" rx="2" ry="2" />
<text  x="31.96" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;void*, std::allocator&lt;void*&gt; &gt;::push_back (57 samples, 0.04%)</title><rect x="261.4" y="565" width="0.5" height="15.0" fill="rgb(236,120,45)" rx="2" ry="2" />
<text  x="264.39" y="575.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::jit_uni_eltwise_bwd_t&lt; (23 samples, 0.02%)</title><rect x="109.6" y="277" width="0.2" height="15.0" fill="rgb(253,157,39)" rx="2" ry="2" />
<text  x="112.64" y="287.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::SetDim (13 samples, 0.01%)</title><rect x="34.0" y="437" width="0.1" height="15.0" fill="rgb(253,217,23)" rx="2" ry="2" />
<text  x="36.96" y="447.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;mxnet::Engine&gt;::shared_ptr (13 samples, 0.01%)</title><rect x="222.3" y="309" width="0.1" height="15.0" fill="rgb(224,30,50)" rx="2" ry="2" />
<text  x="225.33" y="319.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::jit_avx_gemm_f32 (126 samples, 0.09%)</title><rect x="197.4" y="597" width="1.1" height="15.0" fill="rgb(219,166,21)" rx="2" ry="2" />
<text  x="200.36" y="607.5" ></text>
</g>
<g >
<title>std::copy&lt;long const*, long*&gt; (14 samples, 0.01%)</title><rect x="31.9" y="453" width="0.2" height="15.0" fill="rgb(215,169,12)" rx="2" ry="2" />
<text  x="34.94" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (27 samples, 0.02%)</title><rect x="266.3" y="597" width="0.2" height="15.0" fill="rgb(228,59,22)" rx="2" ry="2" />
<text  x="269.30" y="607.5" ></text>
</g>
<g >
<title>__schedule (3,992 samples, 2.96%)</title><rect x="307.8" y="549" width="34.9" height="15.0" fill="rgb(247,178,22)" rx="2" ry="2" />
<text  x="310.81" y="559.5" >__..</text>
</g>
<g >
<title>mxnet::engine::CallbackOnComplete::operator (28 samples, 0.02%)</title><rect x="103.0" y="469" width="0.2" height="15.0" fill="rgb(229,34,48)" rx="2" ry="2" />
<text  x="106.00" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;dnnl::primitive, std::unordered_map&lt;int, dnnl::memory, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::memory&gt; &gt; &gt; &gt;*, std::pair&lt;dnnl::primitive, std::unordered_map&lt;int, dnnl::memory, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::memory&gt; &gt; &gt; &gt; &gt; (16 samples, 0.01%)</title><rect x="114.8" y="277" width="0.2" height="15.0" fill="rgb(227,199,6)" rx="2" ry="2" />
<text  x="117.81" y="287.5" ></text>
</g>
<g >
<title>mxnet::op::MKLDNNFCFullParam::MKLDNNFCFullParam (18 samples, 0.01%)</title><rect x="115.5" y="341" width="0.2" height="15.0" fill="rgb(251,106,48)" rx="2" ry="2" />
<text  x="118.50" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (286 samples, 0.21%)</title><rect x="274.3" y="597" width="2.5" height="15.0" fill="rgb(233,65,20)" rx="2" ry="2" />
<text  x="277.28" y="607.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel&lt;dnnl::impl::cpu::simple_reorder_impl&lt; (104 samples, 0.08%)</title><rect x="196.4" y="629" width="0.9" height="15.0" fill="rgb(226,96,39)" rx="2" ry="2" />
<text  x="199.43" y="639.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (33 samples, 0.02%)</title><rect x="224.8" y="533" width="0.3" height="15.0" fill="rgb(215,108,1)" rx="2" ry="2" />
<text  x="227.82" y="543.5" ></text>
</g>
<g >
<title>mxnet::op::shape_is_none (13 samples, 0.01%)</title><rect x="255.2" y="453" width="0.2" height="15.0" fill="rgb(232,221,18)" rx="2" ry="2" />
<text  x="258.24" y="463.5" ></text>
</g>
<g >
<title>mxnet::features::is_enabled (12 samples, 0.01%)</title><rect x="249.6" y="549" width="0.1" height="15.0" fill="rgb(219,60,16)" rx="2" ry="2" />
<text  x="252.55" y="559.5" ></text>
</g>
<g >
<title>mxnet::imperative::PushFCompute (17 samples, 0.01%)</title><rect x="283.5" y="549" width="0.2" height="15.0" fill="rgb(222,51,24)" rx="2" ry="2" />
<text  x="286.51" y="559.5" ></text>
</g>
<g >
<title>rmap_walk (28 samples, 0.02%)</title><rect x="25.3" y="373" width="0.2" height="15.0" fill="rgb(236,47,37)" rx="2" ry="2" />
<text  x="28.30" y="383.5" ></text>
</g>
<g >
<title>mxnet::NDArray::data (97 samples, 0.07%)</title><rect x="31.6" y="533" width="0.8" height="15.0" fill="rgb(245,163,48)" rx="2" ry="2" />
<text  x="34.55" y="543.5" ></text>
</g>
<g >
<title>handle_mm_fault (20 samples, 0.01%)</title><rect x="410.8" y="613" width="0.2" height="15.0" fill="rgb(217,145,39)" rx="2" ry="2" />
<text  x="413.84" y="623.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::unordered_map (31 samples, 0.02%)</title><rect x="283.8" y="533" width="0.3" height="15.0" fill="rgb(236,24,46)" rx="2" ry="2" />
<text  x="286.78" y="543.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::assign&lt;long const*&gt; (40 samples, 0.03%)</title><rect x="256.7" y="453" width="0.3" height="15.0" fill="rgb(237,38,32)" rx="2" ry="2" />
<text  x="259.67" y="463.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::call_no_copy_sgemm&lt;float, float, float&gt; (63 samples, 0.05%)</title><rect x="113.6" y="181" width="0.6" height="15.0" fill="rgb(242,17,25)" rx="2" ry="2" />
<text  x="116.63" y="191.5" ></text>
</g>
<g >
<title>do_futex (4,289 samples, 3.18%)</title><rect x="305.3" y="613" width="37.6" height="15.0" fill="rgb(211,3,36)" rx="2" ry="2" />
<text  x="308.34" y="623.5" >do_..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;mxnet::NDArray const*, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; &gt;, mxnet::NDArray*&gt; (22 samples, 0.02%)</title><rect x="282.9" y="421" width="0.2" height="15.0" fill="rgb(224,72,7)" rx="2" ry="2" />
<text  x="285.93" y="431.5" ></text>
</g>
<g >
<title>mxnet::CopyFromToImpl&lt;mshadow::cpu, mshadow::cpu&gt; (6,987 samples, 5.18%)</title><rect x="37.4" y="469" width="61.1" height="15.0" fill="rgb(246,116,16)" rx="2" ry="2" />
<text  x="40.38" y="479.5" >mxnet:..</text>
</g>
<g >
<title>dnnl::impl::cpu::simple_reorder_t&lt; (16 samples, 0.01%)</title><rect x="109.8" y="277" width="0.2" height="15.0" fill="rgb(221,42,36)" rx="2" ry="2" />
<text  x="112.84" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (21 samples, 0.02%)</title><rect x="116.3" y="373" width="0.2" height="15.0" fill="rgb(254,56,8)" rx="2" ry="2" />
<text  x="119.31" y="383.5" ></text>
</g>
<g >
<title>mxnet::MKLDNNRun (21 samples, 0.02%)</title><rect x="116.3" y="405" width="0.2" height="15.0" fill="rgb(221,213,41)" rx="2" ry="2" />
<text  x="119.31" y="415.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::operator= (17 samples, 0.01%)</title><rect x="32.1" y="485" width="0.2" height="15.0" fill="rgb(222,8,52)" rx="2" ry="2" />
<text  x="35.11" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;mxnet::cpp::NDBlob,  (29 samples, 0.02%)</title><rect x="223.1" y="597" width="0.2" height="15.0" fill="rgb(226,202,47)" rx="2" ry="2" />
<text  x="226.09" y="607.5" ></text>
</g>
<g >
<title>perf_ctx_unlock (431 samples, 0.32%)</title><rect x="330.3" y="501" width="3.8" height="15.0" fill="rgb(232,133,40)" rx="2" ry="2" />
<text  x="333.32" y="511.5" ></text>
</g>
<g >
<title>mxnet::common::GetFCompute&lt;std::function&lt;void  (13 samples, 0.01%)</title><rect x="281.5" y="565" width="0.1" height="15.0" fill="rgb(222,69,28)" rx="2" ry="2" />
<text  x="284.48" y="575.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::SetDim (14 samples, 0.01%)</title><rect x="256.8" y="437" width="0.1" height="15.0" fill="rgb(218,203,13)" rx="2" ry="2" />
<text  x="259.78" y="447.5" ></text>
</g>
<g >
<title>dnnl::primitive_desc_base::query_md (15 samples, 0.01%)</title><rect x="112.8" y="309" width="0.1" height="15.0" fill="rgb(225,56,17)" rx="2" ry="2" />
<text  x="115.78" y="319.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4,086 samples, 3.03%)</title><rect x="307.0" y="581" width="35.7" height="15.0" fill="rgb(216,122,36)" rx="2" ry="2" />
<text  x="310.00" y="591.5" >fut..</text>
</g>
<g >
<title>mxnet::NDArray::Reshape (135 samples, 0.10%)</title><rect x="239.7" y="597" width="1.2" height="15.0" fill="rgb(207,34,38)" rx="2" ry="2" />
<text  x="242.72" y="607.5" ></text>
</g>
<g >
<title>GOMP_parallel@@VERSION (237 samples, 0.18%)</title><rect x="100.4" y="357" width="2.0" height="15.0" fill="rgb(230,7,7)" rx="2" ry="2" />
<text  x="103.36" y="367.5" ></text>
</g>
<g >
<title>dmlc::Parameter&lt;mxnet::op::MKLDNNFCParam&gt;::Init&lt;std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (67 samples, 0.05%)</title><rect x="111.2" y="341" width="0.6" height="15.0" fill="rgb(236,144,9)" rx="2" ry="2" />
<text  x="114.19" y="351.5" ></text>
</g>
<g >
<title>native_send_call_func_ipi (175 samples, 0.13%)</title><rect x="28.9" y="261" width="1.6" height="15.0" fill="rgb(235,147,4)" rx="2" ry="2" />
<text  x="31.92" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;mxnet::DataBatch*, std::allocator&lt;mxnet::DataBatch*&gt; &gt;::front (16 samples, 0.01%)</title><rect x="35.0" y="565" width="0.1" height="15.0" fill="rgb(233,158,47)" rx="2" ry="2" />
<text  x="37.97" y="575.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;mxnet::NDArray::Chunk&gt;::~shared_ptr (520 samples, 0.39%)</title><rect x="218.0" y="453" width="4.6" height="15.0" fill="rgb(222,71,10)" rx="2" ry="2" />
<text  x="221.02" y="463.5" ></text>
</g>
<g >
<title>mxnet::cpp::Operator::Operator (13 samples, 0.01%)</title><rect x="216.1" y="613" width="0.1" height="15.0" fill="rgb(222,15,54)" rx="2" ry="2" />
<text  x="219.11" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (28 samples, 0.02%)</title><rect x="223.1" y="565" width="0.2" height="15.0" fill="rgb(250,44,6)" rx="2" ry="2" />
<text  x="226.10" y="575.5" ></text>
</g>
<g >
<title>dmlc::ConcurrentBlockingQueue&lt;mxnet::engine::OprBlock*,  (46 samples, 0.03%)</title><rect x="36.3" y="533" width="0.4" height="15.0" fill="rgb(250,128,44)" rx="2" ry="2" />
<text  x="39.30" y="543.5" ></text>
</g>
<g >
<title>__kmp_invoke_microtask (13 samples, 0.01%)</title><rect x="141.1" y="629" width="0.1" height="15.0" fill="rgb(235,103,10)" rx="2" ry="2" />
<text  x="144.10" y="639.5" ></text>
</g>
<g >
<title>finish_task_switch (3,880 samples, 2.88%)</title><rect x="308.7" y="533" width="34.0" height="15.0" fill="rgb(225,215,7)" rx="2" ry="2" />
<text  x="311.74" y="543.5" >fi..</text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::Tuple (15 samples, 0.01%)</title><rect x="242.0" y="581" width="0.2" height="15.0" fill="rgb(205,207,50)" rx="2" ry="2" />
<text  x="245.03" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::cpp::NDArray, std::allocator&lt;mxnet::cpp::NDArray&gt; &gt;::_M_range_initialize&lt;mxnet::cpp::NDArray const*&gt; (68 samples, 0.05%)</title><rect x="262.7" y="597" width="0.6" height="15.0" fill="rgb(251,171,3)" rx="2" ry="2" />
<text  x="265.74" y="607.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEnginePerDevice::PushToExecute (56 samples, 0.04%)</title><rect x="245.7" y="549" width="0.5" height="15.0" fill="rgb(215,82,4)" rx="2" ry="2" />
<text  x="248.69" y="559.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (97 samples, 0.07%)</title><rect x="35.4" y="581" width="0.8" height="15.0" fill="rgb(220,213,41)" rx="2" ry="2" />
<text  x="38.38" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (37 samples, 0.03%)</title><rect x="273.3" y="581" width="0.3" height="15.0" fill="rgb(246,5,47)" rx="2" ry="2" />
<text  x="276.29" y="591.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::PushAsync (94 samples, 0.07%)</title><rect x="281.6" y="533" width="0.9" height="15.0" fill="rgb(214,148,4)" rx="2" ry="2" />
<text  x="284.65" y="543.5" ></text>
</g>
<g >
<title>dmlc::ConcurrentBlockingQueue&lt;mxnet::engine::OprBlock*,  (15 samples, 0.01%)</title><rect x="245.7" y="533" width="0.2" height="15.0" fill="rgb(251,141,46)" rx="2" ry="2" />
<text  x="248.72" y="543.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::jit_avx_gemm_f32 (63 samples, 0.05%)</title><rect x="113.6" y="165" width="0.6" height="15.0" fill="rgb(223,179,40)" rx="2" ry="2" />
<text  x="116.63" y="175.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::avx_gemm_f32::xbyak_gemm::xbyak_gemm (33 samples, 0.02%)</title><rect x="301.8" y="565" width="0.3" height="15.0" fill="rgb(225,36,16)" rx="2" ry="2" />
<text  x="304.84" y="575.5" ></text>
</g>
<g >
<title>do_async_page_fault (14 samples, 0.01%)</title><rect x="297.5" y="517" width="0.1" height="15.0" fill="rgb(242,76,3)" rx="2" ry="2" />
<text  x="300.51" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::emplace_back&lt;char const*&gt; (18 samples, 0.01%)</title><rect x="291.4" y="597" width="0.2" height="15.0" fill="rgb(228,130,53)" rx="2" ry="2" />
<text  x="294.42" y="607.5" ></text>
</g>
<g >
<title>std::_Construct&lt;mxnet::NDArray, mxnet::NDArray const&amp;&gt; (21 samples, 0.02%)</title><rect x="282.9" y="405" width="0.2" height="15.0" fill="rgb(226,109,35)" rx="2" ry="2" />
<text  x="285.94" y="415.5" ></text>
</g>
<g >
<title>sys_sched_setaffinity (32 samples, 0.02%)</title><rect x="1189.7" y="645" width="0.3" height="15.0" fill="rgb(234,23,40)" rx="2" ry="2" />
<text  x="1192.71" y="655.5" ></text>
</g>
<g >
<title>mxnet::NDArray::NDArray (16 samples, 0.01%)</title><rect x="97.9" y="453" width="0.2" height="15.0" fill="rgb(227,219,7)" rx="2" ry="2" />
<text  x="100.92" y="463.5" ></text>
</g>
<g >
<title>nnvm::OpMap&lt;std::function&lt;void  (14 samples, 0.01%)</title><rect x="257.4" y="549" width="0.2" height="15.0" fill="rgb(220,32,2)" rx="2" ry="2" />
<text  x="260.44" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char const*, std::allocator&lt;char const*&gt; &gt;::_Vector_base (15 samples, 0.01%)</title><rect x="262.0" y="581" width="0.1" height="15.0" fill="rgb(218,131,19)" rx="2" ry="2" />
<text  x="264.96" y="591.5" ></text>
</g>
<g >
<title>mxnet::engine::CallbackOnComplete::operator (44 samples, 0.03%)</title><rect x="99.4" y="469" width="0.4" height="15.0" fill="rgb(247,45,39)" rx="2" ry="2" />
<text  x="102.43" y="479.5" ></text>
</g>
<g >
<title>kvm_guest_apic_eoi_write (75 samples, 0.06%)</title><rect x="458.0" y="645" width="0.7" height="15.0" fill="rgb(229,83,36)" rx="2" ry="2" />
<text  x="461.04" y="655.5" ></text>
</g>
<g >
<title>std::normal_distribution&lt;float&gt;::operator (14 samples, 0.01%)</title><rect x="190.6" y="581" width="0.1" height="15.0" fill="rgb(237,164,12)" rx="2" ry="2" />
<text  x="193.59" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (12 samples, 0.01%)</title><rect x="248.7" y="549" width="0.1" height="15.0" fill="rgb(254,148,20)" rx="2" ry="2" />
<text  x="251.71" y="559.5" ></text>
</g>
<g >
<title>mxnet::op::broadcast::seq_reduce_compute&lt;mshadow::red::sum, 2, float, float, float, mxnet::op::mshadow_op::identity&gt; (191 samples, 0.14%)</title><rect x="117.7" y="309" width="1.6" height="15.0" fill="rgb(228,136,23)" rx="2" ry="2" />
<text  x="120.66" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (13 samples, 0.01%)</title><rect x="290.5" y="565" width="0.1" height="15.0" fill="rgb(217,94,44)" rx="2" ry="2" />
<text  x="293.48" y="575.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;mxnet::NDArray const*, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; &gt;, mxnet::NDArray*&gt; (16 samples, 0.01%)</title><rect x="285.1" y="517" width="0.1" height="15.0" fill="rgb(219,166,5)" rx="2" ry="2" />
<text  x="288.08" y="527.5" ></text>
</g>
<g >
<title>nnvm::NodeAttrs::~NodeAttrs (25 samples, 0.02%)</title><rect x="284.6" y="469" width="0.2" height="15.0" fill="rgb(208,17,11)" rx="2" ry="2" />
<text  x="287.56" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::push_back (42 samples, 0.03%)</title><rect x="264.6" y="581" width="0.4" height="15.0" fill="rgb(210,18,16)" rx="2" ry="2" />
<text  x="267.63" y="591.5" ></text>
</g>
<g >
<title>migrate_misplaced_page (519 samples, 0.38%)</title><rect x="200.6" y="517" width="4.5" height="15.0" fill="rgb(226,80,18)" rx="2" ry="2" />
<text  x="203.59" y="527.5" ></text>
</g>
<g >
<title>call_function_interrupt (83 samples, 0.06%)</title><rect x="458.0" y="677" width="0.7" height="15.0" fill="rgb(207,75,21)" rx="2" ry="2" />
<text  x="460.97" y="687.5" ></text>
</g>
<g >
<title>nnvm::NodeEntry::operator= (16 samples, 0.01%)</title><rect x="240.4" y="565" width="0.1" height="15.0" fill="rgb(249,180,43)" rx="2" ry="2" />
<text  x="243.38" y="575.5" ></text>
</g>
<g >
<title>mxnet::NDArray::operator= (21 samples, 0.02%)</title><rect x="98.1" y="453" width="0.2" height="15.0" fill="rgb(211,162,54)" rx="2" ry="2" />
<text  x="101.11" y="463.5" ></text>
</g>
<g >
<title>mxnet::TBlob::TBlob&lt;mshadow::cpu, 2, float&gt; (85 samples, 0.06%)</title><rect x="33.4" y="469" width="0.7" height="15.0" fill="rgb(240,149,11)" rx="2" ry="2" />
<text  x="36.37" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (51 samples, 0.04%)</title><rect x="273.2" y="613" width="0.5" height="15.0" fill="rgb(230,17,9)" rx="2" ry="2" />
<text  x="276.22" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (39 samples, 0.03%)</title><rect x="233.8" y="565" width="0.3" height="15.0" fill="rgb(206,182,15)" rx="2" ry="2" />
<text  x="236.77" y="575.5" ></text>
</g>
<g >
<title>try_to_unmap (561 samples, 0.42%)</title><rect x="25.6" y="389" width="4.9" height="15.0" fill="rgb(221,1,53)" rx="2" ry="2" />
<text  x="28.57" y="399.5" ></text>
</g>
<g >
<title>native_apic_mem_write (94 samples, 0.07%)</title><rect x="411.1" y="629" width="0.8" height="15.0" fill="rgb(251,46,5)" rx="2" ry="2" />
<text  x="414.07" y="639.5" ></text>
</g>
<g >
<title>GOMP_parallel@@VERSION (44 samples, 0.03%)</title><rect x="114.3" y="213" width="0.4" height="15.0" fill="rgb(253,167,34)" rx="2" ry="2" />
<text  x="117.29" y="223.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::Push (242 samples, 0.18%)</title><rect x="219.2" y="293" width="2.1" height="15.0" fill="rgb(205,115,15)" rx="2" ry="2" />
<text  x="222.16" y="303.5" ></text>
</g>
<g >
<title>dnnl_primitive_execute (87 samples, 0.06%)</title><rect x="109.3" y="309" width="0.8" height="15.0" fill="rgb(240,161,49)" rx="2" ry="2" />
<text  x="112.33" y="319.5" ></text>
</g>
<g >
<title>__pthread_once_slow (35 samples, 0.03%)</title><rect x="301.8" y="677" width="0.3" height="15.0" fill="rgb(246,67,26)" rx="2" ry="2" />
<text  x="304.84" y="687.5" ></text>
</g>
<g >
<title>__kmp_invoke_task_func (13 samples, 0.01%)</title><rect x="141.1" y="645" width="0.1" height="15.0" fill="rgb(241,82,12)" rx="2" ry="2" />
<text  x="144.10" y="655.5" ></text>
</g>
<g >
<title>__libc_csu_init (85 samples, 0.06%)</title><rect x="462.1" y="693" width="0.8" height="15.0" fill="rgb(222,159,19)" rx="2" ry="2" />
<text  x="465.11" y="703.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::pair&lt;bool, int&gt; &gt; (23 samples, 0.02%)</title><rect x="106.6" y="373" width="0.2" height="15.0" fill="rgb(208,126,51)" rx="2" ry="2" />
<text  x="109.57" y="383.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.01%)</title><rect x="342.9" y="661" width="0.1" height="15.0" fill="rgb(232,89,48)" rx="2" ry="2" />
<text  x="345.88" y="671.5" ></text>
</g>
<g >
<title>handle_mm_fault (520 samples, 0.39%)</title><rect x="200.6" y="549" width="4.5" height="15.0" fill="rgb(254,42,21)" rx="2" ry="2" />
<text  x="203.58" y="559.5" ></text>
</g>
<g >
<title>mxnet::TShape::operator=&lt;2&gt; (13 samples, 0.01%)</title><rect x="34.2" y="437" width="0.1" height="15.0" fill="rgb(220,116,36)" rx="2" ry="2" />
<text  x="37.22" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (19 samples, 0.01%)</title><rect x="240.2" y="501" width="0.2" height="15.0" fill="rgb(224,175,10)" rx="2" ry="2" />
<text  x="243.19" y="511.5" ></text>
</g>
<g >
<title>try_to_wake_up (5,919 samples, 4.39%)</title><rect x="1069.8" y="581" width="51.8" height="15.0" fill="rgb(245,192,13)" rx="2" ry="2" />
<text  x="1072.84" y="591.5" >try_t..</text>
</g>
<g >
<title>[unknown] (5,729 samples, 4.25%)</title><rect x="141.0" y="677" width="50.2" height="15.0" fill="rgb(233,75,44)" rx="2" ry="2" />
<text  x="144.04" y="687.5" >[unkn..</text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;void**, void**, std::allocator&lt;void*&gt; &gt; (20 samples, 0.01%)</title><rect x="261.5" y="517" width="0.2" height="15.0" fill="rgb(251,188,41)" rx="2" ry="2" />
<text  x="264.55" y="527.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::engine::ThreadedEngine::DeleteVariable (12 samples, 0.01%)</title><rect x="219.8" y="53" width="0.1" height="15.0" fill="rgb(242,98,7)" rx="2" ry="2" />
<text  x="222.84" y="63.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (516 samples, 0.38%)</title><rect x="218.0" y="405" width="4.5" height="15.0" fill="rgb(215,121,49)" rx="2" ry="2" />
<text  x="221.03" y="415.5" ></text>
</g>
<g >
<title>NNGetOpInfo (208 samples, 0.15%)</title><rect x="263.9" y="597" width="1.8" height="15.0" fill="rgb(222,206,35)" rx="2" ry="2" />
<text  x="266.93" y="607.5" ></text>
</g>
<g >
<title>main (9,768 samples, 7.24%)</title><rect x="216.0" y="661" width="85.4" height="15.0" fill="rgb(250,172,10)" rx="2" ry="2" />
<text  x="219.00" y="671.5" >main</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (94 samples, 0.07%)</title><rect x="35.4" y="565" width="0.8" height="15.0" fill="rgb(229,170,53)" rx="2" ry="2" />
<text  x="38.40" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::engine::ThreadedVar*, std::allocator&lt;mxnet::engine::ThreadedVar*&gt; &gt;::resize (19 samples, 0.01%)</title><rect x="245.2" y="549" width="0.2" height="15.0" fill="rgb(237,2,31)" rx="2" ry="2" />
<text  x="248.23" y="559.5" ></text>
</g>
<g >
<title>mxnet::cpp::DataIter::GetDataBatch (2,298 samples, 1.70%)</title><rect x="223.4" y="645" width="20.1" height="15.0" fill="rgb(230,72,8)" rx="2" ry="2" />
<text  x="226.39" y="655.5" ></text>
</g>
<g >
<title>nnvm::NodeAttrs::~NodeAttrs (13 samples, 0.01%)</title><rect x="99.5" y="213" width="0.1" height="15.0" fill="rgb(247,134,44)" rx="2" ry="2" />
<text  x="102.51" y="223.5" ></text>
</g>
<g >
<title>mxnet::op::mxnet_op::Kernel&lt;mxnet::op::SampleNormalKernel&lt;mshadow::cpu&gt;, mshadow::cpu&gt;::Launch&lt;mxnet::common::random::RandGenerator&lt;mshadow::cpu, float&gt;, int, int, int, int, float*, float*, float*&gt; (14 samples, 0.01%)</title><rect x="190.6" y="613" width="0.1" height="15.0" fill="rgb(232,47,43)" rx="2" ry="2" />
<text  x="193.59" y="623.5" ></text>
</g>
<g >
<title>mxnet::io::PrefetcherIter::Init (2,371 samples, 1.76%)</title><rect x="13.9" y="549" width="20.8" height="15.0" fill="rgb(238,33,32)" rx="2" ry="2" />
<text  x="16.91" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::vector (19 samples, 0.01%)</title><rect x="261.9" y="597" width="0.2" height="15.0" fill="rgb(244,2,0)" rx="2" ry="2" />
<text  x="264.95" y="607.5" ></text>
</g>
<g >
<title>nnvm::NodeAttrs::NodeAttrs (21 samples, 0.02%)</title><rect x="282.7" y="469" width="0.2" height="15.0" fill="rgb(223,177,34)" rx="2" ry="2" />
<text  x="285.67" y="479.5" ></text>
</g>
<g >
<title>move_to_new_page (77 samples, 0.06%)</title><rect x="24.5" y="389" width="0.7" height="15.0" fill="rgb(243,66,5)" rx="2" ry="2" />
<text  x="27.55" y="399.5" ></text>
</g>
<g >
<title>mxnet::op::ElemwiseAttrHelper&lt;mxnet::TShape, &amp;mxnet::op::shape_is_none, &amp;mxnet::op::shape_assign, true, &amp;mxnet::op::shape_string[abi:cxx11], -1, -1&gt; (21 samples, 0.02%)</title><rect x="286.7" y="485" width="0.2" height="15.0" fill="rgb(253,183,1)" rx="2" ry="2" />
<text  x="289.71" y="495.5" ></text>
</g>
<g >
<title>do_futex (24 samples, 0.02%)</title><rect x="35.9" y="469" width="0.2" height="15.0" fill="rgb(250,48,14)" rx="2" ry="2" />
<text  x="38.86" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (762 samples, 0.56%)</title><rect x="232.4" y="581" width="6.6" height="15.0" fill="rgb(225,61,22)" rx="2" ry="2" />
<text  x="235.36" y="591.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;int*&gt;, int*&gt; (217 samples, 0.16%)</title><rect x="235.8" y="517" width="1.9" height="15.0" fill="rgb(233,92,39)" rx="2" ry="2" />
<text  x="238.76" y="527.5" ></text>
</g>
<g >
<title>mshadow::packet::Packet&lt;float,  (33 samples, 0.02%)</title><rect x="205.3" y="613" width="0.3" height="15.0" fill="rgb(246,114,23)" rx="2" ry="2" />
<text  x="208.26" y="623.5" ></text>
</g>
<g >
<title>pick_next_entity (939 samples, 0.70%)</title><rect x="791.0" y="581" width="8.3" height="15.0" fill="rgb(216,35,10)" rx="2" ry="2" />
<text  x="794.05" y="591.5" ></text>
</g>
<g >
<title>mxnet::imperative::ParseAttrs (231 samples, 0.17%)</title><rect x="288.4" y="597" width="2.0" height="15.0" fill="rgb(208,12,26)" rx="2" ry="2" />
<text  x="291.42" y="607.5" ></text>
</g>
<g >
<title>GOMP_parallel@@VERSION (18 samples, 0.01%)</title><rect x="297.2" y="469" width="0.1" height="15.0" fill="rgb(254,174,42)" rx="2" ry="2" />
<text  x="300.18" y="479.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;dmlc::ThreadedIter&lt;mxnet::DataBatch&gt;::Init (2,785 samples, 2.06%)</title><rect x="11.9" y="677" width="24.4" height="15.0" fill="rgb(216,187,13)" rx="2" ry="2" />
<text  x="14.92" y="687.5" >s..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (29 samples, 0.02%)</title><rect x="283.8" y="517" width="0.2" height="15.0" fill="rgb(219,154,52)" rx="2" ry="2" />
<text  x="286.78" y="527.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;int*&gt;, int*, int&gt; (244 samples, 0.18%)</title><rect x="235.5" y="549" width="2.2" height="15.0" fill="rgb(250,45,35)" rx="2" ry="2" />
<text  x="238.52" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (16 samples, 0.01%)</title><rect x="270.1" y="565" width="0.2" height="15.0" fill="rgb(234,98,32)" rx="2" ry="2" />
<text  x="273.14" y="575.5" ></text>
</g>
<g >
<title>_cond_resched (32 samples, 0.02%)</title><rect x="1189.7" y="581" width="0.3" height="15.0" fill="rgb(214,127,44)" rx="2" ry="2" />
<text  x="1192.71" y="591.5" ></text>
</g>
<g >
<title>std::copy&lt;long const*, long*&gt; (16 samples, 0.01%)</title><rect x="224.2" y="533" width="0.2" height="15.0" fill="rgb(241,161,14)" rx="2" ry="2" />
<text  x="227.24" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;dmlc::any, std::default_delete&lt;dmlc::any&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (12 samples, 0.01%)</title><rect x="103.5" y="341" width="0.1" height="15.0" fill="rgb(216,221,10)" rx="2" ry="2" />
<text  x="106.46" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (12 samples, 0.01%)</title><rect x="283.9" y="421" width="0.1" height="15.0" fill="rgb(230,122,39)" rx="2" ry="2" />
<text  x="286.88" y="431.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.01%)</title><rect x="230.9" y="549" width="0.1" height="15.0" fill="rgb(214,130,7)" rx="2" ry="2" />
<text  x="233.90" y="559.5" ></text>
</g>
<g >
<title>mshadow::Softmax&lt;float&gt; (157 samples, 0.12%)</title><rect x="158.6" y="613" width="1.4" height="15.0" fill="rgb(222,35,17)" rx="2" ry="2" />
<text  x="161.59" y="623.5" ></text>
</g>
<g >
<title>mxnet::op::ElemwiseShape&lt;1, 1&gt; (144 samples, 0.11%)</title><rect x="254.2" y="501" width="1.3" height="15.0" fill="rgb(217,210,3)" rx="2" ry="2" />
<text  x="257.23" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;mxnet::cpp::NDBlob, std::allocator&lt;mxnet::cpp::NDBlob&gt;,  (20 samples, 0.01%)</title><rect x="242.7" y="517" width="0.2" height="15.0" fill="rgb(249,115,22)" rx="2" ry="2" />
<text  x="245.70" y="527.5" ></text>
</g>
<g >
<title>dnnl_reorder_primitive_desc_create (50 samples, 0.04%)</title><rect x="108.5" y="261" width="0.5" height="15.0" fill="rgb(210,204,28)" rx="2" ry="2" />
<text  x="111.54" y="271.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, mxnet::cpp::NDArray, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt; &gt; &gt;::operator[] (285 samples, 0.21%)</title><rect x="298.9" y="645" width="2.4" height="15.0" fill="rgb(207,102,27)" rx="2" ry="2" />
<text  x="301.85" y="655.5" ></text>
</g>
<g >
<title>native_apic_mem_write (13 samples, 0.01%)</title><rect x="140.9" y="613" width="0.1" height="15.0" fill="rgb(243,102,24)" rx="2" ry="2" />
<text  x="143.92" y="623.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::emplace&lt;char const*&amp;, char const*&amp;&gt; (41 samples, 0.03%)</title><rect x="290.0" y="581" width="0.4" height="15.0" fill="rgb(206,204,26)" rx="2" ry="2" />
<text  x="292.99" y="591.5" ></text>
</g>
<g >
<title>dmlc::stof (12 samples, 0.01%)</title><rect x="288.7" y="469" width="0.1" height="15.0" fill="rgb(242,17,2)" rx="2" ry="2" />
<text  x="291.66" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (391 samples, 0.29%)</title><rect x="234.4" y="565" width="3.5" height="15.0" fill="rgb(230,89,21)" rx="2" ry="2" />
<text  x="237.45" y="575.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::Tuple (26 samples, 0.02%)</title><rect x="31.9" y="485" width="0.2" height="15.0" fill="rgb(252,131,40)" rx="2" ry="2" />
<text  x="34.85" y="495.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::jit_avx_gemm_f32 (422 samples, 0.31%)</title><rect x="154.4" y="581" width="3.7" height="15.0" fill="rgb(235,76,50)" rx="2" ry="2" />
<text  x="157.44" y="591.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;dnnl::primitive, std::unordered_map&lt;int, dnnl::memory, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::memory&gt; &gt; &gt; &gt;*&gt; (16 samples, 0.01%)</title><rect x="114.8" y="261" width="0.2" height="15.0" fill="rgb(208,160,50)" rx="2" ry="2" />
<text  x="117.81" y="271.5" ></text>
</g>
<g >
<title>up_write (16 samples, 0.01%)</title><rect x="463.0" y="613" width="0.1" height="15.0" fill="rgb(216,42,39)" rx="2" ry="2" />
<text  x="465.99" y="623.5" ></text>
</g>
<g >
<title>malloc (107 samples, 0.08%)</title><rect x="1012.7" y="693" width="0.9" height="15.0" fill="rgb(205,108,7)" rx="2" ry="2" />
<text  x="1015.71" y="703.5" ></text>
</g>
<g >
<title>mshadow::Copy&lt;2, float&gt; (12 samples, 0.01%)</title><rect x="31.4" y="533" width="0.1" height="15.0" fill="rgb(243,133,9)" rx="2" ry="2" />
<text  x="34.36" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::_M_erase_at_end (13 samples, 0.01%)</title><rect x="265.3" y="565" width="0.2" height="15.0" fill="rgb(221,130,15)" rx="2" ry="2" />
<text  x="268.34" y="575.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (42 samples, 0.03%)</title><rect x="347.1" y="645" width="0.4" height="15.0" fill="rgb(211,156,53)" rx="2" ry="2" />
<text  x="350.13" y="655.5" ></text>
</g>
<g >
<title>mxnet::TBlob::operator= (23 samples, 0.02%)</title><rect x="240.9" y="581" width="0.2" height="15.0" fill="rgb(249,80,4)" rx="2" ry="2" />
<text  x="243.94" y="591.5" ></text>
</g>
<g >
<title>nnvm::OpMap&lt;std::function&lt;bool  (18 samples, 0.01%)</title><rect x="253.7" y="517" width="0.1" height="15.0" fill="rgb(213,183,33)" rx="2" ry="2" />
<text  x="256.66" y="527.5" ></text>
</g>
<g >
<title>dnnl_primitive_execute (22 samples, 0.02%)</title><rect x="107.4" y="309" width="0.2" height="15.0" fill="rgb(233,113,39)" rx="2" ry="2" />
<text  x="110.37" y="319.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::gemm_utils::sum_two_matrices&lt;float&gt; (131 samples, 0.10%)</title><rect x="157.0" y="565" width="1.1" height="15.0" fill="rgb(220,126,17)" rx="2" ry="2" />
<text  x="159.99" y="575.5" ></text>
</g>
<g >
<title>native_smp_send_reschedule (30 samples, 0.02%)</title><rect x="1120.9" y="565" width="0.3" height="15.0" fill="rgb(237,169,3)" rx="2" ry="2" />
<text  x="1123.91" y="575.5" ></text>
</g>
<g >
<title>std::function&lt;void  (21 samples, 0.02%)</title><rect x="116.3" y="389" width="0.2" height="15.0" fill="rgb(239,98,30)" rx="2" ry="2" />
<text  x="119.31" y="399.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (18 samples, 0.01%)</title><rect x="1121.4" y="549" width="0.2" height="15.0" fill="rgb(246,71,32)" rx="2" ry="2" />
<text  x="1124.44" y="559.5" ></text>
</g>
<g >
<title>inner_thread (12 samples, 0.01%)</title><rect x="191.0" y="661" width="0.1" height="15.0" fill="rgb(219,124,46)" rx="2" ry="2" />
<text  x="193.96" y="671.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPool&lt;mxnet::engine::ThreadedOpr&gt;::New&lt;&gt; (18 samples, 0.01%)</title><rect x="281.8" y="485" width="0.1" height="15.0" fill="rgb(236,174,31)" rx="2" ry="2" />
<text  x="284.76" y="495.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;dmlc::ThreadedIter&lt;mxnet::DataBatch&gt;::Init (2,785 samples, 2.06%)</title><rect x="11.9" y="661" width="24.4" height="15.0" fill="rgb(213,41,6)" rx="2" ry="2" />
<text  x="14.92" y="671.5" >s..</text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::Tuple (12 samples, 0.01%)</title><rect x="287.4" y="501" width="0.1" height="15.0" fill="rgb(252,153,5)" rx="2" ry="2" />
<text  x="290.40" y="511.5" ></text>
</g>
<g >
<title>do_async_page_fault (521 samples, 0.39%)</title><rect x="200.6" y="597" width="4.5" height="15.0" fill="rgb(237,53,21)" rx="2" ry="2" />
<text  x="203.58" y="607.5" ></text>
</g>
<g >
<title>start_thread (89 samples, 0.07%)</title><rect x="1188.9" y="693" width="0.8" height="15.0" fill="rgb(240,209,45)" rx="2" ry="2" />
<text  x="1191.92" y="703.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (65 samples, 0.05%)</title><rect x="286.6" y="549" width="0.6" height="15.0" fill="rgb(210,185,21)" rx="2" ry="2" />
<text  x="289.63" y="559.5" ></text>
</g>
<g >
<title>mxnet::op::OperatorTune&lt;mshadow::half::half_t&gt;::TuneAll (12 samples, 0.01%)</title><rect x="462.6" y="597" width="0.1" height="15.0" fill="rgb(206,97,43)" rx="2" ry="2" />
<text  x="465.57" y="607.5" ></text>
</g>
<g >
<title>vsnprintf (57 samples, 0.04%)</title><rect x="347.0" y="677" width="0.5" height="15.0" fill="rgb(222,12,54)" rx="2" ry="2" />
<text  x="350.05" y="687.5" ></text>
</g>
<g >
<title>__default_send_IPI_dest_field (24 samples, 0.02%)</title><rect x="204.9" y="325" width="0.2" height="15.0" fill="rgb(234,37,49)" rx="2" ry="2" />
<text  x="207.85" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_base (26 samples, 0.02%)</title><rect x="276.9" y="597" width="0.2" height="15.0" fill="rgb(212,125,5)" rx="2" ry="2" />
<text  x="279.88" y="607.5" ></text>
</g>
<g >
<title>__default_send_IPI_dest_field (27 samples, 0.02%)</title><rect x="1120.9" y="533" width="0.3" height="15.0" fill="rgb(252,18,48)" rx="2" ry="2" />
<text  x="1123.94" y="543.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::gemm_inner_product_fwd_t&lt; (980 samples, 0.73%)</title><rect x="142.2" y="597" width="8.6" height="15.0" fill="rgb(211,201,0)" rx="2" ry="2" />
<text  x="145.25" y="607.5" ></text>
</g>
<g >
<title>update_curr (8,374 samples, 6.21%)</title><rect x="799.3" y="581" width="73.2" height="15.0" fill="rgb(244,35,16)" rx="2" ry="2" />
<text  x="802.26" y="591.5" >update_c..</text>
</g>
<g >
<title>mxnet::NDArray::operator= (114 samples, 0.08%)</title><rect x="240.9" y="597" width="1.0" height="15.0" fill="rgb(215,6,47)" rx="2" ry="2" />
<text  x="243.90" y="607.5" ></text>
</g>
<g >
<title>default_send_IPI_single_phys (29 samples, 0.02%)</title><rect x="1120.9" y="549" width="0.3" height="15.0" fill="rgb(237,60,49)" rx="2" ry="2" />
<text  x="1123.92" y="559.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (75 samples, 0.06%)</title><rect x="462.2" y="661" width="0.6" height="15.0" fill="rgb(233,195,16)" rx="2" ry="2" />
<text  x="465.17" y="671.5" ></text>
</g>
<g >
<title>mxnet::op::UnaryOpTune&lt;float&gt;::UnaryOpTune (21 samples, 0.02%)</title><rect x="462.3" y="629" width="0.1" height="15.0" fill="rgb(222,166,39)" rx="2" ry="2" />
<text  x="465.26" y="639.5" ></text>
</g>
<g >
<title>cgroup_cpu_stat_updated (367 samples, 0.27%)</title><rect x="836.8" y="549" width="3.2" height="15.0" fill="rgb(232,17,32)" rx="2" ry="2" />
<text  x="839.83" y="559.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (19 samples, 0.01%)</title><rect x="279.9" y="533" width="0.2" height="15.0" fill="rgb(247,201,52)" rx="2" ry="2" />
<text  x="282.93" y="543.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::WaitForVar (101 samples, 0.07%)</title><rect x="246.6" y="581" width="0.8" height="15.0" fill="rgb(230,218,47)" rx="2" ry="2" />
<text  x="249.56" y="591.5" ></text>
</g>
<g >
<title>std::function&lt;void  (173 samples, 0.13%)</title><rect x="288.5" y="581" width="1.5" height="15.0" fill="rgb(238,64,18)" rx="2" ry="2" />
<text  x="291.47" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::_M_lower_bound (277 samples, 0.21%)</title><rect x="267.5" y="565" width="2.4" height="15.0" fill="rgb(234,143,26)" rx="2" ry="2" />
<text  x="270.46" y="575.5" ></text>
</g>
<g >
<title>mshadow::MapExp&lt;mshadow::sv::multo, mshadow::Tensor&lt;mshadow::cpu, 3, float&gt;, 3, float, mshadow::expr::ScalarExp&lt;float&gt;, 1&gt; (18 samples, 0.01%)</title><rect x="297.2" y="517" width="0.1" height="15.0" fill="rgb(240,19,7)" rx="2" ry="2" />
<text  x="300.18" y="527.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;mxnet::NDArray::Chunk,  (519 samples, 0.38%)</title><rect x="218.0" y="437" width="4.6" height="15.0" fill="rgb(231,104,53)" rx="2" ry="2" />
<text  x="221.03" y="447.5" ></text>
</g>
<g >
<title>std::function&lt;void  (170 samples, 0.13%)</title><rect x="219.5" y="245" width="1.5" height="15.0" fill="rgb(244,114,9)" rx="2" ry="2" />
<text  x="222.52" y="255.5" ></text>
</g>
<g >
<title>std::__invoke&lt;dnnl::impl::cpu::avx_gemm_f32::get_xbyak_gemm (33 samples, 0.02%)</title><rect x="301.8" y="613" width="0.3" height="15.0" fill="rgb(207,151,34)" rx="2" ry="2" />
<text  x="304.84" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char const*&gt; &gt;::construct&lt;char const*, char const*&gt; (15 samples, 0.01%)</title><rect x="264.9" y="549" width="0.1" height="15.0" fill="rgb(214,1,23)" rx="2" ry="2" />
<text  x="267.85" y="559.5" ></text>
</g>
<g >
<title>syscall (32 samples, 0.02%)</title><rect x="1189.7" y="693" width="0.3" height="15.0" fill="rgb(223,24,6)" rx="2" ry="2" />
<text  x="1192.71" y="703.5" ></text>
</g>
<g >
<title>mshadow::expr::MapPacketPlan&lt;mshadow::sv::multo, mshadow::expr::ScalarExp&lt;float&gt;, 3, float,  (729 samples, 0.54%)</title><rect x="199.2" y="629" width="6.4" height="15.0" fill="rgb(254,109,51)" rx="2" ry="2" />
<text  x="202.18" y="639.5" ></text>
</g>
<g >
<title>MXImperativeInvoke (1,114 samples, 0.83%)</title><rect x="281.0" y="629" width="9.7" height="15.0" fill="rgb(222,101,15)" rx="2" ry="2" />
<text  x="283.98" y="639.5" ></text>
</g>
<g >
<title>mxnet::op::SoftmaxOutputGradCompute&lt;mshadow::cpu&gt; (29 samples, 0.02%)</title><rect x="119.7" y="421" width="0.3" height="15.0" fill="rgb(239,7,51)" rx="2" ry="2" />
<text  x="122.71" y="431.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::ExecuteOprBlock (186 samples, 0.14%)</title><rect x="219.4" y="261" width="1.6" height="15.0" fill="rgb(223,127,3)" rx="2" ry="2" />
<text  x="222.40" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;void*, std::allocator&lt;void*&gt; &gt;::_M_allocate (15 samples, 0.01%)</title><rect x="278.2" y="565" width="0.1" height="15.0" fill="rgb(253,63,21)" rx="2" ry="2" />
<text  x="281.18" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (300 samples, 0.22%)</title><rect x="274.2" y="613" width="2.7" height="15.0" fill="rgb(248,17,44)" rx="2" ry="2" />
<text  x="277.23" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (14 samples, 0.01%)</title><rect x="233.2" y="565" width="0.2" height="15.0" fill="rgb(233,135,20)" rx="2" ry="2" />
<text  x="236.24" y="575.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (203 samples, 0.15%)</title><rect x="10.0" y="693" width="1.8" height="15.0" fill="rgb(252,201,37)" rx="2" ry="2" />
<text  x="13.01" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::engine::Var*, std::allocator&lt;mxnet::engine::Var*&gt; &gt;::vector (15 samples, 0.01%)</title><rect x="247.5" y="581" width="0.1" height="15.0" fill="rgb(237,202,2)" rx="2" ry="2" />
<text  x="250.52" y="591.5" ></text>
</g>
<g >
<title>sgemm_itcopy (531 samples, 0.39%)</title><rect x="1142.3" y="693" width="4.7" height="15.0" fill="rgb(251,51,7)" rx="2" ry="2" />
<text  x="1145.32" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;void*, std::allocator&lt;void*&gt; &gt;::_Vector_impl::_Vector_impl (12 samples, 0.01%)</title><rect x="277.2" y="581" width="0.1" height="15.0" fill="rgb(226,221,4)" rx="2" ry="2" />
<text  x="280.17" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;nnvm::Symbol&gt;, std::allocator&lt;std::shared_ptr&lt;nnvm::Symbol&gt; &gt; &gt;::vector (19 samples, 0.01%)</title><rect x="258.6" y="533" width="0.1" height="15.0" fill="rgb(229,191,48)" rx="2" ry="2" />
<text  x="261.58" y="543.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedOpr::~ThreadedOpr (22 samples, 0.02%)</title><rect x="219.8" y="117" width="0.2" height="15.0" fill="rgb(247,2,35)" rx="2" ry="2" />
<text  x="222.81" y="127.5" ></text>
</g>
<g >
<title>async_page_fault (16 samples, 0.01%)</title><rect x="297.5" y="533" width="0.1" height="15.0" fill="rgb(247,70,19)" rx="2" ry="2" />
<text  x="300.49" y="543.5" ></text>
</g>
<g >
<title>__kmp_GOMP_microtask_wrapper (13 samples, 0.01%)</title><rect x="141.1" y="613" width="0.1" height="15.0" fill="rgb(207,200,32)" rx="2" ry="2" />
<text  x="144.10" y="623.5" ></text>
</g>
<g >
<title>resched_curr (18 samples, 0.01%)</title><rect x="1121.4" y="517" width="0.2" height="15.0" fill="rgb(226,195,1)" rx="2" ry="2" />
<text  x="1124.44" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::_S_key (19 samples, 0.01%)</title><rect x="269.9" y="565" width="0.1" height="15.0" fill="rgb(245,224,22)" rx="2" ry="2" />
<text  x="272.88" y="575.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (2,466 samples, 1.83%)</title><rect x="315.9" y="517" width="21.5" height="15.0" fill="rgb(210,171,23)" rx="2" ry="2" />
<text  x="318.87" y="527.5" >_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (33 samples, 0.02%)</title><rect x="273.3" y="565" width="0.3" height="15.0" fill="rgb(229,90,31)" rx="2" ry="2" />
<text  x="276.30" y="575.5" ></text>
</g>
<g >
<title>kvm_guest_apic_eoi_write (20 samples, 0.01%)</title><rect x="599.6" y="613" width="0.2" height="15.0" fill="rgb(234,189,36)" rx="2" ry="2" />
<text  x="602.60" y="623.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (589 samples, 0.44%)</title><rect x="732.2" y="597" width="5.1" height="15.0" fill="rgb(242,158,35)" rx="2" ry="2" />
<text  x="735.17" y="607.5" ></text>
</g>
<g >
<title>nnvm::NodeAttrs::~NodeAttrs (13 samples, 0.01%)</title><rect x="283.5" y="533" width="0.1" height="15.0" fill="rgb(206,26,33)" rx="2" ry="2" />
<text  x="286.51" y="543.5" ></text>
</g>
<g >
<title>[perf-5296.map] (2,290 samples, 1.70%)</title><rect x="121.0" y="677" width="20.0" height="15.0" fill="rgb(233,142,25)" rx="2" ry="2" />
<text  x="124.01" y="687.5" ></text>
</g>
<g >
<title>async_page_fault (20 samples, 0.01%)</title><rect x="410.8" y="677" width="0.2" height="15.0" fill="rgb(251,11,48)" rx="2" ry="2" />
<text  x="413.84" y="687.5" ></text>
</g>
<g >
<title>mxnet::op::SGDStorageType (13 samples, 0.01%)</title><rect x="287.1" y="533" width="0.1" height="15.0" fill="rgb(244,222,32)" rx="2" ry="2" />
<text  x="290.05" y="543.5" ></text>
</g>
<g >
<title>task_work_run (15 samples, 0.01%)</title><rect x="641.4" y="629" width="0.1" height="15.0" fill="rgb(224,65,32)" rx="2" ry="2" />
<text  x="644.38" y="639.5" ></text>
</g>
<g >
<title>mxnet::op::shape_assign (16 samples, 0.01%)</title><rect x="286.8" y="469" width="0.1" height="15.0" fill="rgb(224,185,2)" rx="2" ry="2" />
<text  x="289.76" y="479.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::unordered_map (16 samples, 0.01%)</title><rect x="258.4" y="533" width="0.2" height="15.0" fill="rgb(238,174,29)" rx="2" ry="2" />
<text  x="261.44" y="543.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::qz_a1b0&lt;float, float, void&gt;::operator (71 samples, 0.05%)</title><rect x="195.4" y="597" width="0.7" height="15.0" fill="rgb(220,143,17)" rx="2" ry="2" />
<text  x="198.43" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (28 samples, 0.02%)</title><rect x="223.1" y="581" width="0.2" height="15.0" fill="rgb(253,17,27)" rx="2" ry="2" />
<text  x="226.10" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_Rb_tree_impl (19 samples, 0.01%)</title><rect x="273.9" y="581" width="0.2" height="15.0" fill="rgb(243,196,29)" rx="2" ry="2" />
<text  x="276.90" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int&gt; (181 samples, 0.13%)</title><rect x="230.0" y="565" width="1.6" height="15.0" fill="rgb(218,171,3)" rx="2" ry="2" />
<text  x="233.05" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;bool, int&gt; const*, std::vector&lt;std::pair&lt;bool, int&gt;, std::allocator&lt;std::pair&lt;bool, int&gt; &gt; &gt; &gt;, std::pair&lt;bool, int&gt;*, std::pair&lt;bool, int&gt; &gt; (31 samples, 0.02%)</title><rect x="251.8" y="469" width="0.3" height="15.0" fill="rgb(228,204,2)" rx="2" ry="2" />
<text  x="254.79" y="479.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (20 samples, 0.01%)</title><rect x="731.9" y="565" width="0.2" height="15.0" fill="rgb(254,15,2)" rx="2" ry="2" />
<text  x="734.88" y="575.5" ></text>
</g>
<g >
<title>mxnet::op::OpSignature::AddSign (13 samples, 0.01%)</title><rect x="112.3" y="309" width="0.1" height="15.0" fill="rgb(225,168,10)" rx="2" ry="2" />
<text  x="115.26" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::engine::ThreadedEngine::PushSync (29 samples, 0.02%)</title><rect x="99.5" y="325" width="0.2" height="15.0" fill="rgb(223,40,53)" rx="2" ry="2" />
<text  x="102.48" y="335.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::jit_uni_eltwise_fwd_t&lt; (14 samples, 0.01%)</title><rect x="151.7" y="597" width="0.1" height="15.0" fill="rgb(248,227,36)" rx="2" ry="2" />
<text  x="154.69" y="607.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (12 samples, 0.01%)</title><rect x="458.7" y="677" width="0.1" height="15.0" fill="rgb(233,86,3)" rx="2" ry="2" />
<text  x="461.70" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (12 samples, 0.01%)</title><rect x="283.9" y="437" width="0.1" height="15.0" fill="rgb(212,107,50)" rx="2" ry="2" />
<text  x="286.88" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock (106 samples, 0.08%)</title><rect x="960.6" y="613" width="1.0" height="15.0" fill="rgb(221,133,37)" rx="2" ry="2" />
<text  x="963.65" y="623.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (4,530 samples, 3.36%)</title><rect x="303.4" y="677" width="39.6" height="15.0" fill="rgb(211,112,38)" rx="2" ry="2" />
<text  x="306.39" y="687.5" >pth..</text>
</g>
<g >
<title>handle_mm_fault (14 samples, 0.01%)</title><rect x="297.5" y="469" width="0.1" height="15.0" fill="rgb(221,186,23)" rx="2" ry="2" />
<text  x="300.51" y="479.5" ></text>
</g>
<g >
<title>mxnet::cpp::NDBlob::~NDBlob (529 samples, 0.39%)</title><rect x="218.0" y="501" width="4.6" height="15.0" fill="rgb(221,90,22)" rx="2" ry="2" />
<text  x="220.97" y="511.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;mxnet::Engine&gt;::lock (13 samples, 0.01%)</title><rect x="222.3" y="325" width="0.1" height="15.0" fill="rgb(243,198,3)" rx="2" ry="2" />
<text  x="225.33" y="335.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::imperative::PushFCompute (25 samples, 0.02%)</title><rect x="99.5" y="245" width="0.2" height="15.0" fill="rgb(210,154,34)" rx="2" ry="2" />
<text  x="102.51" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,344 samples, 3.22%)</title><rect x="304.9" y="661" width="38.0" height="15.0" fill="rgb(242,122,48)" rx="2" ry="2" />
<text  x="307.87" y="671.5" >ent..</text>
</g>
<g >
<title>default_send_IPI_mask_sequence_phys (27 samples, 0.02%)</title><rect x="204.8" y="341" width="0.3" height="15.0" fill="rgb(244,124,3)" rx="2" ry="2" />
<text  x="207.84" y="351.5" ></text>
</g>
<g >
<title>__kmp_create_worker (28 samples, 0.02%)</title><rect x="348.0" y="693" width="0.2" height="15.0" fill="rgb(244,164,0)" rx="2" ry="2" />
<text  x="350.99" y="703.5" ></text>
</g>
<g >
<title>mxnet::imperative::SetDependency (59 samples, 0.04%)</title><rect x="285.5" y="565" width="0.5" height="15.0" fill="rgb(251,58,50)" rx="2" ry="2" />
<text  x="288.50" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;void*, std::allocator&lt;void*&gt; &gt;::push_back (253 samples, 0.19%)</title><rect x="277.5" y="613" width="2.2" height="15.0" fill="rgb(232,31,53)" rx="2" ry="2" />
<text  x="280.51" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (18 samples, 0.01%)</title><rect x="284.6" y="437" width="0.1" height="15.0" fill="rgb(253,78,13)" rx="2" ry="2" />
<text  x="287.59" y="447.5" ></text>
</g>
<g >
<title>dnnl::impl::cvt_primtive_args (29 samples, 0.02%)</title><rect x="113.2" y="277" width="0.2" height="15.0" fill="rgb(220,155,21)" rx="2" ry="2" />
<text  x="116.17" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;void  (98 samples, 0.07%)</title><rect x="284.2" y="549" width="0.8" height="15.0" fill="rgb(206,30,54)" rx="2" ry="2" />
<text  x="287.17" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;mxnet::TBlob&gt; &gt;::construct&lt;mxnet::TBlob, mshadow::Tensor&lt;mshadow::cpu, 2, float&gt; &gt; (94 samples, 0.07%)</title><rect x="33.3" y="501" width="0.9" height="15.0" fill="rgb(223,229,21)" rx="2" ry="2" />
<text  x="36.33" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt; &gt; &gt;::lower_bound (209 samples, 0.15%)</title><rect x="299.5" y="613" width="1.8" height="15.0" fill="rgb(249,99,28)" rx="2" ry="2" />
<text  x="302.52" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::reserve (21 samples, 0.02%)</title><rect x="265.0" y="581" width="0.2" height="15.0" fill="rgb(208,117,1)" rx="2" ry="2" />
<text  x="268.00" y="591.5" ></text>
</g>
<g >
<title>dnnl_primitive::execute (50 samples, 0.04%)</title><rect x="109.6" y="293" width="0.5" height="15.0" fill="rgb(240,80,53)" rx="2" ry="2" />
<text  x="112.64" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (16 samples, 0.01%)</title><rect x="284.2" y="421" width="0.2" height="15.0" fill="rgb(231,126,51)" rx="2" ry="2" />
<text  x="287.22" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (17 samples, 0.01%)</title><rect x="284.6" y="421" width="0.1" height="15.0" fill="rgb(208,85,14)" rx="2" ry="2" />
<text  x="287.60" y="431.5" ></text>
</g>
<g >
<title>MXNDArrayFree (527 samples, 0.39%)</title><rect x="218.0" y="485" width="4.6" height="15.0" fill="rgb(218,175,45)" rx="2" ry="2" />
<text  x="220.97" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (20 samples, 0.01%)</title><rect x="283.8" y="469" width="0.2" height="15.0" fill="rgb(214,51,52)" rx="2" ry="2" />
<text  x="286.82" y="479.5" ></text>
</g>
<g >
<title>mxnet::cpp::SGDOptimizer::Update (1,299 samples, 0.96%)</title><rect x="281.0" y="645" width="11.3" height="15.0" fill="rgb(236,22,30)" rx="2" ry="2" />
<text  x="283.97" y="655.5" ></text>
</g>
<g >
<title>mxnet::cpp::NDArray::CopyTo (3,710 samples, 2.75%)</title><rect x="248.2" y="645" width="32.4" height="15.0" fill="rgb(215,101,15)" rx="2" ry="2" />
<text  x="251.19" y="655.5" >mx..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mxnet::NDArray&gt;::construct&lt;mxnet::NDArray, mxnet::NDArray&amp;&gt; (22 samples, 0.02%)</title><rect x="283.3" y="501" width="0.2" height="15.0" fill="rgb(215,43,54)" rx="2" ry="2" />
<text  x="286.26" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;void*, std::allocator&lt;void*&gt; &gt;::_M_check_len (22 samples, 0.02%)</title><rect x="279.3" y="565" width="0.2" height="15.0" fill="rgb(231,78,51)" rx="2" ry="2" />
<text  x="282.30" y="575.5" ></text>
</g>
<g >
<title>mxnet::op::ElemwiseAttr&lt;mxnet::TShape, &amp;mxnet::op::shape_is_none, &amp;mxnet::op::shape_assign, true, &amp;mxnet::op::shape_string[abi:cxx11], -1, -1&gt; (128 samples, 0.09%)</title><rect x="254.3" y="485" width="1.2" height="15.0" fill="rgb(249,63,21)" rx="2" ry="2" />
<text  x="257.34" y="495.5" ></text>
</g>
<g >
<title>__kmp_fork_barrier (7,281 samples, 5.40%)</title><rect x="348.2" y="693" width="63.7" height="15.0" fill="rgb(251,217,47)" rx="2" ry="2" />
<text  x="351.24" y="703.5" >__kmp_..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, dmlc::ThreadedIter&lt;mxnet::DataBatch&gt;::Init (2,785 samples, 2.06%)</title><rect x="11.9" y="613" width="24.4" height="15.0" fill="rgb(245,199,49)" rx="2" ry="2" />
<text  x="14.92" y="623.5" >s..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (12 samples, 0.01%)</title><rect x="239.3" y="613" width="0.1" height="15.0" fill="rgb(253,117,19)" rx="2" ry="2" />
<text  x="242.27" y="623.5" ></text>
</g>
<g >
<title>smp_call_function_many (468 samples, 0.35%)</title><rect x="201.0" y="373" width="4.1" height="15.0" fill="rgb(242,56,14)" rx="2" ry="2" />
<text  x="203.98" y="383.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;mxnet::engine::Var*, std::hash&lt;mxnet::engine::Var*&gt;, std::equal_to&lt;mxnet::engine::Var*&gt;, std::allocator&lt;mxnet::engine::Var*&gt; &gt;::insert (24 samples, 0.02%)</title><rect x="287.6" y="565" width="0.3" height="15.0" fill="rgb(243,81,19)" rx="2" ry="2" />
<text  x="290.65" y="575.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::NewOperator (23 samples, 0.02%)</title><rect x="246.6" y="549" width="0.2" height="15.0" fill="rgb(208,1,24)" rx="2" ry="2" />
<text  x="249.61" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (28 samples, 0.02%)</title><rect x="233.5" y="549" width="0.3" height="15.0" fill="rgb(208,16,37)" rx="2" ry="2" />
<text  x="236.53" y="559.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::gemm_utils::sum_two_matrices&lt;float&gt; (48 samples, 0.04%)</title><rect x="198.0" y="581" width="0.5" height="15.0" fill="rgb(240,168,21)" rx="2" ry="2" />
<text  x="201.04" y="591.5" ></text>
</g>
<g >
<title>mxnet::cpp::Operator::Invoke (1,716 samples, 1.27%)</title><rect x="248.4" y="629" width="15.0" height="15.0" fill="rgb(214,181,24)" rx="2" ry="2" />
<text  x="251.42" y="639.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (13 samples, 0.01%)</title><rect x="290.8" y="613" width="0.1" height="15.0" fill="rgb(252,128,44)" rx="2" ry="2" />
<text  x="293.83" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;mxnet::DataBatch*, std::allocator&lt;mxnet::DataBatch*&gt; &gt;::size (18 samples, 0.01%)</title><rect x="13.1" y="533" width="0.2" height="15.0" fill="rgb(206,164,19)" rx="2" ry="2" />
<text  x="16.15" y="543.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPool&lt;mxnet::engine::ThreadedOpr&gt;::New&lt;&gt; (19 samples, 0.01%)</title><rect x="245.0" y="533" width="0.1" height="15.0" fill="rgb(234,142,24)" rx="2" ry="2" />
<text  x="247.96" y="543.5" ></text>
</g>
<g >
<title>MXImperativeInvoke (1,344 samples, 1.00%)</title><rect x="249.0" y="597" width="11.7" height="15.0" fill="rgb(231,122,38)" rx="2" ry="2" />
<text  x="251.96" y="607.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;mxnet::TBlob*&gt; (18 samples, 0.01%)</title><rect x="33.1" y="469" width="0.2" height="15.0" fill="rgb(247,130,5)" rx="2" ry="2" />
<text  x="36.09" y="479.5" ></text>
</g>
<g >
<title>mxnet::cpp::MXDataIter::GetIndex (1,607 samples, 1.19%)</title><rect x="225.3" y="629" width="14.1" height="15.0" fill="rgb(251,0,0)" rx="2" ry="2" />
<text  x="228.34" y="639.5" ></text>
</g>
<g >
<title>mxnet::op::broadcast::seq_reduce_compute&lt;mshadow::red::sum, 2, float, float, float, mxnet::op::mshadow_op::identity&gt; (1,771 samples, 1.31%)</title><rect x="161.2" y="613" width="15.5" height="15.0" fill="rgb(216,142,21)" rx="2" ry="2" />
<text  x="164.17" y="623.5" ></text>
</g>
<g >
<title>do_async_page_fault (88 samples, 0.07%)</title><rect x="1146.2" y="661" width="0.7" height="15.0" fill="rgb(217,150,15)" rx="2" ry="2" />
<text  x="1149.17" y="671.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPoolAllocatable&lt;mxnet::engine::VersionedVarBlock&gt;::New&lt;&gt; (15 samples, 0.01%)</title><rect x="221.1" y="261" width="0.1" height="15.0" fill="rgb(227,148,1)" rx="2" ry="2" />
<text  x="224.09" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (842 samples, 0.62%)</title><rect x="23.4" y="453" width="7.3" height="15.0" fill="rgb(208,129,43)" rx="2" ry="2" />
<text  x="26.38" y="463.5" ></text>
</g>
<g >
<title>__handle_mm_fault (13 samples, 0.01%)</title><rect x="297.5" y="453" width="0.1" height="15.0" fill="rgb(222,128,54)" rx="2" ry="2" />
<text  x="300.52" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt;::clear (26 samples, 0.02%)</title><rect x="33.1" y="517" width="0.2" height="15.0" fill="rgb(241,18,1)" rx="2" ry="2" />
<text  x="36.08" y="527.5" ></text>
</g>
<g >
<title>MXDataIterGetData (121 samples, 0.09%)</title><rect x="223.6" y="613" width="1.0" height="15.0" fill="rgb(222,36,14)" rx="2" ry="2" />
<text  x="226.59" y="623.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::swap (12 samples, 0.01%)</title><rect x="241.5" y="549" width="0.1" height="15.0" fill="rgb(246,176,24)" rx="2" ry="2" />
<text  x="244.50" y="559.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::Push (121 samples, 0.09%)</title><rect x="245.4" y="565" width="1.1" height="15.0" fill="rgb(208,7,21)" rx="2" ry="2" />
<text  x="248.43" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::operator[] (35 samples, 0.03%)</title><rect x="222.6" y="629" width="0.3" height="15.0" fill="rgb(216,19,9)" rx="2" ry="2" />
<text  x="225.64" y="639.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::jit_avx_gemm_f32 (50 samples, 0.04%)</title><rect x="113.7" y="85" width="0.5" height="15.0" fill="rgb(248,53,42)" rx="2" ry="2" />
<text  x="116.74" y="95.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (13 samples, 0.01%)</title><rect x="290.5" y="581" width="0.1" height="15.0" fill="rgb(229,56,24)" rx="2" ry="2" />
<text  x="293.48" y="591.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (19 samples, 0.01%)</title><rect x="284.6" y="453" width="0.2" height="15.0" fill="rgb(247,6,23)" rx="2" ry="2" />
<text  x="287.59" y="463.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel&lt;dnnl::impl::cpu::jit_uni_eltwise_bwd_t&lt; (93 samples, 0.07%)</title><rect x="150.9" y="613" width="0.8" height="15.0" fill="rgb(228,92,14)" rx="2" ry="2" />
<text  x="153.85" y="623.5" ></text>
</g>
<g >
<title>mxnet::NDArray::GetMKLDNNDataReorder (33 samples, 0.02%)</title><rect x="115.0" y="325" width="0.2" height="15.0" fill="rgb(218,64,11)" rx="2" ry="2" />
<text  x="117.95" y="335.5" ></text>
</g>
<g >
<title>mxnet::NDArray::data (35 samples, 0.03%)</title><rect x="37.6" y="437" width="0.3" height="15.0" fill="rgb(228,147,28)" rx="2" ry="2" />
<text  x="40.58" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (17 samples, 0.01%)</title><rect x="273.4" y="549" width="0.2" height="15.0" fill="rgb(239,141,34)" rx="2" ry="2" />
<text  x="276.43" y="559.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;void**&gt;, void**&gt; (13 samples, 0.01%)</title><rect x="261.6" y="485" width="0.1" height="15.0" fill="rgb(235,187,17)" rx="2" ry="2" />
<text  x="264.61" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;void**&gt;, void**, void*&gt; (61 samples, 0.05%)</title><rect x="278.6" y="549" width="0.6" height="15.0" fill="rgb(214,143,13)" rx="2" ry="2" />
<text  x="281.62" y="559.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;bool, int&gt; const&amp;&gt; (35 samples, 0.03%)</title><rect x="106.3" y="357" width="0.3" height="15.0" fill="rgb(206,85,18)" rx="2" ry="2" />
<text  x="109.27" y="367.5" ></text>
</g>
<g >
<title>[unknown] (25,988 samples, 19.27%)</title><rect x="120.2" y="693" width="227.4" height="15.0" fill="rgb(245,13,39)" rx="2" ry="2" />
<text  x="123.23" y="703.5" >[unknown]</text>
</g>
<g >
<title>__perf_event_task_sched_in (16 samples, 0.01%)</title><rect x="348.0" y="613" width="0.2" height="15.0" fill="rgb(210,186,13)" rx="2" ry="2" />
<text  x="351.04" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (30 samples, 0.02%)</title><rect x="233.5" y="565" width="0.3" height="15.0" fill="rgb(240,227,15)" rx="2" ry="2" />
<text  x="236.51" y="575.5" ></text>
</g>
<g >
<title>dmlc::parameter::ParamManager::RunInit&lt;std::__detail::_Node_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, true&gt; &gt; (152 samples, 0.11%)</title><rect x="288.5" y="517" width="1.4" height="15.0" fill="rgb(238,193,0)" rx="2" ry="2" />
<text  x="291.52" y="527.5" ></text>
</g>
<g >
<title>async_page_fault (14 samples, 0.01%)</title><rect x="11.6" y="677" width="0.2" height="15.0" fill="rgb(228,229,36)" rx="2" ry="2" />
<text  x="14.64" y="687.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::imperative::PushFCompute (64 samples, 0.05%)</title><rect x="282.6" y="517" width="0.6" height="15.0" fill="rgb(206,162,23)" rx="2" ry="2" />
<text  x="285.63" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (13 samples, 0.01%)</title><rect x="258.4" y="517" width="0.2" height="15.0" fill="rgb(214,141,45)" rx="2" ry="2" />
<text  x="261.45" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;void*, std::allocator&lt;void*&gt; &gt;::_Vector_base (20 samples, 0.01%)</title><rect x="277.2" y="597" width="0.1" height="15.0" fill="rgb(213,16,46)" rx="2" ry="2" />
<text  x="280.15" y="607.5" ></text>
</g>
<g >
<title>mxnet::op::FullyConnectedGradCompute&lt;mshadow::cpu&gt; (294 samples, 0.22%)</title><rect x="117.1" y="421" width="2.6" height="15.0" fill="rgb(220,220,51)" rx="2" ry="2" />
<text  x="120.14" y="431.5" ></text>
</g>
<g >
<title>mxnet::op::FlattenAs2DTail&lt;mshadow::cpu, float&gt; (12 samples, 0.01%)</title><rect x="119.5" y="389" width="0.1" height="15.0" fill="rgb(245,223,29)" rx="2" ry="2" />
<text  x="122.51" y="399.5" ></text>
</g>
<g >
<title>native_apic_mem_write (13 samples, 0.01%)</title><rect x="641.3" y="597" width="0.1" height="15.0" fill="rgb(250,36,50)" rx="2" ry="2" />
<text  x="644.27" y="607.5" ></text>
</g>
<g >
<title>std::function&lt;void  (29 samples, 0.02%)</title><rect x="99.5" y="373" width="0.2" height="15.0" fill="rgb(210,165,15)" rx="2" ry="2" />
<text  x="102.48" y="383.5" ></text>
</g>
<g >
<title>mxnet::cpp::NDArray::~NDArray (29 samples, 0.02%)</title><rect x="223.1" y="629" width="0.2" height="15.0" fill="rgb(210,45,41)" rx="2" ry="2" />
<text  x="226.09" y="639.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;void*, std::move_iterator&lt;void**&gt; &gt; (19 samples, 0.01%)</title><rect x="278.5" y="549" width="0.1" height="15.0" fill="rgb(205,91,41)" rx="2" ry="2" />
<text  x="281.46" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (13 samples, 0.01%)</title><rect x="297.0" y="501" width="0.1" height="15.0" fill="rgb(233,144,14)" rx="2" ry="2" />
<text  x="299.97" y="511.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::jit_uni_eltwise_bwd_t&lt; (27 samples, 0.02%)</title><rect x="196.1" y="613" width="0.3" height="15.0" fill="rgb(234,124,50)" rx="2" ry="2" />
<text  x="199.11" y="623.5" ></text>
</g>
<g >
<title>MXExecutorBackwardEx (16 samples, 0.01%)</title><rect x="243.5" y="613" width="0.1" height="15.0" fill="rgb(222,105,39)" rx="2" ry="2" />
<text  x="246.49" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (38 samples, 0.03%)</title><rect x="279.9" y="565" width="0.3" height="15.0" fill="rgb(229,210,47)" rx="2" ry="2" />
<text  x="282.89" y="575.5" ></text>
</g>
<g >
<title>mxnet::GetMemDesc (23 samples, 0.02%)</title><rect x="111.8" y="341" width="0.2" height="15.0" fill="rgb(206,89,27)" rx="2" ry="2" />
<text  x="114.79" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (40 samples, 0.03%)</title><rect x="236.6" y="453" width="0.3" height="15.0" fill="rgb(254,184,30)" rx="2" ry="2" />
<text  x="239.60" y="463.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (107 samples, 0.08%)</title><rect x="300.2" y="565" width="0.9" height="15.0" fill="rgb(242,73,17)" rx="2" ry="2" />
<text  x="303.19" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::engine::Var*, std::allocator&lt;mxnet::engine::Var*&gt; &gt;::vector (16 samples, 0.01%)</title><rect x="221.6" y="309" width="0.1" height="15.0" fill="rgb(226,115,51)" rx="2" ry="2" />
<text  x="224.56" y="319.5" ></text>
</g>
<g >
<title>sched_setaffinity (32 samples, 0.02%)</title><rect x="1189.7" y="629" width="0.3" height="15.0" fill="rgb(253,160,36)" rx="2" ry="2" />
<text  x="1192.71" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;void*, std::allocator&lt;void*&gt; &gt;::emplace_back&lt;void*&gt; (238 samples, 0.18%)</title><rect x="277.6" y="597" width="2.1" height="15.0" fill="rgb(219,40,38)" rx="2" ry="2" />
<text  x="280.60" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::imperative::PushFCompute (42 samples, 0.03%)</title><rect x="284.2" y="533" width="0.3" height="15.0" fill="rgb(226,51,28)" rx="2" ry="2" />
<text  x="287.17" y="543.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (167 samples, 0.12%)</title><rect x="219.5" y="229" width="1.5" height="15.0" fill="rgb(225,182,48)" rx="2" ry="2" />
<text  x="222.55" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (38 samples, 0.03%)</title><rect x="273.3" y="597" width="0.3" height="15.0" fill="rgb(237,222,37)" rx="2" ry="2" />
<text  x="276.28" y="607.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, mxnet::cpp::NDArray, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt; &gt; &gt;::lower_bound (219 samples, 0.16%)</title><rect x="299.4" y="629" width="1.9" height="15.0" fill="rgb(222,201,38)" rx="2" ry="2" />
<text  x="302.43" y="639.5" ></text>
</g>
<g >
<title>mxnet::imperative::SetShapeType (142 samples, 0.11%)</title><rect x="286.3" y="581" width="1.2" height="15.0" fill="rgb(218,39,41)" rx="2" ry="2" />
<text  x="289.29" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (14 samples, 0.01%)</title><rect x="273.4" y="533" width="0.2" height="15.0" fill="rgb(253,200,43)" rx="2" ry="2" />
<text  x="276.43" y="543.5" ></text>
</g>
<g >
<title>mxnet::TShape::TShape (12 samples, 0.01%)</title><rect x="287.4" y="517" width="0.1" height="15.0" fill="rgb(235,88,13)" rx="2" ry="2" />
<text  x="290.40" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (13 samples, 0.01%)</title><rect x="272.5" y="485" width="0.1" height="15.0" fill="rgb(245,169,38)" rx="2" ry="2" />
<text  x="275.49" y="495.5" ></text>
</g>
<g >
<title>mshadow::SoftmaxGrad&lt;float&gt; (18 samples, 0.01%)</title><rect x="199.0" y="629" width="0.2" height="15.0" fill="rgb(226,114,51)" rx="2" ry="2" />
<text  x="202.03" y="639.5" ></text>
</g>
<g >
<title>clear_buddies (485 samples, 0.36%)</title><rect x="785.9" y="581" width="4.3" height="15.0" fill="rgb(206,202,5)" rx="2" ry="2" />
<text  x="788.91" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.01%)</title><rect x="247.2" y="485" width="0.2" height="15.0" fill="rgb(237,16,22)" rx="2" ry="2" />
<text  x="250.23" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;mxnet::cpp::NDArray&gt; &gt;::allocate (14 samples, 0.01%)</title><rect x="262.8" y="565" width="0.1" height="15.0" fill="rgb(242,17,19)" rx="2" ry="2" />
<text  x="265.82" y="575.5" ></text>
</g>
<g >
<title>migrate_page_copy (18 samples, 0.01%)</title><rect x="25.0" y="357" width="0.2" height="15.0" fill="rgb(219,175,42)" rx="2" ry="2" />
<text  x="28.04" y="367.5" ></text>
</g>
<g >
<title>ptep_clear_flush (470 samples, 0.35%)</title><rect x="201.0" y="421" width="4.1" height="15.0" fill="rgb(247,144,29)" rx="2" ry="2" />
<text  x="203.96" y="431.5" ></text>
</g>
<g >
<title>smp_call_function_interrupt (52 samples, 0.04%)</title><rect x="204.3" y="341" width="0.5" height="15.0" fill="rgb(229,109,13)" rx="2" ry="2" />
<text  x="207.34" y="351.5" ></text>
</g>
<g >
<title>mxnet::op::ElemwiseAttrHelper&lt;mxnet::TShape, &amp;mxnet::op::shape_is_none, &amp;mxnet::op::shape_assign, true, &amp;mxnet::op::shape_string[abi:cxx11], -1, -1&gt; (77 samples, 0.06%)</title><rect x="254.6" y="453" width="0.6" height="15.0" fill="rgb(239,6,0)" rx="2" ry="2" />
<text  x="257.56" y="463.5" ></text>
</g>
<g >
<title>mxnet::io::PrefetcherIter::Init (608 samples, 0.45%)</title><rect x="292.4" y="597" width="5.3" height="15.0" fill="rgb(243,119,42)" rx="2" ry="2" />
<text  x="295.36" y="607.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::unordered_map (24 samples, 0.02%)</title><rect x="284.2" y="469" width="0.2" height="15.0" fill="rgb(205,94,30)" rx="2" ry="2" />
<text  x="287.21" y="479.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::OnCompleteStatic (76 samples, 0.06%)</title><rect x="98.8" y="453" width="0.6" height="15.0" fill="rgb(248,77,16)" rx="2" ry="2" />
<text  x="101.75" y="463.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::assign&lt;long const*&gt; (14 samples, 0.01%)</title><rect x="32.1" y="469" width="0.1" height="15.0" fill="rgb(212,34,48)" rx="2" ry="2" />
<text  x="35.11" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int&gt; (16 samples, 0.01%)</title><rect x="237.9" y="549" width="0.2" height="15.0" fill="rgb(215,135,38)" rx="2" ry="2" />
<text  x="240.91" y="559.5" ></text>
</g>
<g >
<title>mxnet::engine::CallbackOnComplete::operator (25 samples, 0.02%)</title><rect x="98.5" y="469" width="0.2" height="15.0" fill="rgb(249,174,17)" rx="2" ry="2" />
<text  x="101.52" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign (26 samples, 0.02%)</title><rect x="283.8" y="501" width="0.2" height="15.0" fill="rgb(242,132,51)" rx="2" ry="2" />
<text  x="286.81" y="511.5" ></text>
</g>
<g >
<title>std::make_shared&lt;mxnet::cpp::NDBlob, void* const&amp;&gt; (46 samples, 0.03%)</title><rect x="242.6" y="597" width="0.4" height="15.0" fill="rgb(207,162,7)" rx="2" ry="2" />
<text  x="245.60" y="607.5" ></text>
</g>
<g >
<title>setDataIter (608 samples, 0.45%)</title><rect x="292.4" y="645" width="5.3" height="15.0" fill="rgb(220,62,52)" rx="2" ry="2" />
<text  x="295.36" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt; &gt; &gt;::_S_value (23 samples, 0.02%)</title><rect x="299.7" y="565" width="0.2" height="15.0" fill="rgb(243,97,1)" rx="2" ry="2" />
<text  x="302.74" y="575.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel&lt;dnnl::impl::cpu::gemm_inner_product_fwd_t&lt; (44 samples, 0.03%)</title><rect x="114.3" y="197" width="0.4" height="15.0" fill="rgb(247,188,47)" rx="2" ry="2" />
<text  x="117.29" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;bool, int&gt; const*, std::vector&lt;std::pair&lt;bool, int&gt;, std::allocator&lt;std::pair&lt;bool, int&gt; &gt; &gt; &gt;, std::pair&lt;bool, int&gt;*&gt; (31 samples, 0.02%)</title><rect x="251.8" y="437" width="0.3" height="15.0" fill="rgb(238,179,45)" rx="2" ry="2" />
<text  x="254.79" y="447.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPoolAllocatable&lt;mxnet::engine::ThreadedOpr&gt;::New&lt;&gt; (27 samples, 0.02%)</title><rect x="281.7" y="501" width="0.2" height="15.0" fill="rgb(246,131,50)" rx="2" ry="2" />
<text  x="284.69" y="511.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::OnCompleteStatic (122 samples, 0.09%)</title><rect x="219.6" y="181" width="1.0" height="15.0" fill="rgb(254,142,3)" rx="2" ry="2" />
<text  x="222.58" y="191.5" ></text>
</g>
<g >
<title>mxnet::NDArray::NDArray (14 samples, 0.01%)</title><rect x="285.1" y="469" width="0.1" height="15.0" fill="rgb(205,141,15)" rx="2" ry="2" />
<text  x="288.09" y="479.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::simple_reorder_t&lt; (29 samples, 0.02%)</title><rect x="108.1" y="245" width="0.3" height="15.0" fill="rgb(227,183,51)" rx="2" ry="2" />
<text  x="111.13" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::rehash (76 samples, 0.06%)</title><rect x="259.0" y="517" width="0.6" height="15.0" fill="rgb(205,187,16)" rx="2" ry="2" />
<text  x="261.98" y="527.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::OnCompleteStatic (28 samples, 0.02%)</title><rect x="103.0" y="453" width="0.2" height="15.0" fill="rgb(216,74,53)" rx="2" ry="2" />
<text  x="106.00" y="463.5" ></text>
</g>
<g >
<title>mxnet::op::GetActForward (13 samples, 0.01%)</title><rect x="107.7" y="341" width="0.1" height="15.0" fill="rgb(253,111,21)" rx="2" ry="2" />
<text  x="110.68" y="351.5" ></text>
</g>
<g >
<title>mxnet::io::PrefetcherIter::Next (463 samples, 0.34%)</title><rect x="243.9" y="613" width="4.0" height="15.0" fill="rgb(232,209,4)" rx="2" ry="2" />
<text  x="246.86" y="623.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::operator= (14 samples, 0.01%)</title><rect x="241.0" y="549" width="0.1" height="15.0" fill="rgb(205,63,10)" rx="2" ry="2" />
<text  x="244.02" y="559.5" ></text>
</g>
<g >
<title>__handle_mm_fault (830 samples, 0.62%)</title><rect x="23.5" y="437" width="7.2" height="15.0" fill="rgb(250,68,30)" rx="2" ry="2" />
<text  x="26.47" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;dmlc::any, std::default_delete&lt;dmlc::any&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;dmlc::any, std::default_delete&lt;dmlc::any&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (17 samples, 0.01%)</title><rect x="103.4" y="373" width="0.2" height="15.0" fill="rgb(211,181,8)" rx="2" ry="2" />
<text  x="106.43" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (328 samples, 0.24%)</title><rect x="117.1" y="437" width="2.9" height="15.0" fill="rgb(210,143,40)" rx="2" ry="2" />
<text  x="120.11" y="447.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedVar::CompleteWriteDependency&lt;mxnet::engine::ThreadedEngine::OnComplete (31 samples, 0.02%)</title><rect x="220.3" y="149" width="0.3" height="15.0" fill="rgb(222,16,38)" rx="2" ry="2" />
<text  x="223.28" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;::_M_valptr (24 samples, 0.02%)</title><rect x="267.9" y="517" width="0.2" height="15.0" fill="rgb(216,8,20)" rx="2" ry="2" />
<text  x="270.93" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (27 samples, 0.02%)</title><rect x="308.3" y="533" width="0.2" height="15.0" fill="rgb(214,133,37)" rx="2" ry="2" />
<text  x="311.31" y="543.5" ></text>
</g>
<g >
<title>__clone (25 samples, 0.02%)</title><rect x="348.0" y="677" width="0.2" height="15.0" fill="rgb(235,181,50)" rx="2" ry="2" />
<text  x="350.99" y="687.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (114 samples, 0.08%)</title><rect x="300.1" y="581" width="1.0" height="15.0" fill="rgb(206,148,3)" rx="2" ry="2" />
<text  x="303.13" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (178 samples, 0.13%)</title><rect x="254.2" y="517" width="1.5" height="15.0" fill="rgb(226,181,2)" rx="2" ry="2" />
<text  x="257.18" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (58 samples, 0.04%)</title><rect x="275.7" y="549" width="0.5" height="15.0" fill="rgb(214,131,45)" rx="2" ry="2" />
<text  x="278.70" y="559.5" ></text>
</g>
<g >
<title>mxnet::cpp::MXDataIter::Next (503 samples, 0.37%)</title><rect x="243.7" y="645" width="4.4" height="15.0" fill="rgb(214,157,7)" rx="2" ry="2" />
<text  x="246.73" y="655.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (56 samples, 0.04%)</title><rect x="275.2" y="565" width="0.5" height="15.0" fill="rgb(222,34,6)" rx="2" ry="2" />
<text  x="278.19" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::_S_key (65 samples, 0.05%)</title><rect x="267.6" y="549" width="0.6" height="15.0" fill="rgb(214,100,17)" rx="2" ry="2" />
<text  x="270.63" y="559.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, void*, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::lower_bound (225 samples, 0.17%)</title><rect x="270.9" y="581" width="2.0" height="15.0" fill="rgb(219,84,44)" rx="2" ry="2" />
<text  x="273.91" y="591.5" ></text>
</g>
<g >
<title>kvm_guest_apic_eoi_write (14 samples, 0.01%)</title><rect x="961.6" y="581" width="0.1" height="15.0" fill="rgb(223,89,21)" rx="2" ry="2" />
<text  x="964.58" y="591.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (240 samples, 0.18%)</title><rect x="874.6" y="597" width="2.1" height="15.0" fill="rgb(238,180,30)" rx="2" ry="2" />
<text  x="877.61" y="607.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::OnComplete (18 samples, 0.01%)</title><rect x="99.2" y="405" width="0.2" height="15.0" fill="rgb(212,202,6)" rx="2" ry="2" />
<text  x="102.21" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (87 samples, 0.06%)</title><rect x="272.0" y="501" width="0.8" height="15.0" fill="rgb(206,6,12)" rx="2" ry="2" />
<text  x="275.03" y="511.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPoolAllocatable&lt;mxnet::engine::VersionedVarBlock&gt;::Delete (13 samples, 0.01%)</title><rect x="220.4" y="133" width="0.1" height="15.0" fill="rgb(241,25,5)" rx="2" ry="2" />
<text  x="223.41" y="143.5" ></text>
</g>
<g >
<title>mxnet::imperative::SetNumOutputs (38 samples, 0.03%)</title><rect x="259.8" y="565" width="0.3" height="15.0" fill="rgb(246,166,28)" rx="2" ry="2" />
<text  x="262.77" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::lower_bound (213 samples, 0.16%)</title><rect x="271.0" y="565" width="1.9" height="15.0" fill="rgb(243,94,41)" rx="2" ry="2" />
<text  x="274.01" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::emplace_back&lt;int&gt; (1,355 samples, 1.00%)</title><rect x="227.4" y="597" width="11.8" height="15.0" fill="rgb(252,44,27)" rx="2" ry="2" />
<text  x="230.39" y="607.5" ></text>
</g>
<g >
<title>rmap_walk_anon (477 samples, 0.35%)</title><rect x="200.9" y="453" width="4.2" height="15.0" fill="rgb(232,123,38)" rx="2" ry="2" />
<text  x="203.90" y="463.5" ></text>
</g>
<g >
<title>native_apic_mem_write (44 samples, 0.03%)</title><rect x="204.4" y="309" width="0.4" height="15.0" fill="rgb(226,209,48)" rx="2" ry="2" />
<text  x="207.41" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (62 samples, 0.05%)</title><rect x="275.7" y="565" width="0.5" height="15.0" fill="rgb(239,47,13)" rx="2" ry="2" />
<text  x="278.69" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;mxnet::NDArray const*, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; &gt;, mxnet::NDArray*&gt; (16 samples, 0.01%)</title><rect x="285.1" y="501" width="0.1" height="15.0" fill="rgb(253,10,0)" rx="2" ry="2" />
<text  x="288.08" y="511.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPoolAllocatable&lt;mxnet::engine::ThreadedOpr&gt;::Delete (36 samples, 0.03%)</title><rect x="99.5" y="421" width="0.3" height="15.0" fill="rgb(217,41,0)" rx="2" ry="2" />
<text  x="102.46" y="431.5" ></text>
</g>
<g >
<title>mxnet::op::GetFCFwd (56 samples, 0.04%)</title><rect x="112.2" y="341" width="0.5" height="15.0" fill="rgb(239,221,10)" rx="2" ry="2" />
<text  x="115.19" y="351.5" ></text>
</g>
<g >
<title>nnvm::OpMap&lt;bool&gt;::OpMap (35 samples, 0.03%)</title><rect x="251.8" y="501" width="0.3" height="15.0" fill="rgb(228,39,41)" rx="2" ry="2" />
<text  x="254.76" y="511.5" ></text>
</g>
<g >
<title>mxnet::common::ConvertToNumpyShape (40 samples, 0.03%)</title><rect x="253.2" y="533" width="0.3" height="15.0" fill="rgb(215,52,41)" rx="2" ry="2" />
<text  x="256.19" y="543.5" ></text>
</g>
<g >
<title>mxnet::MKLDNNRun (69 samples, 0.05%)</title><rect x="107.2" y="405" width="0.6" height="15.0" fill="rgb(234,2,37)" rx="2" ry="2" />
<text  x="110.21" y="415.5" ></text>
</g>
<g >
<title>mxnet::TShape::FlatTo2D (20 samples, 0.01%)</title><rect x="32.5" y="517" width="0.2" height="15.0" fill="rgb(244,73,0)" rx="2" ry="2" />
<text  x="35.51" y="527.5" ></text>
</g>
<g >
<title>yield_task_fair (582 samples, 0.43%)</title><rect x="978.8" y="645" width="5.1" height="15.0" fill="rgb(226,50,52)" rx="2" ry="2" />
<text  x="981.77" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;::_M_valptr (14 samples, 0.01%)</title><rect x="271.6" y="501" width="0.1" height="15.0" fill="rgb(224,196,12)" rx="2" ry="2" />
<text  x="274.62" y="511.5" ></text>
</g>
<g >
<title>__kmp_launch_thread (73 samples, 0.05%)</title><rect x="1189.0" y="661" width="0.7" height="15.0" fill="rgb(236,57,36)" rx="2" ry="2" />
<text  x="1192.03" y="671.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::gemm_inner_product_fwd_t&lt; (44 samples, 0.03%)</title><rect x="114.3" y="181" width="0.4" height="15.0" fill="rgb(218,94,37)" rx="2" ry="2" />
<text  x="117.29" y="191.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (328 samples, 0.24%)</title><rect x="99.8" y="453" width="2.9" height="15.0" fill="rgb(235,121,35)" rx="2" ry="2" />
<text  x="102.83" y="463.5" ></text>
</g>
<g >
<title>std::__invoke&lt;dmlc::ThreadedIter&lt;mxnet::DataBatch&gt;::Init (2,785 samples, 2.06%)</title><rect x="11.9" y="629" width="24.4" height="15.0" fill="rgb(235,180,21)" rx="2" ry="2" />
<text  x="14.92" y="639.5" >s..</text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;mxnet::NDArray**&gt;, mxnet::NDArray**, mxnet::NDArray*&gt; (43 samples, 0.03%)</title><rect x="250.6" y="517" width="0.4" height="15.0" fill="rgb(209,105,30)" rx="2" ry="2" />
<text  x="253.60" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;dnnl::primitive, std::unordered_map&lt;int, dnnl::memory, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::memory&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;dnnl::primitive, std::unordered_map&lt;int, dnnl::memory, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::memory&gt; &gt; &gt; &gt; &gt; &gt;::clear (16 samples, 0.01%)</title><rect x="114.8" y="309" width="0.2" height="15.0" fill="rgb(244,128,10)" rx="2" ry="2" />
<text  x="117.81" y="319.5" ></text>
</g>
<g >
<title>mxnet::TShape::operator= (58 samples, 0.04%)</title><rect x="241.1" y="581" width="0.5" height="15.0" fill="rgb(235,195,15)" rx="2" ry="2" />
<text  x="244.14" y="591.5" ></text>
</g>
<g >
<title>mxnet::NDArray::~NDArray (523 samples, 0.39%)</title><rect x="218.0" y="469" width="4.6" height="15.0" fill="rgb(217,185,36)" rx="2" ry="2" />
<text  x="220.99" y="479.5" ></text>
</g>
<g >
<title>mxnet::TShape::operator=&lt;2&gt; (47 samples, 0.03%)</title><rect x="33.5" y="437" width="0.4" height="15.0" fill="rgb(253,77,20)" rx="2" ry="2" />
<text  x="36.49" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;bool, int&gt;, std::allocator&lt;std::pair&lt;bool, int&gt; &gt; &gt;::vector (343 samples, 0.25%)</title><rect x="103.8" y="437" width="3.0" height="15.0" fill="rgb(248,19,16)" rx="2" ry="2" />
<text  x="106.79" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, dnnl::memory&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::memory&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (12 samples, 0.01%)</title><rect x="110.8" y="325" width="0.1" height="15.0" fill="rgb(222,122,22)" rx="2" ry="2" />
<text  x="113.84" y="335.5" ></text>
</g>
<g >
<title>mxnet::TShape::operator= (14 samples, 0.01%)</title><rect x="240.8" y="581" width="0.1" height="15.0" fill="rgb(234,161,13)" rx="2" ry="2" />
<text  x="243.75" y="591.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, dnnl::impl::memory_arg_t, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::impl::memory_arg_t&gt; &gt; &gt;::operator[] (20 samples, 0.01%)</title><rect x="113.2" y="261" width="0.2" height="15.0" fill="rgb(246,204,23)" rx="2" ry="2" />
<text  x="116.25" y="271.5" ></text>
</g>
<g >
<title>update_min_vruntime (2,065 samples, 1.53%)</title><rect x="854.5" y="565" width="18.0" height="15.0" fill="rgb(212,122,32)" rx="2" ry="2" />
<text  x="857.45" y="575.5" ></text>
</g>
<g >
<title>smp_call_function_interrupt (15 samples, 0.01%)</title><rect x="961.6" y="597" width="0.1" height="15.0" fill="rgb(232,97,12)" rx="2" ry="2" />
<text  x="964.57" y="607.5" ></text>
</g>
<g >
<title>dmlc::Parameter&lt;mxnet::op::SGDParam&gt;::Init&lt;std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (158 samples, 0.12%)</title><rect x="288.5" y="533" width="1.4" height="15.0" fill="rgb(236,63,12)" rx="2" ry="2" />
<text  x="291.52" y="543.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::assign&lt;int const*&gt; (41 samples, 0.03%)</title><rect x="33.5" y="421" width="0.4" height="15.0" fill="rgb(252,100,17)" rx="2" ry="2" />
<text  x="36.53" y="431.5" ></text>
</g>
<g >
<title>mxnet::op::broadcast::seq_reduce_compute&lt;mshadow::red::sum, 2, float, float, float, mxnet::op::mshadow_op::identity&gt; (193 samples, 0.14%)</title><rect x="117.7" y="341" width="1.6" height="15.0" fill="rgb(210,116,13)" rx="2" ry="2" />
<text  x="120.66" y="351.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel_nd&lt;int&amp;, dnnl::impl::cpu::jit_avx_gemm_f32 (56 samples, 0.04%)</title><rect x="113.7" y="117" width="0.5" height="15.0" fill="rgb(233,91,26)" rx="2" ry="2" />
<text  x="116.69" y="127.5" ></text>
</g>
<g >
<title>__schedule (31,101 samples, 23.06%)</title><rect x="688.6" y="613" width="272.0" height="15.0" fill="rgb(224,33,18)" rx="2" ry="2" />
<text  x="691.59" y="623.5" >__schedule</text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_realloc_insert&lt;long&gt; (16 samples, 0.01%)</title><rect x="112.4" y="277" width="0.2" height="15.0" fill="rgb(244,219,12)" rx="2" ry="2" />
<text  x="115.43" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (23 samples, 0.02%)</title><rect x="233.9" y="549" width="0.2" height="15.0" fill="rgb(243,27,24)" rx="2" ry="2" />
<text  x="236.91" y="559.5" ></text>
</g>
<g >
<title>dnnl_primitive_create (29 samples, 0.02%)</title><rect x="108.1" y="261" width="0.3" height="15.0" fill="rgb(231,165,8)" rx="2" ry="2" />
<text  x="111.13" y="271.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (505 samples, 0.37%)</title><rect x="26.0" y="309" width="4.5" height="15.0" fill="rgb(228,76,11)" rx="2" ry="2" />
<text  x="29.03" y="319.5" ></text>
</g>
<g >
<title>mshadow::expr::MapPacketPlan&lt;mshadow::sv::multo, mshadow::expr::ScalarExp&lt;float&gt;, 3, float,  (18 samples, 0.01%)</title><rect x="297.2" y="453" width="0.1" height="15.0" fill="rgb(213,89,39)" rx="2" ry="2" />
<text  x="300.18" y="463.5" ></text>
</g>
<g >
<title>dmlc::io::FileStream::Read (12 samples, 0.01%)</title><rect x="297.1" y="549" width="0.1" height="15.0" fill="rgb(244,6,22)" rx="2" ry="2" />
<text  x="300.08" y="559.5" ></text>
</g>
<g >
<title>std::forward&lt;int&gt; (34 samples, 0.03%)</title><rect x="232.0" y="581" width="0.3" height="15.0" fill="rgb(231,187,9)" rx="2" ry="2" />
<text  x="235.05" y="591.5" ></text>
</g>
<g >
<title>mxnet::cpp::Operator::Invoke (1,529 samples, 1.13%)</title><rect x="248.8" y="613" width="13.4" height="15.0" fill="rgb(241,189,8)" rx="2" ry="2" />
<text  x="251.82" y="623.5" ></text>
</g>
<g >
<title>finish_task_switch (32 samples, 0.02%)</title><rect x="1189.7" y="549" width="0.3" height="15.0" fill="rgb(228,29,35)" rx="2" ry="2" />
<text  x="1192.71" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;mxnet::cpp::NDBlob, std::allocator&lt;mxnet::cpp::NDBlob&gt;,  (22 samples, 0.02%)</title><rect x="223.1" y="549" width="0.2" height="15.0" fill="rgb(224,48,11)" rx="2" ry="2" />
<text  x="226.14" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::TShape, std::allocator&lt;mxnet::TShape&gt; &gt;::_M_erase_at_end (24 samples, 0.02%)</title><rect x="256.3" y="517" width="0.2" height="15.0" fill="rgb(246,98,28)" rx="2" ry="2" />
<text  x="259.33" y="527.5" ></text>
</g>
<g >
<title>mxnet::io::MNISTIter::Shuffle (38 samples, 0.03%)</title><rect x="297.3" y="565" width="0.4" height="15.0" fill="rgb(210,0,47)" rx="2" ry="2" />
<text  x="300.34" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (25 samples, 0.02%)</title><rect x="275.4" y="549" width="0.2" height="15.0" fill="rgb(231,217,49)" rx="2" ry="2" />
<text  x="278.42" y="559.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel_nd&lt;int&amp;, dnnl::impl::cpu::jit_avx_gemm_f32 (59 samples, 0.04%)</title><rect x="113.7" y="149" width="0.5" height="15.0" fill="rgb(215,219,48)" rx="2" ry="2" />
<text  x="116.67" y="159.5" ></text>
</g>
<g >
<title>sgemm_kernel (28 samples, 0.02%)</title><rect x="343.1" y="677" width="0.2" height="15.0" fill="rgb(250,153,0)" rx="2" ry="2" />
<text  x="346.10" y="687.5" ></text>
</g>
<g >
<title>mxnet::NDArray::data (17 samples, 0.01%)</title><rect x="217.0" y="581" width="0.1" height="15.0" fill="rgb(239,142,42)" rx="2" ry="2" />
<text  x="219.98" y="591.5" ></text>
</g>
<g >
<title>mxnet::op::MKLDNNFCForwardFullFeature (319 samples, 0.24%)</title><rect x="112.7" y="341" width="2.8" height="15.0" fill="rgb(208,62,33)" rx="2" ry="2" />
<text  x="115.71" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;dnnl::primitive, std::unordered_map&lt;int, dnnl::memory, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::memory&gt; &gt; &gt; &gt;::~pair (16 samples, 0.01%)</title><rect x="114.8" y="213" width="0.2" height="15.0" fill="rgb(242,139,18)" rx="2" ry="2" />
<text  x="117.81" y="223.5" ></text>
</g>
<g >
<title>mxnet::Engine::DeduplicateVarHandle (25 samples, 0.02%)</title><rect x="285.5" y="549" width="0.2" height="15.0" fill="rgb(246,221,24)" rx="2" ry="2" />
<text  x="288.52" y="559.5" ></text>
</g>
<g >
<title>std::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (13 samples, 0.01%)</title><rect x="275.5" y="501" width="0.1" height="15.0" fill="rgb(235,183,14)" rx="2" ry="2" />
<text  x="278.52" y="511.5" ></text>
</g>
<g >
<title>ttwu_do_activate (26 samples, 0.02%)</title><rect x="1121.4" y="565" width="0.2" height="15.0" fill="rgb(216,79,17)" rx="2" ry="2" />
<text  x="1124.38" y="575.5" ></text>
</g>
<g >
<title>update_rq_clock (9,590 samples, 7.11%)</title><rect x="876.8" y="597" width="83.8" height="15.0" fill="rgb(227,48,1)" rx="2" ry="2" />
<text  x="879.76" y="607.5" >update_rq..</text>
</g>
<g >
<title>dmlc::parameter::ParamManager::RunInit&lt;std::__detail::_Node_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, true&gt; &gt; (55 samples, 0.04%)</title><rect x="111.2" y="325" width="0.5" height="15.0" fill="rgb(251,178,4)" rx="2" ry="2" />
<text  x="114.20" y="335.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel&lt;dnnl::impl::cpu::jit_uni_eltwise_bwd_t&lt; (15 samples, 0.01%)</title><rect x="109.7" y="245" width="0.1" height="15.0" fill="rgb(211,167,48)" rx="2" ry="2" />
<text  x="112.70" y="255.5" ></text>
</g>
<g >
<title>mxnet::cpp::Optimizer::GetParamValues_ (25 samples, 0.02%)</title><rect x="291.4" y="629" width="0.2" height="15.0" fill="rgb(251,204,6)" rx="2" ry="2" />
<text  x="294.36" y="639.5" ></text>
</g>
<g >
<title>std::function&lt;void  (329 samples, 0.24%)</title><rect x="99.8" y="469" width="2.9" height="15.0" fill="rgb(228,44,54)" rx="2" ry="2" />
<text  x="102.82" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;char const*&amp;, char const*&amp;&gt; (37 samples, 0.03%)</title><rect x="290.0" y="549" width="0.3" height="15.0" fill="rgb(233,91,45)" rx="2" ry="2" />
<text  x="293.00" y="559.5" ></text>
</g>
<g >
<title>mxnet::cpp::NDArray::NDArray (12 samples, 0.01%)</title><rect x="248.6" y="613" width="0.1" height="15.0" fill="rgb(206,148,41)" rx="2" ry="2" />
<text  x="251.56" y="623.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPoolAllocatable&lt;mxnet::engine::ThreadedVar&gt;::Delete (21 samples, 0.02%)</title><rect x="220.1" y="149" width="0.2" height="15.0" fill="rgb(221,111,3)" rx="2" ry="2" />
<text  x="223.09" y="159.5" ></text>
</g>
<g >
<title>mxnet::op::ParamParser&lt;mxnet::op::SGDParam&gt; (168 samples, 0.12%)</title><rect x="288.5" y="549" width="1.5" height="15.0" fill="rgb(206,37,10)" rx="2" ry="2" />
<text  x="291.51" y="559.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (13 samples, 0.01%)</title><rect x="270.2" y="549" width="0.1" height="15.0" fill="rgb(253,152,36)" rx="2" ry="2" />
<text  x="273.16" y="559.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::assign&lt;long const*&gt; (19 samples, 0.01%)</title><rect x="31.9" y="469" width="0.2" height="15.0" fill="rgb(254,64,17)" rx="2" ry="2" />
<text  x="34.90" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.02%)</title><rect x="247.2" y="501" width="0.2" height="15.0" fill="rgb(236,176,12)" rx="2" ry="2" />
<text  x="250.20" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;mxnet::NDArray::Chunk,  (19 samples, 0.01%)</title><rect x="240.2" y="533" width="0.2" height="15.0" fill="rgb(250,21,39)" rx="2" ry="2" />
<text  x="243.19" y="543.5" ></text>
</g>
<g >
<title>dnnl::inner_product_forward::primitive_desc::src_desc (17 samples, 0.01%)</title><rect x="112.8" y="325" width="0.1" height="15.0" fill="rgb(247,82,22)" rx="2" ry="2" />
<text  x="115.78" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::TShape, std::allocator&lt;mxnet::TShape&gt; &gt;::push_back (62 samples, 0.05%)</title><rect x="256.6" y="533" width="0.5" height="15.0" fill="rgb(244,67,38)" rx="2" ry="2" />
<text  x="259.55" y="543.5" ></text>
</g>
<g >
<title>kvm_sched_clock_read (263 samples, 0.19%)</title><rect x="880.3" y="565" width="2.3" height="15.0" fill="rgb(228,80,43)" rx="2" ry="2" />
<text  x="883.26" y="575.5" ></text>
</g>
<g >
<title>mshadow::Softmax&lt;float&gt; (56 samples, 0.04%)</title><rect x="198.5" y="629" width="0.5" height="15.0" fill="rgb(208,58,25)" rx="2" ry="2" />
<text  x="201.54" y="639.5" ></text>
</g>
<g >
<title>call_function_interrupt (30 samples, 0.02%)</title><rect x="493.0" y="677" width="0.3" height="15.0" fill="rgb(205,98,17)" rx="2" ry="2" />
<text  x="496.04" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;mxnet::cpp::NDBlob,  (40 samples, 0.03%)</title><rect x="242.7" y="549" width="0.3" height="15.0" fill="rgb(247,199,36)" rx="2" ry="2" />
<text  x="245.65" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign (18 samples, 0.01%)</title><rect x="282.7" y="421" width="0.1" height="15.0" fill="rgb(225,71,46)" rx="2" ry="2" />
<text  x="285.68" y="431.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;mxnet::NDArray const*, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; &gt;, mxnet::NDArray*&gt; (22 samples, 0.02%)</title><rect x="282.9" y="437" width="0.2" height="15.0" fill="rgb(235,16,20)" rx="2" ry="2" />
<text  x="285.93" y="447.5" ></text>
</g>
<g >
<title>mxnet::exec::GraphExecutor::CreateCachedSegOpr (1,953 samples, 1.45%)</title><rect x="103.0" y="485" width="17.0" height="15.0" fill="rgb(235,33,48)" rx="2" ry="2" />
<text  x="105.96" y="495.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;int*&gt;::move_iterator (49 samples, 0.04%)</title><rect x="235.1" y="533" width="0.4" height="15.0" fill="rgb(243,227,45)" rx="2" ry="2" />
<text  x="238.09" y="543.5" ></text>
</g>
<g >
<title>MXImperativeInvokeImpl (1,325 samples, 0.98%)</title><rect x="249.0" y="581" width="11.6" height="15.0" fill="rgb(208,33,10)" rx="2" ry="2" />
<text  x="251.97" y="591.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (202 samples, 0.15%)</title><rect x="254.0" y="533" width="1.8" height="15.0" fill="rgb(243,107,24)" rx="2" ry="2" />
<text  x="257.01" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, dmlc::parameter::FieldAccessEntry*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, dmlc::parameter::FieldAccessEntry*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, dmlc::parameter::FieldAccessEntry*&gt; &gt; &gt;::_M_lower_bound (17 samples, 0.01%)</title><rect x="289.0" y="437" width="0.1" height="15.0" fill="rgb(254,119,34)" rx="2" ry="2" />
<text  x="291.95" y="447.5" ></text>
</g>
<g >
<title>mxnet::cpp::NDArray::NDArray (71 samples, 0.05%)</title><rect x="224.7" y="613" width="0.6" height="15.0" fill="rgb(214,111,47)" rx="2" ry="2" />
<text  x="227.67" y="623.5" ></text>
</g>
<g >
<title>mxnet::imperative::SetWriteInplaceReq (79 samples, 0.06%)</title><rect x="287.5" y="581" width="0.7" height="15.0" fill="rgb(208,81,37)" rx="2" ry="2" />
<text  x="290.54" y="591.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, void**, void**&gt; (18 samples, 0.01%)</title><rect x="278.8" y="485" width="0.2" height="15.0" fill="rgb(212,117,44)" rx="2" ry="2" />
<text  x="281.81" y="495.5" ></text>
</g>
<g >
<title>call_function_interrupt (13 samples, 0.01%)</title><rect x="140.9" y="661" width="0.1" height="15.0" fill="rgb(218,153,17)" rx="2" ry="2" />
<text  x="143.92" y="671.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (2,421 samples, 1.79%)</title><rect x="13.6" y="565" width="21.2" height="15.0" fill="rgb(210,88,10)" rx="2" ry="2" />
<text  x="16.65" y="575.5" ></text>
</g>
<g >
<title>__kmp_GOMP_fork_call (32 samples, 0.02%)</title><rect x="347.7" y="693" width="0.3" height="15.0" fill="rgb(247,216,40)" rx="2" ry="2" />
<text  x="350.70" y="703.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (63 samples, 0.05%)</title><rect x="107.3" y="373" width="0.5" height="15.0" fill="rgb(239,117,49)" rx="2" ry="2" />
<text  x="110.26" y="383.5" ></text>
</g>
<g >
<title>futex_wait (4,228 samples, 3.13%)</title><rect x="305.9" y="597" width="36.9" height="15.0" fill="rgb(248,185,44)" rx="2" ry="2" />
<text  x="308.86" y="607.5" >fut..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (99 samples, 0.07%)</title><rect x="297.8" y="645" width="0.9" height="15.0" fill="rgb(245,212,36)" rx="2" ry="2" />
<text  x="300.82" y="655.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (21 samples, 0.02%)</title><rect x="347.3" y="629" width="0.2" height="15.0" fill="rgb(254,164,6)" rx="2" ry="2" />
<text  x="350.32" y="639.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (99 samples, 0.07%)</title><rect x="271.9" y="533" width="0.9" height="15.0" fill="rgb(241,126,7)" rx="2" ry="2" />
<text  x="274.95" y="543.5" ></text>
</g>
<g >
<title>rmap_walk (558 samples, 0.41%)</title><rect x="25.6" y="373" width="4.9" height="15.0" fill="rgb(253,154,12)" rx="2" ry="2" />
<text  x="28.60" y="383.5" ></text>
</g>
<g >
<title>dnnl::primitive::execute (23 samples, 0.02%)</title><rect x="107.4" y="325" width="0.2" height="15.0" fill="rgb(240,98,28)" rx="2" ry="2" />
<text  x="110.37" y="335.5" ></text>
</g>
<g >
<title>wake_up_q (6,316 samples, 4.68%)</title><rect x="1013.9" y="597" width="55.3" height="15.0" fill="rgb(214,124,10)" rx="2" ry="2" />
<text  x="1016.94" y="607.5" >wake_..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (51 samples, 0.04%)</title><rect x="259.1" y="485" width="0.5" height="15.0" fill="rgb(215,143,54)" rx="2" ry="2" />
<text  x="262.15" y="495.5" ></text>
</g>
<g >
<title>mxnet::op::ActivationGradComputeExCPU (364 samples, 0.27%)</title><rect x="107.8" y="421" width="3.2" height="15.0" fill="rgb(206,110,38)" rx="2" ry="2" />
<text  x="110.84" y="431.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::store (13 samples, 0.01%)</title><rect x="102.8" y="469" width="0.1" height="15.0" fill="rgb(250,7,31)" rx="2" ry="2" />
<text  x="105.82" y="479.5" ></text>
</g>
<g >
<title>dnnl::impl::cvt_primtive_args (23 samples, 0.02%)</title><rect x="109.3" y="293" width="0.2" height="15.0" fill="rgb(246,32,16)" rx="2" ry="2" />
<text  x="112.33" y="303.5" ></text>
</g>
<g >
<title>mxnet::op::ElemwiseAttrHelper&lt;mxnet::TShape, &amp;mxnet::op::shape_is_none, &amp;mxnet::op::shape_assign, true, &amp;mxnet::op::shape_string[abi:cxx11], -1, -1&gt; (28 samples, 0.02%)</title><rect x="286.7" y="501" width="0.2" height="15.0" fill="rgb(222,134,20)" rx="2" ry="2" />
<text  x="289.70" y="511.5" ></text>
</g>
<g >
<title>smp_call_function_interrupt (100 samples, 0.07%)</title><rect x="411.0" y="661" width="0.9" height="15.0" fill="rgb(226,161,32)" rx="2" ry="2" />
<text  x="414.02" y="671.5" ></text>
</g>
<g >
<title>std::isinf (20 samples, 0.01%)</title><rect x="119.2" y="293" width="0.1" height="15.0" fill="rgb(222,87,29)" rx="2" ry="2" />
<text  x="122.15" y="303.5" ></text>
</g>
<g >
<title>__schedule (32 samples, 0.02%)</title><rect x="1189.7" y="565" width="0.3" height="15.0" fill="rgb(252,113,45)" rx="2" ry="2" />
<text  x="1192.71" y="575.5" ></text>
</g>
<g >
<title>mxnet::NDArray::NDArray (19 samples, 0.01%)</title><rect x="216.6" y="581" width="0.1" height="15.0" fill="rgb(217,92,31)" rx="2" ry="2" />
<text  x="219.58" y="591.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (16 samples, 0.01%)</title><rect x="410.8" y="565" width="0.2" height="15.0" fill="rgb(216,75,18)" rx="2" ry="2" />
<text  x="413.84" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (360 samples, 0.27%)</title><rect x="107.9" y="373" width="3.1" height="15.0" fill="rgb(230,205,39)" rx="2" ry="2" />
<text  x="110.86" y="383.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPool&lt;mxnet::engine::ThreadedOpr&gt;::Delete (35 samples, 0.03%)</title><rect x="99.5" y="405" width="0.3" height="15.0" fill="rgb(205,178,41)" rx="2" ry="2" />
<text  x="102.46" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,978 samples, 4.43%)</title><rect x="1069.3" y="677" width="52.3" height="15.0" fill="rgb(245,112,9)" rx="2" ry="2" />
<text  x="1072.34" y="687.5" >entry..</text>
</g>
<g >
<title>dnnl::impl::parallel_nd&lt;int&amp;, dnnl::impl::cpu::jit_avx_gemm_f32 (449 samples, 0.33%)</title><rect x="154.2" y="613" width="3.9" height="15.0" fill="rgb(234,57,49)" rx="2" ry="2" />
<text  x="157.21" y="623.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;int*&gt;::base (20 samples, 0.01%)</title><rect x="237.4" y="469" width="0.2" height="15.0" fill="rgb(211,41,21)" rx="2" ry="2" />
<text  x="240.42" y="479.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::imperative::PushFCompute (61 samples, 0.05%)</title><rect x="282.7" y="501" width="0.5" height="15.0" fill="rgb(253,226,19)" rx="2" ry="2" />
<text  x="285.65" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt;::vector (23 samples, 0.02%)</title><rect x="285.0" y="549" width="0.2" height="15.0" fill="rgb(209,209,24)" rx="2" ry="2" />
<text  x="288.02" y="559.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (18 samples, 0.01%)</title><rect x="308.4" y="469" width="0.1" height="15.0" fill="rgb(219,124,19)" rx="2" ry="2" />
<text  x="311.39" y="479.5" ></text>
</g>
<g >
<title>sgemm_otcopy (238 samples, 0.18%)</title><rect x="344.7" y="677" width="2.1" height="15.0" fill="rgb(246,130,2)" rx="2" ry="2" />
<text  x="347.72" y="687.5" ></text>
</g>
<g >
<title>rmap_walk_anon (23 samples, 0.02%)</title><rect x="25.3" y="357" width="0.2" height="15.0" fill="rgb(219,130,11)" rx="2" ry="2" />
<text  x="28.34" y="367.5" ></text>
</g>
<g >
<title>mxnet::op::FullyConnectedComputeExCPU (592 samples, 0.44%)</title><rect x="111.0" y="421" width="5.2" height="15.0" fill="rgb(253,13,23)" rx="2" ry="2" />
<text  x="114.03" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;int&gt; (67 samples, 0.05%)</title><rect x="231.0" y="549" width="0.6" height="15.0" fill="rgb(208,37,43)" rx="2" ry="2" />
<text  x="234.04" y="559.5" ></text>
</g>
<g >
<title>migrate_page (14 samples, 0.01%)</title><rect x="200.7" y="469" width="0.1" height="15.0" fill="rgb(250,197,52)" rx="2" ry="2" />
<text  x="203.67" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree (30 samples, 0.02%)</title><rect x="273.9" y="597" width="0.2" height="15.0" fill="rgb(209,118,9)" rx="2" ry="2" />
<text  x="276.85" y="607.5" ></text>
</g>
<g >
<title>drop_futex_key_refs.isra.15 (24 samples, 0.02%)</title><rect x="305.7" y="597" width="0.2" height="15.0" fill="rgb(243,65,34)" rx="2" ry="2" />
<text  x="308.65" y="607.5" ></text>
</g>
<g >
<title>dmlc::parameter::ParamManager::RunUpdate&lt;std::__detail::_Node_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, true&gt; &gt; (98 samples, 0.07%)</title><rect x="288.6" y="501" width="0.9" height="15.0" fill="rgb(237,143,1)" rx="2" ry="2" />
<text  x="291.60" y="511.5" ></text>
</g>
<g >
<title>mxnet::io::MNISTIter::Init (608 samples, 0.45%)</title><rect x="292.4" y="581" width="5.3" height="15.0" fill="rgb(219,216,9)" rx="2" ry="2" />
<text  x="295.36" y="591.5" ></text>
</g>
<g >
<title>mxnet::imperative::PushFCompute (48 samples, 0.04%)</title><rect x="284.6" y="485" width="0.4" height="15.0" fill="rgb(207,110,33)" rx="2" ry="2" />
<text  x="287.55" y="495.5" ></text>
</g>
<g >
<title>mxnet::dim_size_is_known (23 samples, 0.02%)</title><rect x="254.9" y="421" width="0.2" height="15.0" fill="rgb(232,227,23)" rx="2" ry="2" />
<text  x="257.91" y="431.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::qz_a1b0&lt;float, float, void&gt;::operator (18 samples, 0.01%)</title><rect x="197.2" y="597" width="0.1" height="15.0" fill="rgb(222,186,28)" rx="2" ry="2" />
<text  x="200.18" y="607.5" ></text>
</g>
<g >
<title>try_to_unmap (478 samples, 0.35%)</title><rect x="200.9" y="485" width="4.2" height="15.0" fill="rgb(243,208,26)" rx="2" ry="2" />
<text  x="203.89" y="495.5" ></text>
</g>
<g >
<title>dmlc::ThreadedIter&lt;mxnet::DataBatch&gt;::Next (54 samples, 0.04%)</title><rect x="243.9" y="597" width="0.5" height="15.0" fill="rgb(208,14,51)" rx="2" ry="2" />
<text  x="246.95" y="607.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;bool, int&gt; const*, std::vector&lt;std::pair&lt;bool, int&gt;, std::allocator&lt;std::pair&lt;bool, int&gt; &gt; &gt; &gt;, std::pair&lt;bool, int&gt;*&gt; (31 samples, 0.02%)</title><rect x="251.8" y="453" width="0.3" height="15.0" fill="rgb(207,181,46)" rx="2" ry="2" />
<text  x="254.79" y="463.5" ></text>
</g>
<g >
<title>dnnl::impl::math::get_bias (105 samples, 0.08%)</title><rect x="148.1" y="565" width="0.9" height="15.0" fill="rgb(228,2,26)" rx="2" ry="2" />
<text  x="151.10" y="575.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;dmlc::any, std::default_delete&lt;dmlc::any&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;dmlc::any, std::default_delete&lt;dmlc::any&gt; &gt; &gt; &gt; &gt;::find (24 samples, 0.02%)</title><rect x="103.4" y="421" width="0.2" height="15.0" fill="rgb(223,202,13)" rx="2" ry="2" />
<text  x="106.41" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt;::resize (19 samples, 0.01%)</title><rect x="288.1" y="565" width="0.1" height="15.0" fill="rgb(227,120,8)" rx="2" ry="2" />
<text  x="291.06" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;mxnet::cpp::NDArray const*, mxnet::cpp::NDArray*, mxnet::cpp::NDArray&gt; (25 samples, 0.02%)</title><rect x="263.0" y="581" width="0.2" height="15.0" fill="rgb(211,173,33)" rx="2" ry="2" />
<text  x="265.98" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;mxnet::cpp::NDBlob,  (549 samples, 0.41%)</title><rect x="217.8" y="597" width="4.8" height="15.0" fill="rgb(240,113,24)" rx="2" ry="2" />
<text  x="220.82" y="607.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, dnnl::memory, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::memory&gt; &gt; &gt;::~unordered_map (12 samples, 0.01%)</title><rect x="114.8" y="197" width="0.2" height="15.0" fill="rgb(254,89,41)" rx="2" ry="2" />
<text  x="117.85" y="207.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::OnComplete (21 samples, 0.02%)</title><rect x="98.6" y="437" width="0.1" height="15.0" fill="rgb(232,124,51)" rx="2" ry="2" />
<text  x="101.55" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::_S_key (43 samples, 0.03%)</title><rect x="271.5" y="533" width="0.3" height="15.0" fill="rgb(212,202,28)" rx="2" ry="2" />
<text  x="274.47" y="543.5" ></text>
</g>
<g >
<title>handle_mm_fault (88 samples, 0.07%)</title><rect x="1146.2" y="613" width="0.7" height="15.0" fill="rgb(246,222,24)" rx="2" ry="2" />
<text  x="1149.17" y="623.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (41 samples, 0.03%)</title><rect x="268.7" y="501" width="0.4" height="15.0" fill="rgb(241,229,9)" rx="2" ry="2" />
<text  x="271.73" y="511.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;mxnet::NDArray::Chunk&gt;::shared_ptr (19 samples, 0.01%)</title><rect x="240.2" y="549" width="0.2" height="15.0" fill="rgb(245,27,54)" rx="2" ry="2" />
<text  x="243.19" y="559.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::avx_gemm_f32::xbyak_gemm::xbyak_gemm (25 samples, 0.02%)</title><rect x="301.9" y="501" width="0.2" height="15.0" fill="rgb(215,7,33)" rx="2" ry="2" />
<text  x="304.89" y="511.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (12 samples, 0.01%)</title><rect x="458.7" y="661" width="0.1" height="15.0" fill="rgb(250,111,24)" rx="2" ry="2" />
<text  x="461.70" y="671.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::inner_product_utils::pp_kernel_t&lt; (38 samples, 0.03%)</title><rect x="114.3" y="165" width="0.3" height="15.0" fill="rgb(208,172,36)" rx="2" ry="2" />
<text  x="117.30" y="175.5" ></text>
</g>
<g >
<title>dmlc::parameter::FieldEntry&lt;float&gt;::Set (16 samples, 0.01%)</title><rect x="288.6" y="485" width="0.2" height="15.0" fill="rgb(236,216,38)" rx="2" ry="2" />
<text  x="291.63" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;char const**, char const**, std::allocator&lt;char const*&gt; &gt; (15 samples, 0.01%)</title><rect x="291.2" y="565" width="0.1" height="15.0" fill="rgb(236,37,52)" rx="2" ry="2" />
<text  x="294.17" y="575.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::simple_reorder_t&lt; (37 samples, 0.03%)</title><rect x="108.6" y="245" width="0.3" height="15.0" fill="rgb(210,147,36)" rx="2" ry="2" />
<text  x="111.59" y="255.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (549 samples, 0.41%)</title><rect x="217.8" y="565" width="4.8" height="15.0" fill="rgb(214,69,41)" rx="2" ry="2" />
<text  x="220.82" y="575.5" ></text>
</g>
<g >
<title>std::mutex::unlock (19 samples, 0.01%)</title><rect x="36.5" y="485" width="0.2" height="15.0" fill="rgb(252,66,2)" rx="2" ry="2" />
<text  x="39.53" y="495.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (12 samples, 0.01%)</title><rect x="458.7" y="645" width="0.1" height="15.0" fill="rgb(241,19,12)" rx="2" ry="2" />
<text  x="461.70" y="655.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::jit_uni_eltwise_bwd_t&lt; (23 samples, 0.02%)</title><rect x="109.6" y="261" width="0.2" height="15.0" fill="rgb(221,103,14)" rx="2" ry="2" />
<text  x="112.64" y="271.5" ></text>
</g>
<g >
<title>__mprotect (23 samples, 0.02%)</title><rect x="462.9" y="693" width="0.2" height="15.0" fill="rgb(208,109,24)" rx="2" ry="2" />
<text  x="465.93" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (17 samples, 0.01%)</title><rect x="284.6" y="405" width="0.1" height="15.0" fill="rgb(245,189,44)" rx="2" ry="2" />
<text  x="287.60" y="415.5" ></text>
</g>
<g >
<title>mxnet::cpp::Operator::op_map (13 samples, 0.01%)</title><rect x="216.1" y="597" width="0.1" height="15.0" fill="rgb(252,122,33)" rx="2" ry="2" />
<text  x="219.11" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (14 samples, 0.01%)</title><rect x="276.9" y="581" width="0.1" height="15.0" fill="rgb(254,151,38)" rx="2" ry="2" />
<text  x="279.91" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;dmlc::any, std::default_delete&lt;dmlc::any&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (14 samples, 0.01%)</title><rect x="103.5" y="357" width="0.1" height="15.0" fill="rgb(239,44,31)" rx="2" ry="2" />
<text  x="106.46" y="367.5" ></text>
</g>
<g >
<title>sys_sched_yield (663 samples, 0.49%)</title><rect x="983.9" y="661" width="5.8" height="15.0" fill="rgb(250,152,49)" rx="2" ry="2" />
<text  x="986.86" y="671.5" ></text>
</g>
<g >
<title>mxnet::cpp::Accuracy::Update (783 samples, 0.58%)</title><rect x="216.2" y="645" width="6.9" height="15.0" fill="rgb(243,142,27)" rx="2" ry="2" />
<text  x="219.22" y="655.5" ></text>
</g>
<g >
<title>dnnl::impl::for_nd&lt;int, dnnl::impl::cpu::jit_avx_gemm_f32 (426 samples, 0.32%)</title><rect x="154.4" y="597" width="3.7" height="15.0" fill="rgb(221,126,48)" rx="2" ry="2" />
<text  x="157.41" y="607.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;mxnet::cpp::NDArray const*, mxnet::cpp::NDArray*&gt; (21 samples, 0.02%)</title><rect x="263.0" y="549" width="0.2" height="15.0" fill="rgb(222,13,40)" rx="2" ry="2" />
<text  x="266.02" y="559.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::swap (24 samples, 0.02%)</title><rect x="241.3" y="533" width="0.2" height="15.0" fill="rgb(227,44,36)" rx="2" ry="2" />
<text  x="244.26" y="543.5" ></text>
</g>
<g >
<title>mxnet::cpp::Operator::op_map (13 samples, 0.01%)</title><rect x="272.9" y="613" width="0.1" height="15.0" fill="rgb(240,172,35)" rx="2" ry="2" />
<text  x="275.87" y="623.5" ></text>
</g>
<g >
<title>do_page_fault (20 samples, 0.01%)</title><rect x="410.8" y="645" width="0.2" height="15.0" fill="rgb(236,93,7)" rx="2" ry="2" />
<text  x="413.84" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (65 samples, 0.05%)</title><rect x="238.2" y="565" width="0.6" height="15.0" fill="rgb(214,83,9)" rx="2" ry="2" />
<text  x="241.20" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign (22 samples, 0.02%)</title><rect x="284.2" y="437" width="0.2" height="15.0" fill="rgb(216,56,49)" rx="2" ry="2" />
<text  x="287.22" y="447.5" ></text>
</g>
<g >
<title>native_apic_mem_write (12 samples, 0.01%)</title><rect x="205.2" y="565" width="0.1" height="15.0" fill="rgb(250,227,29)" rx="2" ry="2" />
<text  x="208.15" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (14 samples, 0.01%)</title><rect x="282.7" y="389" width="0.1" height="15.0" fill="rgb(223,2,3)" rx="2" ry="2" />
<text  x="285.72" y="399.5" ></text>
</g>
<g >
<title>std::copy&lt;int const*, long*&gt; (17 samples, 0.01%)</title><rect x="33.7" y="405" width="0.2" height="15.0" fill="rgb(242,32,31)" rx="2" ry="2" />
<text  x="36.74" y="415.5" ></text>
</g>
<g >
<title>try_to_wake_up (16 samples, 0.01%)</title><rect x="463.0" y="549" width="0.1" height="15.0" fill="rgb(205,7,17)" rx="2" ry="2" />
<text  x="465.99" y="559.5" ></text>
</g>
<g >
<title>__libc_start_main (9,786 samples, 7.25%)</title><rect x="216.0" y="677" width="85.6" height="15.0" fill="rgb(246,183,43)" rx="2" ry="2" />
<text  x="219.00" y="687.5" >__libc_sta..</text>
</g>
<g >
<title>mxnet::ndarray::Copy&lt;mshadow::cpu, mshadow::cpu&gt; (6,842 samples, 5.07%)</title><rect x="38.1" y="437" width="59.8" height="15.0" fill="rgb(225,227,22)" rx="2" ry="2" />
<text  x="41.06" y="447.5" >mxnet:..</text>
</g>
<g >
<title>cpuacct_charge (102 samples, 0.08%)</title><rect x="790.2" y="581" width="0.8" height="15.0" fill="rgb(247,154,5)" rx="2" ry="2" />
<text  x="793.16" y="591.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEnginePerDevice::PushToExecute (9,592 samples, 7.11%)</title><rect x="36.3" y="565" width="83.9" height="15.0" fill="rgb(224,37,9)" rx="2" ry="2" />
<text  x="39.29" y="575.5" >mxnet::en..</text>
</g>
<g >
<title>std::__miter_base&lt;int*&gt; (19 samples, 0.01%)</title><rect x="237.3" y="469" width="0.1" height="15.0" fill="rgb(229,78,51)" rx="2" ry="2" />
<text  x="240.25" y="479.5" ></text>
</g>
<g >
<title>std::call_once&lt;dnnl::impl::cpu::avx_gemm_f32::get_xbyak_gemm (33 samples, 0.02%)</title><rect x="301.8" y="629" width="0.3" height="15.0" fill="rgb(213,37,28)" rx="2" ry="2" />
<text  x="304.84" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mxnet::cpp::NDBlob&gt;::destroy&lt;mxnet::cpp::NDBlob&gt; (532 samples, 0.39%)</title><rect x="217.9" y="517" width="4.7" height="15.0" fill="rgb(211,49,52)" rx="2" ry="2" />
<text  x="220.95" y="527.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::qz_a1b0&lt;float, float, void&gt;::operator (40 samples, 0.03%)</title><rect x="153.9" y="581" width="0.3" height="15.0" fill="rgb(221,21,8)" rx="2" ry="2" />
<text  x="156.86" y="591.5" ></text>
</g>
<g >
<title>rmap_walk_anon (552 samples, 0.41%)</title><rect x="25.6" y="357" width="4.9" height="15.0" fill="rgb(231,16,5)" rx="2" ry="2" />
<text  x="28.65" y="367.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (38 samples, 0.03%)</title><rect x="236.3" y="453" width="0.3" height="15.0" fill="rgb(206,34,30)" rx="2" ry="2" />
<text  x="239.27" y="463.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPool&lt;mxnet::engine::ThreadedOpr&gt;::Delete (24 samples, 0.02%)</title><rect x="219.8" y="133" width="0.2" height="15.0" fill="rgb(214,77,5)" rx="2" ry="2" />
<text  x="222.81" y="143.5" ></text>
</g>
<g >
<title>dequeue_task_fair (21 samples, 0.02%)</title><rect x="308.6" y="517" width="0.1" height="15.0" fill="rgb(247,165,41)" rx="2" ry="2" />
<text  x="311.56" y="527.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;bool, int&gt; const*, std::vector&lt;std::pair&lt;bool, int&gt;, std::allocator&lt;std::pair&lt;bool, int&gt; &gt; &gt; &gt;, std::pair&lt;bool, int&gt;*, std::pair&lt;bool, int&gt; &gt; (335 samples, 0.25%)</title><rect x="103.9" y="421" width="2.9" height="15.0" fill="rgb(215,119,5)" rx="2" ry="2" />
<text  x="106.86" y="431.5" ></text>
</g>
<g >
<title>[perf-5296.map] (25 samples, 0.02%)</title><rect x="196.1" y="597" width="0.2" height="15.0" fill="rgb(210,193,44)" rx="2" ry="2" />
<text  x="199.12" y="607.5" ></text>
</g>
<g >
<title>mxnet::TShape::operator== (25 samples, 0.02%)</title><rect x="31.1" y="517" width="0.2" height="15.0" fill="rgb(246,165,39)" rx="2" ry="2" />
<text  x="34.12" y="527.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::inner_product_utils::pp_kernel_t&lt; (280 samples, 0.21%)</title><rect x="193.0" y="597" width="2.4" height="15.0" fill="rgb(241,158,17)" rx="2" ry="2" />
<text  x="195.98" y="607.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;mxnet::engine::ThreadedEnginePerDevice::ThreadWorkerBlock&lt; (17 samples, 0.01%)</title><rect x="245.9" y="517" width="0.1" height="15.0" fill="rgb(245,24,8)" rx="2" ry="2" />
<text  x="248.90" y="527.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPool&lt;mxnet::engine::OprBlock&gt;::New&lt;&gt; (12 samples, 0.01%)</title><rect x="219.2" y="261" width="0.1" height="15.0" fill="rgb(239,155,8)" rx="2" ry="2" />
<text  x="222.23" y="271.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel&lt;dnnl::impl::cpu::simple_reorder_impl&lt; (15 samples, 0.01%)</title><rect x="109.8" y="245" width="0.2" height="15.0" fill="rgb(207,70,18)" rx="2" ry="2" />
<text  x="112.84" y="255.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedOpr::~ThreadedOpr (34 samples, 0.03%)</title><rect x="99.5" y="389" width="0.3" height="15.0" fill="rgb(220,29,47)" rx="2" ry="2" />
<text  x="102.46" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (12 samples, 0.01%)</title><rect x="239.1" y="565" width="0.1" height="15.0" fill="rgb(226,183,50)" rx="2" ry="2" />
<text  x="242.13" y="575.5" ></text>
</g>
<g >
<title>mxnet::TBlob::TBlob (16 samples, 0.01%)</title><rect x="239.9" y="549" width="0.2" height="15.0" fill="rgb(240,136,44)" rx="2" ry="2" />
<text  x="242.93" y="559.5" ></text>
</g>
<g >
<title>pick_next_entity (221 samples, 0.16%)</title><rect x="737.5" y="597" width="1.9" height="15.0" fill="rgb(239,78,20)" rx="2" ry="2" />
<text  x="740.47" y="607.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (468 samples, 0.35%)</title><rect x="201.0" y="389" width="4.1" height="15.0" fill="rgb(220,136,27)" rx="2" ry="2" />
<text  x="203.98" y="399.5" ></text>
</g>
<g >
<title>dmlc::BeginPtr&lt;char const*&gt; (17 samples, 0.01%)</title><rect x="264.2" y="581" width="0.1" height="15.0" fill="rgb(216,16,45)" rx="2" ry="2" />
<text  x="267.19" y="591.5" ></text>
</g>
<g >
<title>__do_page_fault (14 samples, 0.01%)</title><rect x="297.5" y="485" width="0.1" height="15.0" fill="rgb(213,127,25)" rx="2" ry="2" />
<text  x="300.51" y="495.5" ></text>
</g>
<g >
<title>dnnl::impl::for_nd&lt;int, dnnl::impl::cpu::jit_avx_gemm_f32 (127 samples, 0.09%)</title><rect x="197.3" y="613" width="1.2" height="15.0" fill="rgb(226,94,54)" rx="2" ry="2" />
<text  x="200.35" y="623.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (37 samples, 0.03%)</title><rect x="220.7" y="181" width="0.3" height="15.0" fill="rgb(230,94,38)" rx="2" ry="2" />
<text  x="223.68" y="191.5" ></text>
</g>
<g >
<title>mxnet::common::ConvertToNumpyShape (19 samples, 0.01%)</title><rect x="253.3" y="517" width="0.1" height="15.0" fill="rgb(222,112,48)" rx="2" ry="2" />
<text  x="256.28" y="527.5" ></text>
</g>
<g >
<title>mshadow::SoftmaxGrad&lt;float&gt; (40 samples, 0.03%)</title><rect x="160.0" y="613" width="0.3" height="15.0" fill="rgb(243,128,14)" rx="2" ry="2" />
<text  x="162.96" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::NDArray*, std::allocator&lt;mxnet::NDArray*&gt; &gt;::reserve (119 samples, 0.09%)</title><rect x="250.1" y="549" width="1.0" height="15.0" fill="rgb(226,160,25)" rx="2" ry="2" />
<text  x="253.09" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (438 samples, 0.32%)</title><rect x="493.3" y="677" width="3.8" height="15.0" fill="rgb(229,12,24)" rx="2" ry="2" />
<text  x="496.31" y="687.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEnginePerDevice::PushToExecute (17 samples, 0.01%)</title><rect x="99.2" y="389" width="0.2" height="15.0" fill="rgb(226,129,49)" rx="2" ry="2" />
<text  x="102.22" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;mxnet::NDArray*, std::allocator&lt;mxnet::NDArray*&gt; &gt;::_M_allocate (18 samples, 0.01%)</title><rect x="250.4" y="517" width="0.2" height="15.0" fill="rgb(220,191,7)" rx="2" ry="2" />
<text  x="253.45" y="527.5" ></text>
</g>
<g >
<title>smp_call_function_interrupt (22 samples, 0.02%)</title><rect x="1188.7" y="661" width="0.2" height="15.0" fill="rgb(233,77,4)" rx="2" ry="2" />
<text  x="1191.68" y="671.5" ></text>
</g>
<g >
<title>mxnet::op::MKLDNNFCForward (550 samples, 0.41%)</title><rect x="111.2" y="357" width="4.8" height="15.0" fill="rgb(240,222,27)" rx="2" ry="2" />
<text  x="114.17" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::engine::ThreadedVar*, std::allocator&lt;mxnet::engine::ThreadedVar*&gt; &gt;::resize (13 samples, 0.01%)</title><rect x="219.0" y="277" width="0.1" height="15.0" fill="rgb(214,98,9)" rx="2" ry="2" />
<text  x="221.99" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;void*, std::allocator&lt;void*&gt; &gt;::emplace_back&lt;void*&gt; (54 samples, 0.04%)</title><rect x="261.4" y="549" width="0.5" height="15.0" fill="rgb(227,201,1)" rx="2" ry="2" />
<text  x="264.40" y="559.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;bool, int&gt; const*, std::vector&lt;std::pair&lt;bool, int&gt;, std::allocator&lt;std::pair&lt;bool, int&gt; &gt; &gt; &gt;, std::pair&lt;bool, int&gt;*&gt; (334 samples, 0.25%)</title><rect x="103.9" y="405" width="2.9" height="15.0" fill="rgb(223,199,2)" rx="2" ry="2" />
<text  x="106.87" y="415.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::NDArray::Chunk::~Chunk (12 samples, 0.01%)</title><rect x="221.8" y="309" width="0.1" height="15.0" fill="rgb(215,99,7)" rx="2" ry="2" />
<text  x="224.83" y="319.5" ></text>
</g>
<g >
<title>__kmp_hardware_timestamp (5,357 samples, 3.97%)</title><rect x="411.9" y="693" width="46.9" height="15.0" fill="rgb(208,88,26)" rx="2" ry="2" />
<text  x="414.94" y="703.5" >__km..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::engine::ThreadedEngine::DeleteVariable (12 samples, 0.01%)</title><rect x="219.8" y="69" width="0.1" height="15.0" fill="rgb(205,57,46)" rx="2" ry="2" />
<text  x="222.84" y="79.5" ></text>
</g>
<g >
<title>mxnet::cpp::NDBlob::~NDBlob (12 samples, 0.01%)</title><rect x="223.2" y="501" width="0.1" height="15.0" fill="rgb(225,133,29)" rx="2" ry="2" />
<text  x="226.23" y="511.5" ></text>
</g>
<g >
<title>mxnet::TShape::Size (16 samples, 0.01%)</title><rect x="97.7" y="405" width="0.2" height="15.0" fill="rgb(218,53,0)" rx="2" ry="2" />
<text  x="100.74" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::push_back (23 samples, 0.02%)</title><rect x="112.4" y="309" width="0.2" height="15.0" fill="rgb(206,211,36)" rx="2" ry="2" />
<text  x="115.38" y="319.5" ></text>
</g>
<g >
<title>yield_task_fair (1,112 samples, 0.82%)</title><rect x="969.0" y="629" width="9.8" height="15.0" fill="rgb(214,71,17)" rx="2" ry="2" />
<text  x="972.04" y="639.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;dnnl::primitive, std::unordered_map&lt;int, dnnl::memory, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::memory&gt; &gt; &gt; &gt; &gt; (16 samples, 0.01%)</title><rect x="114.8" y="229" width="0.2" height="15.0" fill="rgb(206,184,17)" rx="2" ry="2" />
<text  x="117.81" y="239.5" ></text>
</g>
<g >
<title>mxnet::common::SetupDefaultBlobsOut (17 samples, 0.01%)</title><rect x="100.1" y="405" width="0.2" height="15.0" fill="rgb(206,148,42)" rx="2" ry="2" />
<text  x="103.14" y="415.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (17 samples, 0.01%)</title><rect x="269.7" y="517" width="0.2" height="15.0" fill="rgb(212,16,5)" rx="2" ry="2" />
<text  x="272.73" y="527.5" ></text>
</g>
<g >
<title>std::make_shared&lt;mxnet::cpp::NDBlob, void* const&amp;&gt; (49 samples, 0.04%)</title><rect x="224.7" y="597" width="0.5" height="15.0" fill="rgb(248,216,41)" rx="2" ry="2" />
<text  x="227.73" y="607.5" ></text>
</g>
<g >
<title>mxnet::cpp::DataBatch::~DataBatch (36 samples, 0.03%)</title><rect x="223.1" y="645" width="0.3" height="15.0" fill="rgb(218,16,46)" rx="2" ry="2" />
<text  x="226.07" y="655.5" ></text>
</g>
<g >
<title>mxnet::op::ElemwiseShape&lt;2, 1&gt; (30 samples, 0.02%)</title><rect x="286.7" y="533" width="0.2" height="15.0" fill="rgb(211,225,1)" rx="2" ry="2" />
<text  x="289.69" y="543.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (165 samples, 0.12%)</title><rect x="268.4" y="533" width="1.5" height="15.0" fill="rgb(205,122,17)" rx="2" ry="2" />
<text  x="271.43" y="543.5" ></text>
</g>
<g >
<title>kvm_guest_apic_eoi_write (13 samples, 0.01%)</title><rect x="140.9" y="629" width="0.1" height="15.0" fill="rgb(209,22,45)" rx="2" ry="2" />
<text  x="143.92" y="639.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPoolAllocatable&lt;mxnet::engine::VersionedVarBlock&gt;::Delete (12 samples, 0.01%)</title><rect x="99.1" y="405" width="0.1" height="15.0" fill="rgb(214,30,0)" rx="2" ry="2" />
<text  x="102.08" y="415.5" ></text>
</g>
<g >
<title>dnnl::impl::reorder_pd_t::init_info (14 samples, 0.01%)</title><rect x="108.8" y="229" width="0.1" height="15.0" fill="rgb(214,30,51)" rx="2" ry="2" />
<text  x="111.77" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (42 samples, 0.03%)</title><rect x="298.0" y="597" width="0.4" height="15.0" fill="rgb(232,164,11)" rx="2" ry="2" />
<text  x="301.02" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (44 samples, 0.03%)</title><rect x="275.8" y="533" width="0.4" height="15.0" fill="rgb(228,1,24)" rx="2" ry="2" />
<text  x="278.80" y="543.5" ></text>
</g>
<g >
<title>mxnet::imperative::SetWriteInplaceReq (24 samples, 0.02%)</title><rect x="257.2" y="549" width="0.2" height="15.0" fill="rgb(249,112,26)" rx="2" ry="2" />
<text  x="260.22" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (521 samples, 0.39%)</title><rect x="200.6" y="565" width="4.5" height="15.0" fill="rgb(247,130,14)" rx="2" ry="2" />
<text  x="203.58" y="575.5" ></text>
</g>
<g >
<title>std::mutex::unlock (86 samples, 0.06%)</title><rect x="35.5" y="549" width="0.7" height="15.0" fill="rgb(234,42,48)" rx="2" ry="2" />
<text  x="38.47" y="559.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedVar::CompleteWriteDependency&lt;mxnet::engine::ThreadedEngine::OnComplete (41 samples, 0.03%)</title><rect x="99.0" y="421" width="0.4" height="15.0" fill="rgb(242,134,52)" rx="2" ry="2" />
<text  x="102.01" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;bool, int&gt;, std::allocator&lt;std::pair&lt;bool, int&gt; &gt; &gt;::vector (33 samples, 0.02%)</title><rect x="251.8" y="485" width="0.3" height="15.0" fill="rgb(247,124,38)" rx="2" ry="2" />
<text  x="254.78" y="495.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;void**&gt;, void**&gt; (57 samples, 0.04%)</title><rect x="278.7" y="533" width="0.5" height="15.0" fill="rgb(219,155,20)" rx="2" ry="2" />
<text  x="281.66" y="543.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, dnnl::memory, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::memory&gt; &gt; &gt;::unordered_map (12 samples, 0.01%)</title><rect x="110.8" y="341" width="0.1" height="15.0" fill="rgb(216,88,1)" rx="2" ry="2" />
<text  x="113.84" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="36.6" y="453" width="0.1" height="15.0" fill="rgb(227,81,40)" rx="2" ry="2" />
<text  x="39.57" y="463.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::OnCompleteStatic (44 samples, 0.03%)</title><rect x="99.4" y="453" width="0.4" height="15.0" fill="rgb(212,8,19)" rx="2" ry="2" />
<text  x="102.43" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (557 samples, 0.41%)</title><rect x="111.2" y="373" width="4.8" height="15.0" fill="rgb(206,105,33)" rx="2" ry="2" />
<text  x="114.16" y="383.5" ></text>
</g>
<g >
<title>ret_from_fork (21 samples, 0.02%)</title><rect x="348.0" y="661" width="0.2" height="15.0" fill="rgb(233,143,30)" rx="2" ry="2" />
<text  x="351.03" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::NDArray*, std::allocator&lt;mxnet::NDArray*&gt; &gt;::clear (12 samples, 0.01%)</title><rect x="249.8" y="549" width="0.1" height="15.0" fill="rgb(230,155,42)" rx="2" ry="2" />
<text  x="252.80" y="559.5" ></text>
</g>
<g >
<title>std::call_once&lt;dnnl::impl::cpu::avx_gemm_f32::get_xbyak_gemm (33 samples, 0.02%)</title><rect x="301.8" y="645" width="0.3" height="15.0" fill="rgb(206,137,39)" rx="2" ry="2" />
<text  x="304.84" y="655.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::imperative::PushFCompute (56 samples, 0.04%)</title><rect x="284.5" y="517" width="0.5" height="15.0" fill="rgb(207,180,0)" rx="2" ry="2" />
<text  x="287.53" y="527.5" ></text>
</g>
<g >
<title>mxnet::imperative::SetShapeType (511 samples, 0.38%)</title><rect x="252.8" y="549" width="4.4" height="15.0" fill="rgb(226,225,26)" rx="2" ry="2" />
<text  x="255.75" y="559.5" ></text>
</g>
<g >
<title>__kmp_invoke_microtask (2,639 samples, 1.96%)</title><rect x="192.8" y="661" width="23.1" height="15.0" fill="rgb(240,64,20)" rx="2" ry="2" />
<text  x="195.78" y="671.5" >_..</text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::OnStart (45 samples, 0.03%)</title><rect x="36.9" y="517" width="0.4" height="15.0" fill="rgb(253,193,20)" rx="2" ry="2" />
<text  x="39.86" y="527.5" ></text>
</g>
<g >
<title>MXSymbolGetAtomicSymbolInfo (342 samples, 0.25%)</title><rect x="263.8" y="613" width="2.9" height="15.0" fill="rgb(217,49,32)" rx="2" ry="2" />
<text  x="266.75" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.02%)</title><rect x="462.9" y="677" width="0.2" height="15.0" fill="rgb(214,23,52)" rx="2" ry="2" />
<text  x="465.93" y="687.5" ></text>
</g>
<g >
<title>mxnet::NDArray::Chunk::~Chunk (33 samples, 0.02%)</title><rect x="220.7" y="165" width="0.3" height="15.0" fill="rgb(250,48,20)" rx="2" ry="2" />
<text  x="223.68" y="175.5" ></text>
</g>
<g >
<title>sgemm_kernel (4,792 samples, 3.55%)</title><rect x="1147.0" y="693" width="41.9" height="15.0" fill="rgb(214,216,46)" rx="2" ry="2" />
<text  x="1149.96" y="703.5" >sge..</text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_check_len (32 samples, 0.02%)</title><rect x="276.3" y="565" width="0.2" height="15.0" fill="rgb(207,6,31)" rx="2" ry="2" />
<text  x="279.25" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (15 samples, 0.01%)</title><rect x="106.9" y="453" width="0.2" height="15.0" fill="rgb(226,176,8)" rx="2" ry="2" />
<text  x="109.92" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;mxnet::cpp::NDBlob&gt; &gt;::destroy&lt;mxnet::cpp::NDBlob&gt; (532 samples, 0.39%)</title><rect x="217.9" y="533" width="4.7" height="15.0" fill="rgb(230,52,39)" rx="2" ry="2" />
<text  x="220.95" y="543.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::jit_uni_eltwise_bwd_t&lt; (88 samples, 0.07%)</title><rect x="150.9" y="597" width="0.8" height="15.0" fill="rgb(246,70,47)" rx="2" ry="2" />
<text  x="153.89" y="607.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;void**, void**, std::allocator&lt;void*&gt; &gt; (87 samples, 0.06%)</title><rect x="278.4" y="565" width="0.8" height="15.0" fill="rgb(210,199,32)" rx="2" ry="2" />
<text  x="281.40" y="575.5" ></text>
</g>
<g >
<title>dmlc::ThreadedIter&lt;mxnet::DataBatch&gt;::Init (2,778 samples, 2.06%)</title><rect x="11.9" y="597" width="24.3" height="15.0" fill="rgb(207,81,8)" rx="2" ry="2" />
<text  x="14.92" y="607.5" >d..</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (34 samples, 0.03%)</title><rect x="247.1" y="565" width="0.3" height="15.0" fill="rgb(235,96,10)" rx="2" ry="2" />
<text  x="250.12" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (46 samples, 0.03%)</title><rect x="35.7" y="501" width="0.4" height="15.0" fill="rgb(208,68,11)" rx="2" ry="2" />
<text  x="38.74" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mxnet::TShape&gt;::construct&lt;mxnet::TShape, mxnet::TShape const&amp;&gt; (56 samples, 0.04%)</title><rect x="256.6" y="501" width="0.5" height="15.0" fill="rgb(207,209,23)" rx="2" ry="2" />
<text  x="259.59" y="511.5" ></text>
</g>
<g >
<title>mxnet::op::OperatorTune&lt;float&gt;::GetOMPLoopOverhead (26 samples, 0.02%)</title><rect x="205.6" y="629" width="0.2" height="15.0" fill="rgb(235,1,32)" rx="2" ry="2" />
<text  x="208.59" y="639.5" ></text>
</g>
<g >
<title>SetNDInputsOutputs (237 samples, 0.18%)</title><rect x="249.1" y="565" width="2.0" height="15.0" fill="rgb(247,137,27)" rx="2" ry="2" />
<text  x="252.05" y="575.5" ></text>
</g>
<g >
<title>mxnet::TShape::operator= (14 samples, 0.01%)</title><rect x="241.0" y="565" width="0.1" height="15.0" fill="rgb(239,19,6)" rx="2" ry="2" />
<text  x="244.02" y="575.5" ></text>
</g>
<g >
<title>mxnet::cpp::NDArray::~NDArray (12 samples, 0.01%)</title><rect x="280.7" y="645" width="0.1" height="15.0" fill="rgb(249,137,42)" rx="2" ry="2" />
<text  x="283.67" y="655.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (21 samples, 0.02%)</title><rect x="283.8" y="485" width="0.2" height="15.0" fill="rgb(207,91,40)" rx="2" ry="2" />
<text  x="286.81" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (17 samples, 0.01%)</title><rect x="282.7" y="405" width="0.1" height="15.0" fill="rgb(229,207,44)" rx="2" ry="2" />
<text  x="285.69" y="415.5" ></text>
</g>
<g >
<title>dnnl::impl::for_nd&lt;int, dnnl::impl::cpu::jit_avx_gemm_f32 (53 samples, 0.04%)</title><rect x="113.7" y="101" width="0.5" height="15.0" fill="rgb(234,63,43)" rx="2" ry="2" />
<text  x="116.71" y="111.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,077 samples, 0.80%)</title><rect x="107.1" y="453" width="9.4" height="15.0" fill="rgb(217,135,32)" rx="2" ry="2" />
<text  x="110.12" y="463.5" ></text>
</g>
<g >
<title>mxnet::cpp::MXDataIter::GetData (202 samples, 0.15%)</title><rect x="223.6" y="629" width="1.7" height="15.0" fill="rgb(215,69,0)" rx="2" ry="2" />
<text  x="226.57" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;void*, std::allocator&lt;void*&gt; &gt;::vector (24 samples, 0.02%)</title><rect x="277.1" y="613" width="0.3" height="15.0" fill="rgb(212,12,33)" rx="2" ry="2" />
<text  x="280.14" y="623.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::simple_reorder_impl&lt; (13 samples, 0.01%)</title><rect x="109.8" y="197" width="0.2" height="15.0" fill="rgb(253,196,10)" rx="2" ry="2" />
<text  x="112.85" y="207.5" ></text>
</g>
<g >
<title>mxnet::NDArray::WaitToWrite (78 samples, 0.06%)</title><rect x="98.7" y="485" width="0.7" height="15.0" fill="rgb(214,52,11)" rx="2" ry="2" />
<text  x="101.74" y="495.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (18 samples, 0.01%)</title><rect x="731.9" y="549" width="0.1" height="15.0" fill="rgb(210,157,27)" rx="2" ry="2" />
<text  x="734.88" y="559.5" ></text>
</g>
<g >
<title>native_apic_mem_write (75 samples, 0.06%)</title><rect x="458.0" y="629" width="0.7" height="15.0" fill="rgb(248,51,11)" rx="2" ry="2" />
<text  x="461.04" y="639.5" ></text>
</g>
<g >
<title>std::function&lt;void  (25 samples, 0.02%)</title><rect x="221.3" y="309" width="0.3" height="15.0" fill="rgb(231,135,8)" rx="2" ry="2" />
<text  x="224.34" y="319.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::operator= (26 samples, 0.02%)</title><rect x="224.2" y="565" width="0.2" height="15.0" fill="rgb(209,183,19)" rx="2" ry="2" />
<text  x="227.15" y="575.5" ></text>
</g>
<g >
<title>mxnet::op::mxnet_op::Kernel&lt;mxnet::op::SGDKernel, mshadow::cpu&gt;::Launch&lt;float*, float*, float*, float, float, float, float, mxnet::OpReqType&gt; (238 samples, 0.18%)</title><rect x="100.4" y="373" width="2.0" height="15.0" fill="rgb(233,4,53)" rx="2" ry="2" />
<text  x="103.36" y="383.5" ></text>
</g>
<g >
<title>__default_send_IPI_dest_field (16 samples, 0.01%)</title><rect x="1121.5" y="469" width="0.1" height="15.0" fill="rgb(234,120,32)" rx="2" ry="2" />
<text  x="1124.46" y="479.5" ></text>
</g>
<g >
<title>std::isinf (60 samples, 0.04%)</title><rect x="210.4" y="613" width="0.5" height="15.0" fill="rgb(223,116,31)" rx="2" ry="2" />
<text  x="213.39" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::push_back (33 samples, 0.02%)</title><rect x="291.1" y="613" width="0.2" height="15.0" fill="rgb(205,213,30)" rx="2" ry="2" />
<text  x="294.06" y="623.5" ></text>
</g>
<g >
<title>mxnet::op::OperatorTune&lt;float&gt;::OperatorTune (21 samples, 0.02%)</title><rect x="462.3" y="613" width="0.1" height="15.0" fill="rgb(238,54,31)" rx="2" ry="2" />
<text  x="465.26" y="623.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (88 samples, 0.07%)</title><rect x="967.1" y="613" width="0.8" height="15.0" fill="rgb(240,206,3)" rx="2" ry="2" />
<text  x="970.12" y="623.5" ></text>
</g>
<g >
<title>pick_next_task_fair (15,457 samples, 11.46%)</title><rect x="739.4" y="597" width="135.2" height="15.0" fill="rgb(243,199,10)" rx="2" ry="2" />
<text  x="742.40" y="607.5" >pick_next_task_fair</text>
</g>
<g >
<title>kvm_guest_apic_eoi_write (13 samples, 0.01%)</title><rect x="641.3" y="613" width="0.1" height="15.0" fill="rgb(230,8,33)" rx="2" ry="2" />
<text  x="644.27" y="623.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::WaitForVar (29 samples, 0.02%)</title><rect x="102.7" y="485" width="0.3" height="15.0" fill="rgb(246,30,25)" rx="2" ry="2" />
<text  x="105.70" y="495.5" ></text>
</g>
<g >
<title>__schedule (45 samples, 0.03%)</title><rect x="653.8" y="629" width="0.3" height="15.0" fill="rgb(224,18,51)" rx="2" ry="2" />
<text  x="656.75" y="639.5" ></text>
</g>
<g >
<title>_raw_spin_lock (963 samples, 0.71%)</title><rect x="654.1" y="629" width="8.5" height="15.0" fill="rgb(240,38,50)" rx="2" ry="2" />
<text  x="657.15" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, dmlc::parameter::FieldAccessEntry*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, dmlc::parameter::FieldAccessEntry*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, dmlc::parameter::FieldAccessEntry*&gt; &gt; &gt;::find (21 samples, 0.02%)</title><rect x="289.0" y="453" width="0.1" height="15.0" fill="rgb(223,29,54)" rx="2" ry="2" />
<text  x="291.95" y="463.5" ></text>
</g>
<g >
<title>__sched_yield (62,398 samples, 46.26%)</title><rect x="463.2" y="693" width="545.8" height="15.0" fill="rgb(209,8,27)" rx="2" ry="2" />
<text  x="466.20" y="703.5" >__sched_yield</text>
</g>
<g >
<title>mxnet::NDArray::WaitToWrite (327 samples, 0.24%)</title><rect x="244.8" y="597" width="2.9" height="15.0" fill="rgb(213,136,53)" rx="2" ry="2" />
<text  x="247.80" y="607.5" ></text>
</g>
<g >
<title>kvm_guest_apic_eoi_write (44 samples, 0.03%)</title><rect x="204.4" y="325" width="0.4" height="15.0" fill="rgb(250,86,38)" rx="2" ry="2" />
<text  x="207.41" y="335.5" ></text>
</g>
<g >
<title>smp_call_function_interrupt (33 samples, 0.02%)</title><rect x="731.9" y="581" width="0.3" height="15.0" fill="rgb(222,18,43)" rx="2" ry="2" />
<text  x="734.88" y="591.5" ></text>
</g>
<g >
<title>do_page_fault (14 samples, 0.01%)</title><rect x="297.5" y="501" width="0.1" height="15.0" fill="rgb(222,57,27)" rx="2" ry="2" />
<text  x="300.51" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::emplace_back&lt;char const*&gt; (35 samples, 0.03%)</title><rect x="264.7" y="565" width="0.3" height="15.0" fill="rgb(218,51,48)" rx="2" ry="2" />
<text  x="267.70" y="575.5" ></text>
</g>
<g >
<title>__kmp_invoke_task_func (2,642 samples, 1.96%)</title><rect x="192.8" y="677" width="23.1" height="15.0" fill="rgb(241,220,42)" rx="2" ry="2" />
<text  x="195.76" y="687.5" >_..</text>
</g>
<g >
<title>inner_thread (28 samples, 0.02%)</title><rect x="303.0" y="677" width="0.2" height="15.0" fill="rgb(211,102,33)" rx="2" ry="2" />
<text  x="305.99" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;mxnet::cpp::NDBlob,  (15 samples, 0.01%)</title><rect x="248.7" y="581" width="0.1" height="15.0" fill="rgb(218,183,11)" rx="2" ry="2" />
<text  x="251.69" y="591.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (25 samples, 0.02%)</title><rect x="159.7" y="581" width="0.2" height="15.0" fill="rgb(230,118,38)" rx="2" ry="2" />
<text  x="162.68" y="591.5" ></text>
</g>
<g >
<title>mxnet::op::OperatorTune&lt;float&gt;::GetOMPLoopOverhead (51 samples, 0.04%)</title><rect x="160.7" y="613" width="0.5" height="15.0" fill="rgb(234,85,20)" rx="2" ry="2" />
<text  x="163.72" y="623.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::DeleteVariable (12 samples, 0.01%)</title><rect x="219.8" y="37" width="0.1" height="15.0" fill="rgb(234,102,45)" rx="2" ry="2" />
<text  x="222.84" y="47.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;mxnet::engine::ThreadedEnginePerDevice::ThreadWorkerBlock&lt; (14 samples, 0.01%)</title><rect x="245.9" y="501" width="0.1" height="15.0" fill="rgb(243,30,17)" rx="2" ry="2" />
<text  x="248.92" y="511.5" ></text>
</g>
<g >
<title>__handle_mm_fault (88 samples, 0.07%)</title><rect x="1146.2" y="597" width="0.7" height="15.0" fill="rgb(217,73,9)" rx="2" ry="2" />
<text  x="1149.17" y="607.5" ></text>
</g>
<g >
<title>std::function&lt;void  (9,592 samples, 7.11%)</title><rect x="36.3" y="597" width="83.9" height="15.0" fill="rgb(224,114,14)" rx="2" ry="2" />
<text  x="39.29" y="607.5" >std::func..</text>
</g>
<g >
<title>dnnl::impl::cpu::qz_a1b0&lt;float, float, void&gt;::operator (205 samples, 0.15%)</title><rect x="146.3" y="565" width="1.8" height="15.0" fill="rgb(223,222,47)" rx="2" ry="2" />
<text  x="149.31" y="575.5" ></text>
</g>
<g >
<title>mxnet::op::OpSignature::AddSign (12 samples, 0.01%)</title><rect x="110.6" y="325" width="0.1" height="15.0" fill="rgb(223,127,18)" rx="2" ry="2" />
<text  x="113.61" y="335.5" ></text>
</g>
<g >
<title>mxnet::cpp::OpMap::GetSymbolCreator (689 samples, 0.51%)</title><rect x="266.8" y="613" width="6.1" height="15.0" fill="rgb(207,109,17)" rx="2" ry="2" />
<text  x="269.85" y="623.5" ></text>
</g>
<g >
<title>GOMP_parallel@@VERSION (56 samples, 0.04%)</title><rect x="113.7" y="133" width="0.5" height="15.0" fill="rgb(208,81,32)" rx="2" ry="2" />
<text  x="116.69" y="143.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;mxnet::cpp::NDBlob&gt;::~shared_ptr (15 samples, 0.01%)</title><rect x="248.7" y="597" width="0.1" height="15.0" fill="rgb(231,113,42)" rx="2" ry="2" />
<text  x="251.69" y="607.5" ></text>
</g>
<g >
<title>[perf-5296.map] (83 samples, 0.06%)</title><rect x="150.9" y="581" width="0.8" height="15.0" fill="rgb(240,79,51)" rx="2" ry="2" />
<text  x="153.92" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int&gt; (27 samples, 0.02%)</title><rect x="237.9" y="565" width="0.2" height="15.0" fill="rgb(211,199,4)" rx="2" ry="2" />
<text  x="240.89" y="575.5" ></text>
</g>
<g >
<title>mxnet::op::ActivationComputeExCPU (73 samples, 0.05%)</title><rect x="107.2" y="421" width="0.6" height="15.0" fill="rgb(242,181,6)" rx="2" ry="2" />
<text  x="110.20" y="431.5" ></text>
</g>
<g >
<title>std::queue&lt;mxnet::DataBatch*, std::deque&lt;mxnet::DataBatch*, std::allocator&lt;mxnet::DataBatch*&gt; &gt; &gt;::pop (17 samples, 0.01%)</title><rect x="35.2" y="581" width="0.1" height="15.0" fill="rgb(246,212,52)" rx="2" ry="2" />
<text  x="38.17" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mxnet::TBlob&gt;::construct&lt;mxnet::TBlob, mshadow::Tensor&lt;mshadow::cpu, 2, float&gt; &gt; (91 samples, 0.07%)</title><rect x="33.3" y="485" width="0.8" height="15.0" fill="rgb(244,9,28)" rx="2" ry="2" />
<text  x="36.34" y="495.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (16 samples, 0.01%)</title><rect x="36.6" y="469" width="0.1" height="15.0" fill="rgb(239,150,27)" rx="2" ry="2" />
<text  x="39.56" y="479.5" ></text>
</g>
<g >
<title>x86_pmu_enable (383 samples, 0.28%)</title><rect x="334.1" y="501" width="3.3" height="15.0" fill="rgb(205,24,51)" rx="2" ry="2" />
<text  x="337.09" y="511.5" ></text>
</g>
<g >
<title>MXDataIterGetLabel (349 samples, 0.26%)</title><rect x="239.4" y="613" width="3.1" height="15.0" fill="rgb(236,56,15)" rx="2" ry="2" />
<text  x="242.44" y="623.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;mxnet::TShape*, mxnet::TShape&gt; (21 samples, 0.02%)</title><rect x="256.3" y="501" width="0.2" height="15.0" fill="rgb(209,167,54)" rx="2" ry="2" />
<text  x="259.34" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (73 samples, 0.05%)</title><rect x="279.7" y="629" width="0.7" height="15.0" fill="rgb(218,214,46)" rx="2" ry="2" />
<text  x="282.72" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::emplace_back&lt;char const*&gt; (32 samples, 0.02%)</title><rect x="291.1" y="597" width="0.2" height="15.0" fill="rgb(226,94,22)" rx="2" ry="2" />
<text  x="294.07" y="607.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, void*, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::count (374 samples, 0.28%)</title><rect x="267.1" y="597" width="3.3" height="15.0" fill="rgb(225,88,20)" rx="2" ry="2" />
<text  x="270.09" y="607.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::unordered_map (19 samples, 0.01%)</title><rect x="282.7" y="453" width="0.1" height="15.0" fill="rgb(247,179,49)" rx="2" ry="2" />
<text  x="285.67" y="463.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::jit_uni_eltwise_fwd_t&lt; (12 samples, 0.01%)</title><rect x="107.4" y="277" width="0.2" height="15.0" fill="rgb(234,8,15)" rx="2" ry="2" />
<text  x="110.45" y="287.5" ></text>
</g>
<g >
<title>cpuacct_charge (1,639 samples, 1.22%)</title><rect x="840.1" y="565" width="14.4" height="15.0" fill="rgb(252,207,16)" rx="2" ry="2" />
<text  x="843.11" y="575.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::avx_gemm_f32::xbyak_gemm::xbyak_gemm (32 samples, 0.02%)</title><rect x="301.8" y="549" width="0.3" height="15.0" fill="rgb(221,7,42)" rx="2" ry="2" />
<text  x="304.84" y="559.5" ></text>
</g>
<g >
<title>mxnet::op::ElemwiseAttrHelper&lt;mxnet::TShape, &amp;mxnet::op::shape_is_none, &amp;mxnet::op::shape_assign, true, &amp;mxnet::op::shape_string[abi:cxx11], -1, -1&gt; (114 samples, 0.08%)</title><rect x="254.4" y="469" width="1.0" height="15.0" fill="rgb(246,93,30)" rx="2" ry="2" />
<text  x="257.43" y="479.5" ></text>
</g>
<g >
<title>call_function_interrupt (17 samples, 0.01%)</title><rect x="641.2" y="645" width="0.2" height="15.0" fill="rgb(206,72,34)" rx="2" ry="2" />
<text  x="644.24" y="655.5" ></text>
</g>
<g >
<title>_raw_spin_lock (16 samples, 0.01%)</title><rect x="410.8" y="581" width="0.2" height="15.0" fill="rgb(217,177,47)" rx="2" ry="2" />
<text  x="413.84" y="591.5" ></text>
</g>
<g >
<title>mxnet::cpp::NDArray::~NDArray (17 samples, 0.01%)</title><rect x="248.7" y="613" width="0.1" height="15.0" fill="rgb(251,13,31)" rx="2" ry="2" />
<text  x="251.67" y="623.5" ></text>
</g>
<g >
<title>mxnet::cpp::Operator::Operator (1,592 samples, 1.18%)</title><rect x="263.4" y="629" width="14.0" height="15.0" fill="rgb(211,38,37)" rx="2" ry="2" />
<text  x="266.43" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::_M_lower_bound (201 samples, 0.15%)</title><rect x="271.1" y="549" width="1.7" height="15.0" fill="rgb(245,131,33)" rx="2" ry="2" />
<text  x="274.05" y="559.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;dnnl::primitive, std::unordered_map&lt;int, dnnl::memory, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::memory&gt; &gt; &gt; &gt;*&gt; (16 samples, 0.01%)</title><rect x="114.8" y="245" width="0.2" height="15.0" fill="rgb(220,75,54)" rx="2" ry="2" />
<text  x="117.81" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (12,386 samples, 9.18%)</title><rect x="11.8" y="693" width="108.4" height="15.0" fill="rgb(222,100,33)" rx="2" ry="2" />
<text  x="14.85" y="703.5" >[libstdc++.so..</text>
</g>
<g >
<title>remove_migration_pte (13 samples, 0.01%)</title><rect x="25.4" y="341" width="0.1" height="15.0" fill="rgb(210,219,42)" rx="2" ry="2" />
<text  x="28.42" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_buckets (26 samples, 0.02%)</title><rect x="259.3" y="453" width="0.2" height="15.0" fill="rgb(211,50,28)" rx="2" ry="2" />
<text  x="262.27" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;mxnet::cpp::NDArray, std::allocator&lt;mxnet::cpp::NDArray&gt; &gt;::_Vector_base (12 samples, 0.01%)</title><rect x="262.6" y="597" width="0.1" height="15.0" fill="rgb(211,139,21)" rx="2" ry="2" />
<text  x="265.56" y="607.5" ></text>
</g>
<g >
<title>update_min_vruntime (240 samples, 0.18%)</title><rect x="872.5" y="581" width="2.1" height="15.0" fill="rgb(210,5,35)" rx="2" ry="2" />
<text  x="875.51" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char const*&amp;, char const*&amp;&gt; (13 samples, 0.01%)</title><rect x="290.2" y="517" width="0.1" height="15.0" fill="rgb(246,70,41)" rx="2" ry="2" />
<text  x="293.15" y="527.5" ></text>
</g>
<g >
<title>__kmp_invoke_microtask (5,618 samples, 4.16%)</title><rect x="141.7" y="645" width="49.2" height="15.0" fill="rgb(234,73,21)" rx="2" ry="2" />
<text  x="144.72" y="655.5" >__km..</text>
</g>
<g >
<title>std::function&lt;bool  (71 samples, 0.05%)</title><rect x="286.6" y="565" width="0.6" height="15.0" fill="rgb(243,165,38)" rx="2" ry="2" />
<text  x="289.60" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Rehash_base&lt;mxnet::engine::Var*, mxnet::engine::Var*, std::allocator&lt;mxnet::engine::Var*&gt;, std::__detail::_Identity, std::equal_to&lt;mxnet::engine::Var*&gt;, std::hash&lt;mxnet::engine::Var*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt;, std::integral_constant&lt;bool, true&gt; &gt;::reserve (15 samples, 0.01%)</title><rect x="287.9" y="549" width="0.1" height="15.0" fill="rgb(206,219,33)" rx="2" ry="2" />
<text  x="290.86" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::TShape, std::allocator&lt;mxnet::TShape&gt; &gt;::push_back (15 samples, 0.01%)</title><rect x="287.4" y="565" width="0.1" height="15.0" fill="rgb(234,193,24)" rx="2" ry="2" />
<text  x="290.38" y="575.5" ></text>
</g>
<g >
<title>async_page_fault (12 samples, 0.01%)</title><rect x="13.7" y="533" width="0.1" height="15.0" fill="rgb(243,215,31)" rx="2" ry="2" />
<text  x="16.67" y="543.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (29 samples, 0.02%)</title><rect x="99.5" y="357" width="0.2" height="15.0" fill="rgb(216,12,42)" rx="2" ry="2" />
<text  x="102.48" y="367.5" ></text>
</g>
<g >
<title>__calc_delta (141 samples, 0.10%)</title><rect x="783.8" y="581" width="1.3" height="15.0" fill="rgb(208,99,46)" rx="2" ry="2" />
<text  x="786.84" y="591.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;void**&gt;, void**&gt; (41 samples, 0.03%)</title><rect x="278.8" y="501" width="0.3" height="15.0" fill="rgb(239,106,23)" rx="2" ry="2" />
<text  x="281.76" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::reserve (106 samples, 0.08%)</title><rect x="258.8" y="549" width="1.0" height="15.0" fill="rgb(254,115,25)" rx="2" ry="2" />
<text  x="261.84" y="559.5" ></text>
</g>
<g >
<title>GOMP_parallel@@VERSION (192 samples, 0.14%)</title><rect x="117.7" y="325" width="1.6" height="15.0" fill="rgb(211,113,23)" rx="2" ry="2" />
<text  x="120.66" y="335.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, dnnl::impl::memory_arg_t, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::impl::memory_arg_t&gt; &gt; &gt;::operator[] (18 samples, 0.01%)</title><rect x="109.4" y="277" width="0.1" height="15.0" fill="rgb(243,19,42)" rx="2" ry="2" />
<text  x="112.37" y="287.5" ></text>
</g>
<g >
<title>mxnet::MKLDNNStream::Submit (210 samples, 0.16%)</title><rect x="113.1" y="325" width="1.9" height="15.0" fill="rgb(244,222,9)" rx="2" ry="2" />
<text  x="116.12" y="335.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::DeleteVariable (165 samples, 0.12%)</title><rect x="219.6" y="213" width="1.4" height="15.0" fill="rgb(228,108,16)" rx="2" ry="2" />
<text  x="222.56" y="223.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (15 samples, 0.01%)</title><rect x="641.4" y="645" width="0.1" height="15.0" fill="rgb(219,19,44)" rx="2" ry="2" />
<text  x="644.38" y="655.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6,814 samples, 5.05%)</title><rect x="38.1" y="421" width="59.6" height="15.0" fill="rgb(206,225,41)" rx="2" ry="2" />
<text  x="41.11" y="431.5" >[libc-..</text>
</g>
<g >
<title>mxnet::TShape::operator= (26 samples, 0.02%)</title><rect x="224.2" y="581" width="0.2" height="15.0" fill="rgb(249,61,4)" rx="2" ry="2" />
<text  x="227.15" y="591.5" ></text>
</g>
<g >
<title>smp_call_function_interrupt (12 samples, 0.01%)</title><rect x="190.5" y="581" width="0.1" height="15.0" fill="rgb(228,3,41)" rx="2" ry="2" />
<text  x="193.48" y="591.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;int*&gt;, int*&gt; (204 samples, 0.15%)</title><rect x="235.9" y="501" width="1.8" height="15.0" fill="rgb(214,81,42)" rx="2" ry="2" />
<text  x="238.87" y="511.5" ></text>
</g>
<g >
<title>dnnl_primitive_execute (178 samples, 0.13%)</title><rect x="113.2" y="293" width="1.5" height="15.0" fill="rgb(216,93,13)" rx="2" ry="2" />
<text  x="116.17" y="303.5" ></text>
</g>
<g >
<title>nnvm::NodeAttrs::NodeAttrs (27 samples, 0.02%)</title><rect x="284.2" y="485" width="0.2" height="15.0" fill="rgb(217,90,51)" rx="2" ry="2" />
<text  x="287.19" y="495.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::assign&lt;int*&gt; (12 samples, 0.01%)</title><rect x="242.2" y="581" width="0.1" height="15.0" fill="rgb(247,103,47)" rx="2" ry="2" />
<text  x="245.21" y="591.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (28 samples, 0.02%)</title><rect x="99.5" y="277" width="0.2" height="15.0" fill="rgb(212,109,29)" rx="2" ry="2" />
<text  x="102.49" y="287.5" ></text>
</g>
<g >
<title>sched_clock (8,926 samples, 6.62%)</title><rect x="882.6" y="565" width="78.0" height="15.0" fill="rgb(219,30,47)" rx="2" ry="2" />
<text  x="885.57" y="575.5" >sched_clock</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mxnet::cpp::NDBlob&gt;::destroy&lt;mxnet::cpp::NDBlob&gt; (13 samples, 0.01%)</title><rect x="223.2" y="517" width="0.1" height="15.0" fill="rgb(205,96,21)" rx="2" ry="2" />
<text  x="226.22" y="527.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::imperative::PushFCompute (39 samples, 0.03%)</title><rect x="284.2" y="517" width="0.3" height="15.0" fill="rgb(215,209,19)" rx="2" ry="2" />
<text  x="287.19" y="527.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (21 samples, 0.02%)</title><rect x="36.5" y="517" width="0.2" height="15.0" fill="rgb(227,213,17)" rx="2" ry="2" />
<text  x="39.51" y="527.5" ></text>
</g>
<g >
<title>__kmp_fork_call (18 samples, 0.01%)</title><rect x="347.8" y="677" width="0.2" height="15.0" fill="rgb(254,121,39)" rx="2" ry="2" />
<text  x="350.81" y="687.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;dmlc::ThreadedIter&lt;mxnet::DataBatch&gt;::Init (2,785 samples, 2.06%)</title><rect x="11.9" y="645" width="24.4" height="15.0" fill="rgb(241,116,54)" rx="2" ry="2" />
<text  x="14.92" y="655.5" >s..</text>
</g>
<g >
<title>futex_wake (6,333 samples, 4.69%)</title><rect x="1013.8" y="613" width="55.4" height="15.0" fill="rgb(248,85,31)" rx="2" ry="2" />
<text  x="1016.79" y="623.5" >futex..</text>
</g>
<g >
<title>do_syscall_64 (5,976 samples, 4.43%)</title><rect x="1069.4" y="661" width="52.2" height="15.0" fill="rgb(242,47,1)" rx="2" ry="2" />
<text  x="1072.36" y="671.5" >do_sy..</text>
</g>
<g >
<title>mxnet::op::SGDUpdate&lt;mshadow::cpu&gt; (244 samples, 0.18%)</title><rect x="100.3" y="389" width="2.2" height="15.0" fill="rgb(209,150,0)" rx="2" ry="2" />
<text  x="103.33" y="399.5" ></text>
</g>
<g >
<title>MXDataIterNext (490 samples, 0.36%)</title><rect x="243.8" y="629" width="4.2" height="15.0" fill="rgb(239,161,0)" rx="2" ry="2" />
<text  x="246.76" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (24 samples, 0.02%)</title><rect x="284.2" y="453" width="0.2" height="15.0" fill="rgb(227,161,48)" rx="2" ry="2" />
<text  x="287.21" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;void**&gt;, void**&gt; (51 samples, 0.04%)</title><rect x="278.7" y="517" width="0.4" height="15.0" fill="rgb(223,31,24)" rx="2" ry="2" />
<text  x="281.67" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (13 samples, 0.01%)</title><rect x="283.9" y="453" width="0.1" height="15.0" fill="rgb(253,123,4)" rx="2" ry="2" />
<text  x="286.88" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mxnet::TShape&gt;::construct&lt;mxnet::TShape, mxnet::TShape const&amp;&gt; (15 samples, 0.01%)</title><rect x="287.4" y="533" width="0.1" height="15.0" fill="rgb(225,6,27)" rx="2" ry="2" />
<text  x="290.38" y="543.5" ></text>
</g>
<g >
<title>nnvm::Op::GetAttr&lt;bool&gt; (40 samples, 0.03%)</title><rect x="103.3" y="453" width="0.4" height="15.0" fill="rgb(210,25,35)" rx="2" ry="2" />
<text  x="106.31" y="463.5" ></text>
</g>
<g >
<title>mxnet::NDArray::WaitToRead (15 samples, 0.01%)</title><rect x="216.8" y="581" width="0.1" height="15.0" fill="rgb(235,161,30)" rx="2" ry="2" />
<text  x="219.76" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt;::vector (30 samples, 0.02%)</title><rect x="282.9" y="469" width="0.2" height="15.0" fill="rgb(242,69,41)" rx="2" ry="2" />
<text  x="285.86" y="479.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;mxnet::cpp::NDBlob&gt;::shared_ptr&lt;std::allocator&lt;mxnet::cpp::NDBlob&gt;, void* const&amp;&gt; (45 samples, 0.03%)</title><rect x="224.8" y="565" width="0.3" height="15.0" fill="rgb(231,98,36)" rx="2" ry="2" />
<text  x="227.75" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::engine::ThreadedVar*, std::allocator&lt;mxnet::engine::ThreadedVar*&gt; &gt;::_M_default_append (16 samples, 0.01%)</title><rect x="245.3" y="533" width="0.1" height="15.0" fill="rgb(215,96,26)" rx="2" ry="2" />
<text  x="248.26" y="543.5" ></text>
</g>
<g >
<title>sys_futex (5,975 samples, 4.43%)</title><rect x="1069.4" y="645" width="52.2" height="15.0" fill="rgb(249,108,0)" rx="2" ry="2" />
<text  x="1072.37" y="655.5" >sys_f..</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (28 samples, 0.02%)</title><rect x="247.2" y="549" width="0.2" height="15.0" fill="rgb(206,173,9)" rx="2" ry="2" />
<text  x="250.17" y="559.5" ></text>
</g>
<g >
<title>call_function_interrupt (21 samples, 0.02%)</title><rect x="599.6" y="645" width="0.2" height="15.0" fill="rgb(226,26,17)" rx="2" ry="2" />
<text  x="602.59" y="655.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (15 samples, 0.01%)</title><rect x="233.4" y="565" width="0.1" height="15.0" fill="rgb(240,192,30)" rx="2" ry="2" />
<text  x="236.36" y="575.5" ></text>
</g>
<g >
<title>do_async_page_fault (13 samples, 0.01%)</title><rect x="297.0" y="533" width="0.1" height="15.0" fill="rgb(224,37,25)" rx="2" ry="2" />
<text  x="299.97" y="543.5" ></text>
</g>
<g >
<title>nnvm::NodeAttrs::~NodeAttrs (14 samples, 0.01%)</title><rect x="290.5" y="597" width="0.1" height="15.0" fill="rgb(240,198,53)" rx="2" ry="2" />
<text  x="293.48" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::_S_value (43 samples, 0.03%)</title><rect x="267.8" y="533" width="0.3" height="15.0" fill="rgb(219,32,30)" rx="2" ry="2" />
<text  x="270.77" y="543.5" ></text>
</g>
<g >
<title>GOMP_parallel@@VERSION (12 samples, 0.01%)</title><rect x="109.7" y="229" width="0.1" height="15.0" fill="rgb(245,76,13)" rx="2" ry="2" />
<text  x="112.70" y="239.5" ></text>
</g>
<g >
<title>call_function_interrupt (12 samples, 0.01%)</title><rect x="190.5" y="597" width="0.1" height="15.0" fill="rgb(216,57,22)" rx="2" ry="2" />
<text  x="193.48" y="607.5" ></text>
</g>
<g >
<title>dnnl::impl::init_info (14 samples, 0.01%)</title><rect x="108.8" y="213" width="0.1" height="15.0" fill="rgb(243,97,39)" rx="2" ry="2" />
<text  x="111.77" y="223.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (15 samples, 0.01%)</title><rect x="272.2" y="485" width="0.1" height="15.0" fill="rgb(210,107,31)" rx="2" ry="2" />
<text  x="275.18" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::emplace_back&lt;long&gt; (21 samples, 0.02%)</title><rect x="112.4" y="293" width="0.2" height="15.0" fill="rgb(252,158,35)" rx="2" ry="2" />
<text  x="115.39" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;void  (14 samples, 0.01%)</title><rect x="219.8" y="101" width="0.1" height="15.0" fill="rgb(230,16,11)" rx="2" ry="2" />
<text  x="222.82" y="111.5" ></text>
</g>
<g >
<title>mxnet::resource::ResourceManagerImpl::ResourceParallelRandom&lt;mshadow::cpu&gt;::ResourceParallelRandom (13 samples, 0.01%)</title><rect x="102.6" y="437" width="0.1" height="15.0" fill="rgb(208,23,29)" rx="2" ry="2" />
<text  x="105.58" y="447.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::gemm_inner_product_fwd_t&lt; (354 samples, 0.26%)</title><rect x="193.0" y="613" width="3.1" height="15.0" fill="rgb(225,94,13)" rx="2" ry="2" />
<text  x="195.96" y="623.5" ></text>
</g>
<g >
<title>mxnet::NDArray::SetTBlob (14 samples, 0.01%)</title><rect x="116.7" y="389" width="0.1" height="15.0" fill="rgb(242,177,30)" rx="2" ry="2" />
<text  x="119.72" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;dmlc::parameter::FieldAccessEntry*, std::less&lt;dmlc::parameter::FieldAccessEntry*&gt;, std::allocator&lt;dmlc::parameter::FieldAccessEntry*&gt; &gt;::insert (28 samples, 0.02%)</title><rect x="289.2" y="485" width="0.3" height="15.0" fill="rgb(236,217,21)" rx="2" ry="2" />
<text  x="292.21" y="495.5" ></text>
</g>
<g >
<title>mshadow::expr::RValueExp&lt;mshadow::Tensor&lt;mshadow::cpu, 3, float&gt;, float&gt;::operator*= (18 samples, 0.01%)</title><rect x="297.2" y="549" width="0.1" height="15.0" fill="rgb(252,217,18)" rx="2" ry="2" />
<text  x="300.18" y="559.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::PushAsync (325 samples, 0.24%)</title><rect x="218.5" y="309" width="2.8" height="15.0" fill="rgb(231,21,32)" rx="2" ry="2" />
<text  x="221.50" y="319.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_operator_tune.cc (75 samples, 0.06%)</title><rect x="462.2" y="677" width="0.6" height="15.0" fill="rgb(227,74,25)" rx="2" ry="2" />
<text  x="465.17" y="687.5" ></text>
</g>
<g >
<title>mxnet::NDArray::Chunk::SetMKLMem (29 samples, 0.02%)</title><rect x="110.3" y="325" width="0.3" height="15.0" fill="rgb(242,207,13)" rx="2" ry="2" />
<text  x="113.33" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (25 samples, 0.02%)</title><rect x="238.4" y="549" width="0.2" height="15.0" fill="rgb(248,85,20)" rx="2" ry="2" />
<text  x="241.43" y="559.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (13 samples, 0.01%)</title><rect x="219.8" y="85" width="0.1" height="15.0" fill="rgb(250,223,36)" rx="2" ry="2" />
<text  x="222.83" y="95.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;mxnet::NDArray const*, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; &gt;, mxnet::NDArray*, mxnet::NDArray&gt; (22 samples, 0.02%)</title><rect x="282.9" y="453" width="0.2" height="15.0" fill="rgb(207,178,52)" rx="2" ry="2" />
<text  x="285.93" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (23 samples, 0.02%)</title><rect x="238.8" y="565" width="0.2" height="15.0" fill="rgb(222,204,30)" rx="2" ry="2" />
<text  x="241.77" y="575.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;mxnet::cpp::NDBlob&gt;::shared_ptr&lt;std::allocator&lt;mxnet::cpp::NDBlob&gt;, void* const&amp;&gt; (40 samples, 0.03%)</title><rect x="242.7" y="565" width="0.3" height="15.0" fill="rgb(236,42,23)" rx="2" ry="2" />
<text  x="245.65" y="575.5" ></text>
</g>
<g >
<title>nnvm::OpMap&lt;std::function&lt;bool  (38 samples, 0.03%)</title><rect x="253.6" y="533" width="0.3" height="15.0" fill="rgb(242,141,24)" rx="2" ry="2" />
<text  x="256.58" y="543.5" ></text>
</g>
<g >
<title>mxnet::imperative::PushFComputeEx (59 samples, 0.04%)</title><rect x="251.7" y="517" width="0.5" height="15.0" fill="rgb(242,1,7)" rx="2" ry="2" />
<text  x="254.67" y="527.5" ></text>
</g>
<g >
<title>mxnet::TShape::TShape&lt;1&gt; (16 samples, 0.01%)</title><rect x="242.2" y="597" width="0.1" height="15.0" fill="rgb(210,27,20)" rx="2" ry="2" />
<text  x="245.17" y="607.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::simple_reorder_impl&lt; (15 samples, 0.01%)</title><rect x="109.8" y="261" width="0.2" height="15.0" fill="rgb(205,216,18)" rx="2" ry="2" />
<text  x="112.84" y="271.5" ></text>
</g>
<g >
<title>mxnet::imperative::PushFCompute (61 samples, 0.05%)</title><rect x="282.7" y="485" width="0.5" height="15.0" fill="rgb(253,26,40)" rx="2" ry="2" />
<text  x="285.65" y="495.5" ></text>
</g>
<g >
<title>mxnet::io::MNISTIter::LoadImage (569 samples, 0.42%)</title><rect x="292.4" y="565" width="4.9" height="15.0" fill="rgb(226,78,13)" rx="2" ry="2" />
<text  x="295.36" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;mxnet::NDArray**&gt;, mxnet::NDArray**&gt; (34 samples, 0.03%)</title><rect x="250.7" y="485" width="0.3" height="15.0" fill="rgb(234,140,53)" rx="2" ry="2" />
<text  x="253.66" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;mxnet::cpp::NDBlob, std::allocator&lt;mxnet::cpp::NDBlob&gt;,  (544 samples, 0.40%)</title><rect x="217.9" y="549" width="4.7" height="15.0" fill="rgb(229,28,52)" rx="2" ry="2" />
<text  x="220.85" y="559.5" ></text>
</g>
<g >
<title>do_page_fault (13 samples, 0.01%)</title><rect x="297.0" y="517" width="0.1" height="15.0" fill="rgb(250,105,18)" rx="2" ry="2" />
<text  x="299.97" y="527.5" ></text>
</g>
<g >
<title>mxnet::op::ReduceAxesComputeImpl&lt;mshadow::cpu, mshadow::red::sum, false, false, mxnet::op::mshadow_op::identity&gt; (212 samples, 0.16%)</title><rect x="117.5" y="373" width="1.9" height="15.0" fill="rgb(226,26,7)" rx="2" ry="2" />
<text  x="120.50" y="383.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::OnComplete (105 samples, 0.08%)</title><rect x="219.7" y="165" width="0.9" height="15.0" fill="rgb(211,142,24)" rx="2" ry="2" />
<text  x="222.67" y="175.5" ></text>
</g>
<g >
<title>pvclock_clocksource_read (8,794 samples, 6.52%)</title><rect x="883.0" y="533" width="77.0" height="15.0" fill="rgb(245,69,16)" rx="2" ry="2" />
<text  x="886.04" y="543.5" >pvclock_..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;dmlc::any, std::default_delete&lt;dmlc::any&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;dmlc::any, std::default_delete&lt;dmlc::any&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (24 samples, 0.02%)</title><rect x="103.4" y="405" width="0.2" height="15.0" fill="rgb(208,94,24)" rx="2" ry="2" />
<text  x="106.41" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (9,460 samples, 7.01%)</title><rect x="37.4" y="501" width="82.7" height="15.0" fill="rgb(228,174,42)" rx="2" ry="2" />
<text  x="40.36" y="511.5" >std::_Fun..</text>
</g>
<g >
<title>mxnet::TBlob::operator=&lt;mshadow::cpu, 2, float&gt; (58 samples, 0.04%)</title><rect x="33.4" y="453" width="0.5" height="15.0" fill="rgb(206,187,20)" rx="2" ry="2" />
<text  x="36.40" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;int*&gt;, int*, int&gt; (17 samples, 0.01%)</title><rect x="234.3" y="565" width="0.1" height="15.0" fill="rgb(240,13,24)" rx="2" ry="2" />
<text  x="237.30" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (14 samples, 0.01%)</title><rect x="284.6" y="389" width="0.1" height="15.0" fill="rgb(212,46,21)" rx="2" ry="2" />
<text  x="287.60" y="399.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (88 samples, 0.07%)</title><rect x="785.1" y="581" width="0.8" height="15.0" fill="rgb(239,11,50)" rx="2" ry="2" />
<text  x="788.14" y="591.5" ></text>
</g>
<g >
<title>std::isinf (175 samples, 0.13%)</title><rect x="175.1" y="597" width="1.6" height="15.0" fill="rgb(252,29,13)" rx="2" ry="2" />
<text  x="178.13" y="607.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;mxnet::TBlob*, mxnet::TBlob&gt; (23 samples, 0.02%)</title><rect x="33.1" y="485" width="0.2" height="15.0" fill="rgb(247,210,40)" rx="2" ry="2" />
<text  x="36.09" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (23 samples, 0.02%)</title><rect x="239.0" y="581" width="0.2" height="15.0" fill="rgb(231,13,37)" rx="2" ry="2" />
<text  x="242.04" y="591.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::NewOperator (55 samples, 0.04%)</title><rect x="281.7" y="517" width="0.4" height="15.0" fill="rgb(223,8,31)" rx="2" ry="2" />
<text  x="284.67" y="527.5" ></text>
</g>
<g >
<title>__do_page_fault (890 samples, 0.66%)</title><rect x="23.1" y="469" width="7.8" height="15.0" fill="rgb(223,200,4)" rx="2" ry="2" />
<text  x="26.15" y="479.5" ></text>
</g>
<g >
<title>dequeue_entity (17 samples, 0.01%)</title><rect x="308.6" y="501" width="0.1" height="15.0" fill="rgb(218,81,10)" rx="2" ry="2" />
<text  x="311.59" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (54 samples, 0.04%)</title><rect x="279.8" y="613" width="0.5" height="15.0" fill="rgb(208,101,16)" rx="2" ry="2" />
<text  x="282.80" y="623.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEnginePerDevice::CPUWorker&lt; (9,591 samples, 7.11%)</title><rect x="36.3" y="549" width="83.9" height="15.0" fill="rgb(215,7,14)" rx="2" ry="2" />
<text  x="39.30" y="559.5" >mxnet::en..</text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map (37 samples, 0.03%)</title><rect x="273.8" y="613" width="0.4" height="15.0" fill="rgb(242,51,23)" rx="2" ry="2" />
<text  x="276.85" y="623.5" ></text>
</g>
<g >
<title>mxnet::imperative::PushFCompute (38 samples, 0.03%)</title><rect x="284.2" y="501" width="0.3" height="15.0" fill="rgb(232,219,2)" rx="2" ry="2" />
<text  x="287.19" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (47,202 samples, 34.99%)</title><rect x="576.8" y="677" width="412.9" height="15.0" fill="rgb(220,44,17)" rx="2" ry="2" />
<text  x="579.76" y="687.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>std::vector&lt;mxnet::engine::ThreadedVar*, std::allocator&lt;mxnet::engine::ThreadedVar*&gt; &gt;::_M_default_append (13 samples, 0.01%)</title><rect x="282.0" y="485" width="0.1" height="15.0" fill="rgb(235,111,26)" rx="2" ry="2" />
<text  x="285.02" y="495.5" ></text>
</g>
<g >
<title>mxnet::op::AddBiasGrad&lt;float&gt; (250 samples, 0.19%)</title><rect x="117.3" y="389" width="2.2" height="15.0" fill="rgb(244,153,24)" rx="2" ry="2" />
<text  x="120.32" y="399.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1,941 samples, 1.44%)</title><rect x="14.1" y="533" width="17.0" height="15.0" fill="rgb(219,81,18)" rx="2" ry="2" />
<text  x="17.11" y="543.5" ></text>
</g>
<g >
<title>smp_call_function_interrupt (17 samples, 0.01%)</title><rect x="641.2" y="629" width="0.2" height="15.0" fill="rgb(248,68,2)" rx="2" ry="2" />
<text  x="644.24" y="639.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::engine::ThreadedEngine::DeleteVariable (12 samples, 0.01%)</title><rect x="221.4" y="293" width="0.2" height="15.0" fill="rgb(225,195,8)" rx="2" ry="2" />
<text  x="224.45" y="303.5" ></text>
</g>
<g >
<title>std::condition_variable::wait&lt;dmlc::ThreadedIter&lt;mxnet::DataBatch&gt;::Init (128 samples, 0.09%)</title><rect x="12.4" y="581" width="1.1" height="15.0" fill="rgb(231,46,26)" rx="2" ry="2" />
<text  x="15.40" y="591.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::PushSync (375 samples, 0.28%)</title><rect x="99.4" y="485" width="3.3" height="15.0" fill="rgb(224,183,38)" rx="2" ry="2" />
<text  x="102.42" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;mxnet::NDArray::Chunk,  (14 samples, 0.01%)</title><rect x="224.4" y="565" width="0.1" height="15.0" fill="rgb(214,58,21)" rx="2" ry="2" />
<text  x="227.40" y="575.5" ></text>
</g>
<g >
<title>migrate_page (74 samples, 0.05%)</title><rect x="24.6" y="373" width="0.6" height="15.0" fill="rgb(231,136,20)" rx="2" ry="2" />
<text  x="27.56" y="383.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel&lt;dnnl::impl::cpu::gemm_inner_product_fwd_t&lt; (357 samples, 0.26%)</title><rect x="192.9" y="629" width="3.2" height="15.0" fill="rgb(231,210,37)" rx="2" ry="2" />
<text  x="195.95" y="639.5" ></text>
</g>
<g >
<title>mxnet::op::MKLDNNActivationBackward (358 samples, 0.27%)</title><rect x="107.9" y="357" width="3.1" height="15.0" fill="rgb(212,12,11)" rx="2" ry="2" />
<text  x="110.87" y="367.5" ></text>
</g>
<g >
<title>dmlc::parameter::FieldEntryBase&lt;dmlc::parameter::FieldEntry&lt;float&gt;, float&gt;::Same (15 samples, 0.01%)</title><rect x="288.8" y="485" width="0.1" height="15.0" fill="rgb(253,54,5)" rx="2" ry="2" />
<text  x="291.78" y="495.5" ></text>
</g>
<g >
<title>dmlc::ThreadedIter&lt;mxnet::DataBatch&gt;::Init (85 samples, 0.06%)</title><rect x="12.6" y="565" width="0.7" height="15.0" fill="rgb(216,144,51)" rx="2" ry="2" />
<text  x="15.60" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (520 samples, 0.39%)</title><rect x="200.6" y="533" width="4.5" height="15.0" fill="rgb(230,107,10)" rx="2" ry="2" />
<text  x="203.58" y="543.5" ></text>
</g>
<g >
<title>mxnet::op::shape_assign (57 samples, 0.04%)</title><rect x="254.6" y="437" width="0.5" height="15.0" fill="rgb(221,15,52)" rx="2" ry="2" />
<text  x="257.64" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;mxnet::cpp::NDBlob,  (12 samples, 0.01%)</title><rect x="225.2" y="581" width="0.1" height="15.0" fill="rgb(225,53,49)" rx="2" ry="2" />
<text  x="228.17" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (245 samples, 0.18%)</title><rect x="100.3" y="405" width="2.2" height="15.0" fill="rgb(221,163,31)" rx="2" ry="2" />
<text  x="103.33" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;mxnet::TShape&gt; &gt;::construct&lt;mxnet::TShape, mxnet::TShape const&amp;&gt; (15 samples, 0.01%)</title><rect x="287.4" y="549" width="0.1" height="15.0" fill="rgb(212,200,54)" rx="2" ry="2" />
<text  x="290.38" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate (13 samples, 0.01%)</title><rect x="274.9" y="549" width="0.2" height="15.0" fill="rgb(225,127,36)" rx="2" ry="2" />
<text  x="277.95" y="559.5" ></text>
</g>
<g >
<title>_IO_fread (132 samples, 0.10%)</title><rect x="191.2" y="677" width="1.1" height="15.0" fill="rgb(234,132,16)" rx="2" ry="2" />
<text  x="194.15" y="687.5" ></text>
</g>
<g >
<title>dnnl::primitive::primitive (35 samples, 0.03%)</title><rect x="108.1" y="277" width="0.3" height="15.0" fill="rgb(248,156,12)" rx="2" ry="2" />
<text  x="111.08" y="287.5" ></text>
</g>
<g >
<title>sys_mprotect (23 samples, 0.02%)</title><rect x="462.9" y="645" width="0.2" height="15.0" fill="rgb(205,155,5)" rx="2" ry="2" />
<text  x="465.93" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (17 samples, 0.01%)</title><rect x="234.1" y="565" width="0.2" height="15.0" fill="rgb(211,18,22)" rx="2" ry="2" />
<text  x="237.11" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;nnvm::Symbol&gt;, std::allocator&lt;std::shared_ptr&lt;nnvm::Symbol&gt; &gt; &gt;::_Vector_base (14 samples, 0.01%)</title><rect x="258.6" y="517" width="0.1" height="15.0" fill="rgb(216,50,3)" rx="2" ry="2" />
<text  x="261.59" y="527.5" ></text>
</g>
<g >
<title>mshadow::Softmax&lt;float&gt; (129 samples, 0.10%)</title><rect x="158.8" y="597" width="1.2" height="15.0" fill="rgb(229,152,43)" rx="2" ry="2" />
<text  x="161.83" y="607.5" ></text>
</g>
<g >
<title>GOMP_parallel@@VERSION (14 samples, 0.01%)</title><rect x="109.8" y="229" width="0.2" height="15.0" fill="rgb(207,28,36)" rx="2" ry="2" />
<text  x="112.84" y="239.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (30 samples, 0.02%)</title><rect x="297.4" y="549" width="0.2" height="15.0" fill="rgb(206,51,17)" rx="2" ry="2" />
<text  x="300.37" y="559.5" ></text>
</g>
<g >
<title>_IO_fread (16 samples, 0.01%)</title><rect x="296.8" y="549" width="0.1" height="15.0" fill="rgb(229,15,29)" rx="2" ry="2" />
<text  x="299.80" y="559.5" ></text>
</g>
<g >
<title>call_function_interrupt (14 samples, 0.01%)</title><rect x="205.1" y="613" width="0.2" height="15.0" fill="rgb(208,193,43)" rx="2" ry="2" />
<text  x="208.13" y="623.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,073 samples, 0.80%)</title><rect x="107.2" y="437" width="9.3" height="15.0" fill="rgb(218,154,31)" rx="2" ry="2" />
<text  x="110.16" y="447.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;mxnet::NDArray**&gt;, mxnet::NDArray**&gt; (37 samples, 0.03%)</title><rect x="250.7" y="501" width="0.3" height="15.0" fill="rgb(227,139,41)" rx="2" ry="2" />
<text  x="253.66" y="511.5" ></text>
</g>
<g >
<title>mshadow::expr::MapPacketPlan&lt;mshadow::sv::multo, mshadow::expr::ScalarExp&lt;float&gt;, 3, float,  (45 samples, 0.03%)</title><rect x="160.3" y="613" width="0.4" height="15.0" fill="rgb(225,203,38)" rx="2" ry="2" />
<text  x="163.31" y="623.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::OnCompleteStatic (25 samples, 0.02%)</title><rect x="98.5" y="453" width="0.2" height="15.0" fill="rgb(223,43,24)" rx="2" ry="2" />
<text  x="101.52" y="463.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::avx_gemm_f32::get_xbyak_gemm (33 samples, 0.02%)</title><rect x="301.8" y="581" width="0.3" height="15.0" fill="rgb(228,12,47)" rx="2" ry="2" />
<text  x="304.84" y="591.5" ></text>
</g>
<g >
<title>mxnet::TBlob::operator=&lt;mshadow::cpu, 2, float&gt; (14 samples, 0.01%)</title><rect x="34.2" y="453" width="0.1" height="15.0" fill="rgb(205,223,33)" rx="2" ry="2" />
<text  x="37.21" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (64 samples, 0.05%)</title><rect x="259.0" y="501" width="0.6" height="15.0" fill="rgb(215,110,3)" rx="2" ry="2" />
<text  x="262.04" y="511.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedVar::AppendWriteDependency (23 samples, 0.02%)</title><rect x="221.0" y="277" width="0.2" height="15.0" fill="rgb(236,67,42)" rx="2" ry="2" />
<text  x="224.04" y="287.5" ></text>
</g>
<g >
<title>do_futex (5,974 samples, 4.43%)</title><rect x="1069.4" y="629" width="52.2" height="15.0" fill="rgb(227,214,5)" rx="2" ry="2" />
<text  x="1072.38" y="639.5" >do_fu..</text>
</g>
<g >
<title>operator new (34 samples, 0.03%)</title><rect x="106.0" y="357" width="0.3" height="15.0" fill="rgb(251,193,45)" rx="2" ry="2" />
<text  x="108.97" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (14 samples, 0.01%)</title><rect x="266.4" y="581" width="0.1" height="15.0" fill="rgb(211,220,20)" rx="2" ry="2" />
<text  x="269.40" y="591.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (23 samples, 0.02%)</title><rect x="1189.7" y="533" width="0.2" height="15.0" fill="rgb(253,34,24)" rx="2" ry="2" />
<text  x="1192.72" y="543.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel&lt;dnnl::impl::cpu::simple_reorder_impl&lt; (273 samples, 0.20%)</title><rect x="151.8" y="613" width="2.4" height="15.0" fill="rgb(248,77,18)" rx="2" ry="2" />
<text  x="154.82" y="623.5" ></text>
</g>
<g >
<title>smp_call_function_interrupt (13 samples, 0.01%)</title><rect x="140.9" y="645" width="0.1" height="15.0" fill="rgb(238,166,13)" rx="2" ry="2" />
<text  x="143.92" y="655.5" ></text>
</g>
<g >
<title>schedule (134 samples, 0.10%)</title><rect x="641.5" y="645" width="1.2" height="15.0" fill="rgb(250,180,13)" rx="2" ry="2" />
<text  x="644.52" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::find (340 samples, 0.25%)</title><rect x="267.3" y="581" width="3.0" height="15.0" fill="rgb(246,122,10)" rx="2" ry="2" />
<text  x="270.30" y="591.5" ></text>
</g>
<g >
<title>mark_wake_futex (20 samples, 0.01%)</title><rect x="1069.7" y="597" width="0.1" height="15.0" fill="rgb(243,43,2)" rx="2" ry="2" />
<text  x="1072.65" y="607.5" ></text>
</g>
<g >
<title>mxnet::cpp::MXDataIter::GetPadNum (14 samples, 0.01%)</title><rect x="243.1" y="629" width="0.1" height="15.0" fill="rgb(229,104,13)" rx="2" ry="2" />
<text  x="246.12" y="639.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::qz_a1b0&lt;float, float, void&gt;::operator (204 samples, 0.15%)</title><rect x="149.0" y="581" width="1.8" height="15.0" fill="rgb(244,144,46)" rx="2" ry="2" />
<text  x="152.02" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;mxnet::NDArray::Chunk, std::allocator&lt;mxnet::NDArray::Chunk&gt;,  (514 samples, 0.38%)</title><rect x="218.0" y="389" width="4.5" height="15.0" fill="rgb(215,147,32)" rx="2" ry="2" />
<text  x="221.04" y="399.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::NewOperator (65 samples, 0.05%)</title><rect x="244.9" y="565" width="0.5" height="15.0" fill="rgb(216,58,35)" rx="2" ry="2" />
<text  x="247.86" y="575.5" ></text>
</g>
<g >
<title>mxnet::TShape::operator= (20 samples, 0.01%)</title><rect x="32.1" y="501" width="0.2" height="15.0" fill="rgb(241,168,41)" rx="2" ry="2" />
<text  x="35.08" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (29 samples, 0.02%)</title><rect x="279.9" y="549" width="0.2" height="15.0" fill="rgb(208,150,16)" rx="2" ry="2" />
<text  x="282.89" y="559.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;mxnet::cpp::NDBlob, std::allocator&lt;mxnet::cpp::NDBlob&gt;, void* const&amp;&gt; (45 samples, 0.03%)</title><rect x="224.8" y="581" width="0.3" height="15.0" fill="rgb(250,43,34)" rx="2" ry="2" />
<text  x="227.75" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (12 samples, 0.01%)</title><rect x="248.7" y="565" width="0.1" height="15.0" fill="rgb(226,198,15)" rx="2" ry="2" />
<text  x="251.71" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (12 samples, 0.01%)</title><rect x="270.2" y="533" width="0.1" height="15.0" fill="rgb(226,109,48)" rx="2" ry="2" />
<text  x="273.16" y="543.5" ></text>
</g>
<g >
<title>mxnet::op::broadcast::seq_reduce_compute&lt;mshadow::red::sum, 2, float, float, float, mxnet::op::mshadow_op::identity&gt; (583 samples, 0.43%)</title><rect x="205.8" y="629" width="5.1" height="15.0" fill="rgb(206,195,16)" rx="2" ry="2" />
<text  x="208.82" y="639.5" ></text>
</g>
<g >
<title>mxnet::ndarray::Copy&lt;mshadow::cpu, mshadow::cpu&gt; (26 samples, 0.02%)</title><rect x="217.4" y="581" width="0.3" height="15.0" fill="rgb(210,157,34)" rx="2" ry="2" />
<text  x="220.43" y="591.5" ></text>
</g>
<g >
<title>std::queue&lt;mxnet::DataBatch*, std::deque&lt;mxnet::DataBatch*, std::allocator&lt;mxnet::DataBatch*&gt; &gt; &gt;::front (37 samples, 0.03%)</title><rect x="34.8" y="581" width="0.4" height="15.0" fill="rgb(215,73,40)" rx="2" ry="2" />
<text  x="37.84" y="591.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::OnComplete (60 samples, 0.04%)</title><rect x="98.9" y="437" width="0.5" height="15.0" fill="rgb(253,215,42)" rx="2" ry="2" />
<text  x="101.88" y="447.5" ></text>
</g>
<g >
<title>mxnet::NDArray::GetMKLDNNData (35 samples, 0.03%)</title><rect x="110.3" y="341" width="0.3" height="15.0" fill="rgb(226,127,11)" rx="2" ry="2" />
<text  x="113.30" y="351.5" ></text>
</g>
<g >
<title>mxnet::op::FCBackward&lt;mshadow::cpu, float&gt; (278 samples, 0.21%)</title><rect x="117.2" y="405" width="2.4" height="15.0" fill="rgb(214,129,3)" rx="2" ry="2" />
<text  x="120.19" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::NDArray*, std::allocator&lt;mxnet::NDArray*&gt; &gt;::max_size (12 samples, 0.01%)</title><rect x="250.0" y="549" width="0.1" height="15.0" fill="rgb(234,229,6)" rx="2" ry="2" />
<text  x="252.98" y="559.5" ></text>
</g>
<g >
<title>native_apic_mem_write (20 samples, 0.01%)</title><rect x="1188.7" y="629" width="0.2" height="15.0" fill="rgb(229,174,35)" rx="2" ry="2" />
<text  x="1191.70" y="639.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;mxnet::cpp::NDBlob, std::allocator&lt;mxnet::cpp::NDBlob&gt;, void* const&amp;&gt; (43 samples, 0.03%)</title><rect x="242.6" y="581" width="0.4" height="15.0" fill="rgb(252,48,42)" rx="2" ry="2" />
<text  x="245.63" y="591.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::function&lt;void  (9,592 samples, 7.11%)</title><rect x="36.3" y="629" width="83.9" height="15.0" fill="rgb(250,168,45)" rx="2" ry="2" />
<text  x="39.29" y="639.5" >std::__in..</text>
</g>
<g >
<title>std::queue&lt;mxnet::DataBatch*, std::deque&lt;mxnet::DataBatch*, std::allocator&lt;mxnet::DataBatch*&gt; &gt; &gt;::size (24 samples, 0.02%)</title><rect x="13.1" y="549" width="0.2" height="15.0" fill="rgb(251,78,44)" rx="2" ry="2" />
<text  x="16.13" y="559.5" ></text>
</g>
<g >
<title>pick_next_task_fair (619 samples, 0.46%)</title><rect x="961.7" y="613" width="5.4" height="15.0" fill="rgb(230,1,48)" rx="2" ry="2" />
<text  x="964.70" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;dmlc::any, std::default_delete&lt;dmlc::any&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;dmlc::any, std::default_delete&lt;dmlc::any&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (17 samples, 0.01%)</title><rect x="103.4" y="389" width="0.2" height="15.0" fill="rgb(215,70,42)" rx="2" ry="2" />
<text  x="106.43" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (9,592 samples, 7.11%)</title><rect x="36.3" y="581" width="83.9" height="15.0" fill="rgb(248,38,24)" rx="2" ry="2" />
<text  x="39.29" y="591.5" >std::_Fun..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (23 samples, 0.02%)</title><rect x="243.3" y="629" width="0.2" height="15.0" fill="rgb(247,125,47)" rx="2" ry="2" />
<text  x="246.27" y="639.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;mxnet::cpp::NDArray, std::allocator&lt;mxnet::cpp::NDArray&gt; &gt;::_M_allocate (18 samples, 0.01%)</title><rect x="262.8" y="581" width="0.1" height="15.0" fill="rgb(251,130,33)" rx="2" ry="2" />
<text  x="265.79" y="591.5" ></text>
</g>
<g >
<title>mxnet::exec::FComputeExExecutor::Run (1,524 samples, 1.13%)</title><rect x="103.2" y="469" width="13.4" height="15.0" fill="rgb(235,146,33)" rx="2" ry="2" />
<text  x="106.24" y="479.5" ></text>
</g>
<g >
<title>mxnet::imperative::GetContext (17 samples, 0.01%)</title><rect x="252.6" y="549" width="0.2" height="15.0" fill="rgb(247,60,33)" rx="2" ry="2" />
<text  x="255.61" y="559.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPoolAllocatable&lt;mxnet::engine::OprBlock&gt;::New&lt;&gt; (17 samples, 0.01%)</title><rect x="245.5" y="549" width="0.2" height="15.0" fill="rgb(241,23,48)" rx="2" ry="2" />
<text  x="248.50" y="559.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;int, std::move_iterator&lt;int*&gt; &gt; (72 samples, 0.05%)</title><rect x="234.9" y="549" width="0.6" height="15.0" fill="rgb(247,84,50)" rx="2" ry="2" />
<text  x="237.89" y="559.5" ></text>
</g>
<g >
<title>MXImperativeInvokeImpl (1,107 samples, 0.82%)</title><rect x="281.0" y="613" width="9.7" height="15.0" fill="rgb(216,84,33)" rx="2" ry="2" />
<text  x="283.98" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (43,908 samples, 32.55%)</title><rect x="599.8" y="661" width="384.1" height="15.0" fill="rgb(217,45,32)" rx="2" ry="2" />
<text  x="602.77" y="671.5" >do_syscall_64</text>
</g>
<g >
<title>std::shared_ptr&lt;mxnet::cpp::NDBlob&gt;::operator= (13 samples, 0.01%)</title><rect x="225.2" y="597" width="0.1" height="15.0" fill="rgb(247,39,32)" rx="2" ry="2" />
<text  x="228.16" y="607.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::operator= (44 samples, 0.03%)</title><rect x="241.2" y="565" width="0.4" height="15.0" fill="rgb(246,163,31)" rx="2" ry="2" />
<text  x="244.22" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,334 samples, 4.70%)</title><rect x="1013.8" y="677" width="55.4" height="15.0" fill="rgb(244,141,15)" rx="2" ry="2" />
<text  x="1016.78" y="687.5" >entry..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::function&lt;void  (9,592 samples, 7.11%)</title><rect x="36.3" y="645" width="83.9" height="15.0" fill="rgb(238,160,53)" rx="2" ry="2" />
<text  x="39.29" y="655.5" >std::thre..</text>
</g>
<g >
<title>ptep_clear_flush (506 samples, 0.38%)</title><rect x="26.0" y="325" width="4.5" height="15.0" fill="rgb(243,101,37)" rx="2" ry="2" />
<text  x="29.03" y="335.5" ></text>
</g>
<g >
<title>mxnet::common::SetupDefaultBlobsOut (15 samples, 0.01%)</title><rect x="116.9" y="421" width="0.1" height="15.0" fill="rgb(242,160,18)" rx="2" ry="2" />
<text  x="119.88" y="431.5" ></text>
</g>
<g >
<title>std::function&lt;void  (40 samples, 0.03%)</title><rect x="220.7" y="197" width="0.3" height="15.0" fill="rgb(247,83,5)" rx="2" ry="2" />
<text  x="223.65" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (20 samples, 0.01%)</title><rect x="410.8" y="597" width="0.2" height="15.0" fill="rgb(232,153,3)" rx="2" ry="2" />
<text  x="413.84" y="607.5" ></text>
</g>
<g >
<title>mxnet::CopyFromToDnsImpl&lt;mshadow::cpu, mshadow::cpu&gt; (6,917 samples, 5.13%)</title><rect x="37.4" y="453" width="60.5" height="15.0" fill="rgb(233,221,3)" rx="2" ry="2" />
<text  x="40.41" y="463.5" >mxnet:..</text>
</g>
<g >
<title>nnvm::NodeAttrs::NodeAttrs (61 samples, 0.05%)</title><rect x="258.2" y="549" width="0.5" height="15.0" fill="rgb(233,96,38)" rx="2" ry="2" />
<text  x="261.21" y="559.5" ></text>
</g>
<g >
<title>exec_blas._omp_fn.0 (40 samples, 0.03%)</title><rect x="302.3" y="677" width="0.4" height="15.0" fill="rgb(227,228,52)" rx="2" ry="2" />
<text  x="305.33" y="687.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::PushSync (177 samples, 0.13%)</title><rect x="281.6" y="549" width="1.6" height="15.0" fill="rgb(232,78,3)" rx="2" ry="2" />
<text  x="284.64" y="559.5" ></text>
</g>
<g >
<title>std::mutex::unlock (26 samples, 0.02%)</title><rect x="247.2" y="533" width="0.2" height="15.0" fill="rgb(248,221,2)" rx="2" ry="2" />
<text  x="250.19" y="543.5" ></text>
</g>
<g >
<title>async_page_fault (16 samples, 0.01%)</title><rect x="296.9" y="549" width="0.2" height="15.0" fill="rgb(249,17,5)" rx="2" ry="2" />
<text  x="299.94" y="559.5" ></text>
</g>
<g >
<title>mxnet::CommitOutput (137 samples, 0.10%)</title><rect x="108.0" y="341" width="1.2" height="15.0" fill="rgb(243,85,41)" rx="2" ry="2" />
<text  x="111.00" y="351.5" ></text>
</g>
<g >
<title>mxnet::imperative::PushFCompute (25 samples, 0.02%)</title><rect x="99.5" y="229" width="0.2" height="15.0" fill="rgb(224,14,31)" rx="2" ry="2" />
<text  x="102.51" y="239.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::jit_uni_eltwise_fwd_t&lt; (12 samples, 0.01%)</title><rect x="107.4" y="261" width="0.2" height="15.0" fill="rgb(218,20,25)" rx="2" ry="2" />
<text  x="110.45" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;nnvm::Node&gt;::operator= (12 samples, 0.01%)</title><rect x="240.4" y="549" width="0.1" height="15.0" fill="rgb(244,2,43)" rx="2" ry="2" />
<text  x="243.41" y="559.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::simple_reorder_impl&lt; (101 samples, 0.07%)</title><rect x="196.5" y="613" width="0.8" height="15.0" fill="rgb(242,89,20)" rx="2" ry="2" />
<text  x="199.46" y="623.5" ></text>
</g>
<g >
<title>nnvm::NodeAttrs::NodeAttrs (50 samples, 0.04%)</title><rect x="283.7" y="549" width="0.4" height="15.0" fill="rgb(220,125,5)" rx="2" ry="2" />
<text  x="286.66" y="559.5" ></text>
</g>
<g >
<title>schedule (35,035 samples, 25.97%)</title><rect x="662.6" y="629" width="306.4" height="15.0" fill="rgb(230,63,16)" rx="2" ry="2" />
<text  x="665.57" y="639.5" >schedule</text>
</g>
<g >
<title>std::back_insert_iterator&lt;std::vector&lt;void*, std::allocator&lt;void*&gt; &gt; &gt;::operator= (59 samples, 0.04%)</title><rect x="261.4" y="581" width="0.5" height="15.0" fill="rgb(237,26,34)" rx="2" ry="2" />
<text  x="264.37" y="591.5" ></text>
</g>
<g >
<title>std::call_once&lt;dnnl::impl::cpu::avx_gemm_f32::get_xbyak_gemm (33 samples, 0.02%)</title><rect x="301.8" y="661" width="0.3" height="15.0" fill="rgb(217,127,46)" rx="2" ry="2" />
<text  x="304.84" y="671.5" ></text>
</g>
<g >
<title>mxnet::op::ElemwiseType&lt;2, 1&gt; (12 samples, 0.01%)</title><rect x="286.9" y="533" width="0.2" height="15.0" fill="rgb(213,144,50)" rx="2" ry="2" />
<text  x="289.95" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (15 samples, 0.01%)</title><rect x="222.9" y="629" width="0.2" height="15.0" fill="rgb(243,168,24)" rx="2" ry="2" />
<text  x="225.94" y="639.5" ></text>
</g>
<g >
<title>call_rwsem_wake (16 samples, 0.01%)</title><rect x="463.0" y="597" width="0.1" height="15.0" fill="rgb(243,7,2)" rx="2" ry="2" />
<text  x="465.99" y="607.5" ></text>
</g>
<g >
<title>__kmp_finish_implicit_task (24 samples, 0.02%)</title><rect x="141.3" y="661" width="0.2" height="15.0" fill="rgb(223,83,5)" rx="2" ry="2" />
<text  x="144.28" y="671.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::PushAsync (195 samples, 0.14%)</title><rect x="244.8" y="581" width="1.7" height="15.0" fill="rgb(234,225,9)" rx="2" ry="2" />
<text  x="247.84" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::_S_value (17 samples, 0.01%)</title><rect x="271.6" y="517" width="0.1" height="15.0" fill="rgb(206,55,39)" rx="2" ry="2" />
<text  x="274.60" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Insert&lt;mxnet::engine::Var*, mxnet::engine::Var*, std::allocator&lt;mxnet::engine::Var*&gt;, std::__detail::_Identity, std::equal_to&lt;mxnet::engine::Var*&gt;, std::hash&lt;mxnet::engine::Var*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt;, true&gt;::insert (21 samples, 0.02%)</title><rect x="287.7" y="549" width="0.2" height="15.0" fill="rgb(246,226,23)" rx="2" ry="2" />
<text  x="290.68" y="559.5" ></text>
</g>
<g >
<title>select_task_rq_fair (22 samples, 0.02%)</title><rect x="1121.2" y="565" width="0.2" height="15.0" fill="rgb(234,71,2)" rx="2" ry="2" />
<text  x="1124.18" y="575.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (71 samples, 0.05%)</title><rect x="1146.2" y="565" width="0.6" height="15.0" fill="rgb(225,209,17)" rx="2" ry="2" />
<text  x="1149.18" y="575.5" ></text>
</g>
<g >
<title>do_async_page_fault (14 samples, 0.01%)</title><rect x="11.6" y="661" width="0.2" height="15.0" fill="rgb(217,120,53)" rx="2" ry="2" />
<text  x="14.64" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;bool, int&gt; const*, std::vector&lt;std::pair&lt;bool, int&gt;, std::allocator&lt;std::pair&lt;bool, int&gt; &gt; &gt; &gt; (108 samples, 0.08%)</title><rect x="104.5" y="373" width="0.9" height="15.0" fill="rgb(210,86,0)" rx="2" ry="2" />
<text  x="107.46" y="383.5" ></text>
</g>
<g >
<title>MXExecutorBackward (16 samples, 0.01%)</title><rect x="243.5" y="629" width="0.1" height="15.0" fill="rgb(246,49,1)" rx="2" ry="2" />
<text  x="246.49" y="639.5" ></text>
</g>
<g >
<title>mxnet::imperative::ParseAttrs (201 samples, 0.15%)</title><rect x="258.0" y="565" width="1.8" height="15.0" fill="rgb(227,21,50)" rx="2" ry="2" />
<text  x="261.01" y="575.5" ></text>
</g>
<g >
<title>std::move&lt;int&amp;&gt; (35 samples, 0.03%)</title><rect x="227.1" y="597" width="0.3" height="15.0" fill="rgb(211,173,47)" rx="2" ry="2" />
<text  x="230.07" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::resize (38 samples, 0.03%)</title><rect x="265.2" y="581" width="0.3" height="15.0" fill="rgb(251,66,10)" rx="2" ry="2" />
<text  x="268.19" y="591.5" ></text>
</g>
<g >
<title>dnnl::primitive::execute (96 samples, 0.07%)</title><rect x="109.3" y="325" width="0.9" height="15.0" fill="rgb(246,197,8)" rx="2" ry="2" />
<text  x="112.33" y="335.5" ></text>
</g>
<g >
<title>std::forward&lt;int&gt; (46 samples, 0.03%)</title><rect x="231.6" y="565" width="0.4" height="15.0" fill="rgb(222,201,7)" rx="2" ry="2" />
<text  x="234.65" y="575.5" ></text>
</g>
<g >
<title>mxnet::op::mxnet_op::Kernel&lt;mxnet::op::SGDKernel, mshadow::cpu&gt;::Launch&lt;float*, float*, float*, float, float, float, float, mxnet::OpReqType&gt; (1,592 samples, 1.18%)</title><rect x="176.7" y="613" width="13.9" height="15.0" fill="rgb(233,45,54)" rx="2" ry="2" />
<text  x="179.66" y="623.5" ></text>
</g>
<g >
<title>mxnet::NDArray::NDArray (21 samples, 0.02%)</title><rect x="283.3" y="485" width="0.2" height="15.0" fill="rgb(244,123,29)" rx="2" ry="2" />
<text  x="286.27" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (15 samples, 0.01%)</title><rect x="221.8" y="325" width="0.1" height="15.0" fill="rgb(221,227,21)" rx="2" ry="2" />
<text  x="224.81" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (12 samples, 0.01%)</title><rect x="304.8" y="661" width="0.1" height="15.0" fill="rgb(251,189,45)" rx="2" ry="2" />
<text  x="307.77" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.02%)</title><rect x="1189.7" y="677" width="0.3" height="15.0" fill="rgb(213,53,46)" rx="2" ry="2" />
<text  x="1192.71" y="687.5" ></text>
</g>
<g >
<title>smp_call_function_interrupt (13 samples, 0.01%)</title><rect x="205.1" y="597" width="0.2" height="15.0" fill="rgb(220,98,37)" rx="2" ry="2" />
<text  x="208.14" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt; &gt; &gt;::_S_key (35 samples, 0.03%)</title><rect x="299.7" y="581" width="0.3" height="15.0" fill="rgb(219,139,25)" rx="2" ry="2" />
<text  x="302.69" y="591.5" ></text>
</g>
<g >
<title>mxnet::op::MKLDNNActivationForward (62 samples, 0.05%)</title><rect x="107.3" y="357" width="0.5" height="15.0" fill="rgb(251,213,19)" rx="2" ry="2" />
<text  x="110.26" y="367.5" ></text>
</g>
<g >
<title>sched_clock_cpu (9,376 samples, 6.95%)</title><rect x="878.6" y="581" width="82.0" height="15.0" fill="rgb(238,31,8)" rx="2" ry="2" />
<text  x="881.63" y="591.5" >sched_clo..</text>
</g>
<g >
<title>mxnet::op::BinaryOpTune&lt;mshadow::half::half_t&gt;::BinaryOpTune (12 samples, 0.01%)</title><rect x="462.6" y="645" width="0.1" height="15.0" fill="rgb(249,167,11)" rx="2" ry="2" />
<text  x="465.57" y="655.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2,740 samples, 2.03%)</title><rect x="616.4" y="645" width="24.0" height="15.0" fill="rgb(222,165,35)" rx="2" ry="2" />
<text  x="619.42" y="655.5" >_..</text>
</g>
<g >
<title>mxnet::cpp::Optimizer::GetLR_ (25 samples, 0.02%)</title><rect x="290.7" y="629" width="0.3" height="15.0" fill="rgb(239,40,50)" rx="2" ry="2" />
<text  x="293.75" y="639.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (12 samples, 0.01%)</title><rect x="12.8" y="549" width="0.1" height="15.0" fill="rgb(231,33,28)" rx="2" ry="2" />
<text  x="15.83" y="559.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;int*&gt;::move_iterator (18 samples, 0.01%)</title><rect x="237.7" y="549" width="0.1" height="15.0" fill="rgb(210,202,22)" rx="2" ry="2" />
<text  x="240.66" y="559.5" ></text>
</g>
<g >
<title>rmap_walk (478 samples, 0.35%)</title><rect x="200.9" y="469" width="4.2" height="15.0" fill="rgb(208,199,0)" rx="2" ry="2" />
<text  x="203.89" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (142 samples, 0.11%)</title><rect x="268.5" y="517" width="1.2" height="15.0" fill="rgb(254,61,3)" rx="2" ry="2" />
<text  x="271.46" y="527.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (25 samples, 0.02%)</title><rect x="247.2" y="517" width="0.2" height="15.0" fill="rgb(218,97,50)" rx="2" ry="2" />
<text  x="250.20" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (251 samples, 0.19%)</title><rect x="274.5" y="581" width="2.2" height="15.0" fill="rgb(215,90,1)" rx="2" ry="2" />
<text  x="277.54" y="591.5" ></text>
</g>
<g >
<title>do_async_page_fault (896 samples, 0.66%)</title><rect x="23.1" y="501" width="7.9" height="15.0" fill="rgb(253,82,20)" rx="2" ry="2" />
<text  x="26.12" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char const*, std::allocator&lt;char const*&gt; &gt;::_Vector_impl::_Vector_impl (12 samples, 0.01%)</title><rect x="262.0" y="565" width="0.1" height="15.0" fill="rgb(239,224,54)" rx="2" ry="2" />
<text  x="264.97" y="575.5" ></text>
</g>
<g >
<title>mxnet::cpp::NDArray::NDArray (57 samples, 0.04%)</title><rect x="242.6" y="613" width="0.5" height="15.0" fill="rgb(222,208,26)" rx="2" ry="2" />
<text  x="245.59" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::TShape, std::allocator&lt;mxnet::TShape&gt; &gt;::clear (32 samples, 0.02%)</title><rect x="256.3" y="533" width="0.2" height="15.0" fill="rgb(254,121,41)" rx="2" ry="2" />
<text  x="259.26" y="543.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (171 samples, 0.13%)</title><rect x="288.5" y="565" width="1.5" height="15.0" fill="rgb(246,175,48)" rx="2" ry="2" />
<text  x="291.49" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;void**&gt;, void**, void*&gt; (14 samples, 0.01%)</title><rect x="261.6" y="501" width="0.1" height="15.0" fill="rgb(248,85,17)" rx="2" ry="2" />
<text  x="264.60" y="511.5" ></text>
</g>
<g >
<title>mxnet::cpp::OpMap::OpMap (12 samples, 0.01%)</title><rect x="216.1" y="581" width="0.1" height="15.0" fill="rgb(241,203,49)" rx="2" ry="2" />
<text  x="219.12" y="591.5" ></text>
</g>
<g >
<title>do_page_fault (894 samples, 0.66%)</title><rect x="23.1" y="485" width="7.9" height="15.0" fill="rgb(244,2,48)" rx="2" ry="2" />
<text  x="26.14" y="495.5" ></text>
</g>
<g >
<title>inner_thread (329 samples, 0.24%)</title><rect x="1009.8" y="693" width="2.9" height="15.0" fill="rgb(239,210,47)" rx="2" ry="2" />
<text  x="1012.83" y="703.5" ></text>
</g>
<g >
<title>kvm_sched_clock_read (8,847 samples, 6.56%)</title><rect x="882.6" y="549" width="77.4" height="15.0" fill="rgb(241,174,35)" rx="2" ry="2" />
<text  x="885.57" y="559.5" >kvm_sche..</text>
</g>
<g >
<title>std::vector&lt;mxnet::NDArray*, std::allocator&lt;mxnet::NDArray*&gt; &gt;::vector (15 samples, 0.01%)</title><rect x="260.4" y="565" width="0.1" height="15.0" fill="rgb(253,167,52)" rx="2" ry="2" />
<text  x="263.42" y="575.5" ></text>
</g>
<g >
<title>migrate_pages (721 samples, 0.53%)</title><rect x="24.2" y="405" width="6.3" height="15.0" fill="rgb(207,222,21)" rx="2" ry="2" />
<text  x="27.20" y="415.5" ></text>
</g>
<g >
<title>copy_page (53 samples, 0.04%)</title><rect x="24.6" y="357" width="0.4" height="15.0" fill="rgb(240,3,0)" rx="2" ry="2" />
<text  x="27.57" y="367.5" ></text>
</g>
<g >
<title>mxnet::common::SetupDefaultBlobsInOut (46 samples, 0.03%)</title><rect x="99.9" y="421" width="0.4" height="15.0" fill="rgb(253,26,20)" rx="2" ry="2" />
<text  x="102.88" y="431.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel_nd&lt;int&amp;, dnnl::impl::cpu::jit_avx_gemm_f32 (128 samples, 0.09%)</title><rect x="197.3" y="629" width="1.2" height="15.0" fill="rgb(242,193,51)" rx="2" ry="2" />
<text  x="200.34" y="639.5" ></text>
</g>
<g >
<title>x86_pmu_disable (19 samples, 0.01%)</title><rect x="308.4" y="485" width="0.1" height="15.0" fill="rgb(214,197,15)" rx="2" ry="2" />
<text  x="311.38" y="495.5" ></text>
</g>
<g >
<title>dnnl_primitive::execute (13 samples, 0.01%)</title><rect x="107.4" y="293" width="0.2" height="15.0" fill="rgb(236,119,31)" rx="2" ry="2" />
<text  x="110.45" y="303.5" ></text>
</g>
<g >
<title>clear_buddies (219 samples, 0.16%)</title><rect x="797.3" y="565" width="2.0" height="15.0" fill="rgb(215,25,8)" rx="2" ry="2" />
<text  x="800.35" y="575.5" ></text>
</g>
<g >
<title>mxnet::StorageImpl::Free (23 samples, 0.02%)</title><rect x="220.7" y="149" width="0.2" height="15.0" fill="rgb(251,41,1)" rx="2" ry="2" />
<text  x="223.72" y="159.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (19 samples, 0.01%)</title><rect x="240.2" y="517" width="0.2" height="15.0" fill="rgb(245,48,41)" rx="2" ry="2" />
<text  x="243.19" y="527.5" ></text>
</g>
<g >
<title>mxnet::op::ElemwiseAttr&lt;mxnet::TShape, &amp;mxnet::op::shape_is_none, &amp;mxnet::op::shape_assign, true, &amp;mxnet::op::shape_string[abi:cxx11], -1, -1&gt; (28 samples, 0.02%)</title><rect x="286.7" y="517" width="0.2" height="15.0" fill="rgb(214,48,8)" rx="2" ry="2" />
<text  x="289.70" y="527.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::gemm_driver&lt;float, float, float&gt; (76 samples, 0.06%)</title><rect x="113.6" y="213" width="0.6" height="15.0" fill="rgb(212,157,47)" rx="2" ry="2" />
<text  x="116.56" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt; &gt;::_M_valptr (17 samples, 0.01%)</title><rect x="299.8" y="549" width="0.1" height="15.0" fill="rgb(212,100,25)" rx="2" ry="2" />
<text  x="302.79" y="559.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel&lt;dnnl::impl::cpu::gemm_inner_product_fwd_t&lt; (46 samples, 0.03%)</title><rect x="114.3" y="229" width="0.4" height="15.0" fill="rgb(217,174,21)" rx="2" ry="2" />
<text  x="117.29" y="239.5" ></text>
</g>
<g >
<title>mxnet::MKLDNNStream::Submit (111 samples, 0.08%)</title><rect x="109.3" y="341" width="1.0" height="15.0" fill="rgb(206,185,0)" rx="2" ry="2" />
<text  x="112.33" y="351.5" ></text>
</g>
<g >
<title>mxnet::NDArray::NDArray (52 samples, 0.04%)</title><rect x="239.9" y="565" width="0.5" height="15.0" fill="rgb(219,203,37)" rx="2" ry="2" />
<text  x="242.90" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt; &gt;::operator* (19 samples, 0.01%)</title><rect x="299.1" y="629" width="0.1" height="15.0" fill="rgb(227,173,31)" rx="2" ry="2" />
<text  x="302.06" y="639.5" ></text>
</g>
<g >
<title>native_send_call_func_ipi (27 samples, 0.02%)</title><rect x="204.8" y="357" width="0.3" height="15.0" fill="rgb(230,23,7)" rx="2" ry="2" />
<text  x="207.84" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;mxnet::engine::Var*, mxnet::engine::Var*, std::allocator&lt;mxnet::engine::Var*&gt;, std::__detail::_Identity, std::equal_to&lt;mxnet::engine::Var*&gt;, std::hash&lt;mxnet::engine::Var*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;mxnet::engine::Var*, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;mxnet::engine::Var*, false&gt; &gt; &gt; &gt; (19 samples, 0.01%)</title><rect x="287.7" y="533" width="0.2" height="15.0" fill="rgb(212,190,16)" rx="2" ry="2" />
<text  x="290.69" y="543.5" ></text>
</g>
<g >
<title>mxnet::op::OperatorTune&lt;mshadow::half::half_t&gt;::OperatorTune (12 samples, 0.01%)</title><rect x="462.6" y="613" width="0.1" height="15.0" fill="rgb(252,140,1)" rx="2" ry="2" />
<text  x="465.57" y="623.5" ></text>
</g>
<g >
<title>dnnl::reorder::primitive_desc::primitive_desc (62 samples, 0.05%)</title><rect x="108.4" y="277" width="0.6" height="15.0" fill="rgb(235,149,19)" rx="2" ry="2" />
<text  x="111.44" y="287.5" ></text>
</g>
<g >
<title>kvm_guest_apic_eoi_write (20 samples, 0.01%)</title><rect x="1188.7" y="645" width="0.2" height="15.0" fill="rgb(242,110,15)" rx="2" ry="2" />
<text  x="1191.70" y="655.5" ></text>
</g>
<g >
<title>async_page_fault (945 samples, 0.70%)</title><rect x="22.7" y="517" width="8.3" height="15.0" fill="rgb(245,218,22)" rx="2" ry="2" />
<text  x="25.70" y="527.5" ></text>
</g>
<g >
<title>vfprintf (51 samples, 0.04%)</title><rect x="347.1" y="661" width="0.4" height="15.0" fill="rgb(214,68,39)" rx="2" ry="2" />
<text  x="350.10" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::engine::ThreadedVar*, std::allocator&lt;mxnet::engine::ThreadedVar*&gt; &gt;::resize (13 samples, 0.01%)</title><rect x="282.0" y="501" width="0.1" height="15.0" fill="rgb(235,212,27)" rx="2" ry="2" />
<text  x="285.02" y="511.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::OnComplete (41 samples, 0.03%)</title><rect x="99.5" y="437" width="0.3" height="15.0" fill="rgb(235,4,33)" rx="2" ry="2" />
<text  x="102.45" y="447.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (12 samples, 0.01%)</title><rect x="272.7" y="485" width="0.1" height="15.0" fill="rgb(211,173,44)" rx="2" ry="2" />
<text  x="275.68" y="495.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (24 samples, 0.02%)</title><rect x="308.3" y="517" width="0.2" height="15.0" fill="rgb(218,111,16)" rx="2" ry="2" />
<text  x="311.34" y="527.5" ></text>
</g>
<g >
<title>mshadow::expr::MapPacketPlan&lt;mshadow::sv::multo, mshadow::expr::ScalarExp&lt;float&gt;, 3, float,  (18 samples, 0.01%)</title><rect x="297.2" y="485" width="0.1" height="15.0" fill="rgb(220,143,39)" rx="2" ry="2" />
<text  x="300.18" y="495.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::NewOperator (72 samples, 0.05%)</title><rect x="218.5" y="293" width="0.7" height="15.0" fill="rgb(220,183,46)" rx="2" ry="2" />
<text  x="221.53" y="303.5" ></text>
</g>
<g >
<title>nnvm::Op::GetAttrMap (32 samples, 0.02%)</title><rect x="103.3" y="437" width="0.3" height="15.0" fill="rgb(244,2,11)" rx="2" ry="2" />
<text  x="106.34" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;mxnet::cpp::NDBlob,  (42 samples, 0.03%)</title><rect x="224.8" y="549" width="0.3" height="15.0" fill="rgb(213,152,43)" rx="2" ry="2" />
<text  x="227.78" y="559.5" ></text>
</g>
<g >
<title>std::set&lt;dmlc::parameter::FieldAccessEntry*, std::less&lt;dmlc::parameter::FieldAccessEntry*&gt;, std::allocator&lt;dmlc::parameter::FieldAccessEntry*&gt; &gt;::count (18 samples, 0.01%)</title><rect x="289.6" y="501" width="0.1" height="15.0" fill="rgb(240,16,38)" rx="2" ry="2" />
<text  x="292.58" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (48 samples, 0.04%)</title><rect x="279.8" y="581" width="0.4" height="15.0" fill="rgb(236,97,0)" rx="2" ry="2" />
<text  x="282.82" y="591.5" ></text>
</g>
<g >
<title>__kmp_invoke_task_func (5,633 samples, 4.18%)</title><rect x="141.6" y="661" width="49.3" height="15.0" fill="rgb(206,110,6)" rx="2" ry="2" />
<text  x="144.59" y="671.5" >__km..</text>
</g>
<g >
<title>dnnl_primitive::execute (133 samples, 0.10%)</title><rect x="113.5" y="277" width="1.2" height="15.0" fill="rgb(253,60,38)" rx="2" ry="2" />
<text  x="116.54" y="287.5" ></text>
</g>
<g >
<title>mxnet::op::BinaryOpTune&lt;float&gt;::BinaryOpTune (21 samples, 0.02%)</title><rect x="462.3" y="645" width="0.1" height="15.0" fill="rgb(237,46,10)" rx="2" ry="2" />
<text  x="465.26" y="655.5" ></text>
</g>
<g >
<title>mxnet::NDArray::GetMKLDNNData (15 samples, 0.01%)</title><rect x="115.1" y="309" width="0.1" height="15.0" fill="rgb(205,166,10)" rx="2" ry="2" />
<text  x="118.08" y="319.5" ></text>
</g>
<g >
<title>__kmp_join_barrier (320 samples, 0.24%)</title><rect x="459.2" y="693" width="2.8" height="15.0" fill="rgb(210,212,53)" rx="2" ry="2" />
<text  x="462.20" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock (96 samples, 0.07%)</title><rect x="640.4" y="645" width="0.8" height="15.0" fill="rgb(247,106,8)" rx="2" ry="2" />
<text  x="643.39" y="655.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;mxnet::NDArray**&gt;, mxnet::NDArray**&gt; (25 samples, 0.02%)</title><rect x="250.7" y="469" width="0.3" height="15.0" fill="rgb(236,3,43)" rx="2" ry="2" />
<text  x="253.73" y="479.5" ></text>
</g>
<g >
<title>dmlc::ThreadedIter&lt;mxnet::DataBatch&gt;::Recycle (40 samples, 0.03%)</title><rect x="244.4" y="597" width="0.4" height="15.0" fill="rgb(238,222,26)" rx="2" ry="2" />
<text  x="247.42" y="607.5" ></text>
</g>
<g >
<title>mxnet::exec::FComputeExecutor::Run (390 samples, 0.29%)</title><rect x="116.6" y="469" width="3.4" height="15.0" fill="rgb(228,48,50)" rx="2" ry="2" />
<text  x="119.57" y="479.5" ></text>
</g>
<g >
<title>mxnet::io::MNISTIter::Next (189 samples, 0.14%)</title><rect x="32.7" y="533" width="1.7" height="15.0" fill="rgb(223,4,27)" rx="2" ry="2" />
<text  x="35.74" y="543.5" ></text>
</g>
<g >
<title>std::function&lt;void  (72 samples, 0.05%)</title><rect x="282.6" y="533" width="0.6" height="15.0" fill="rgb(222,92,47)" rx="2" ry="2" />
<text  x="285.56" y="543.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::engine::ThreadedEngine::PushSync (29 samples, 0.02%)</title><rect x="99.5" y="341" width="0.2" height="15.0" fill="rgb(216,187,11)" rx="2" ry="2" />
<text  x="102.48" y="351.5" ></text>
</g>
<g >
<title>kvm_guest_apic_eoi_write (94 samples, 0.07%)</title><rect x="411.1" y="645" width="0.8" height="15.0" fill="rgb(232,99,11)" rx="2" ry="2" />
<text  x="414.07" y="655.5" ></text>
</g>
<g >
<title>dmlc::LogCheck_EQ&lt;mxnet::TShape, mxnet::TShape&gt; (29 samples, 0.02%)</title><rect x="31.1" y="533" width="0.3" height="15.0" fill="rgb(206,149,2)" rx="2" ry="2" />
<text  x="34.11" y="543.5" ></text>
</g>
<g >
<title>cfree (73 samples, 0.05%)</title><rect x="1009.1" y="693" width="0.6" height="15.0" fill="rgb(205,182,38)" rx="2" ry="2" />
<text  x="1012.10" y="703.5" ></text>
</g>
<g >
<title>mxnet::NDArray::IsMKLDNNData (12 samples, 0.01%)</title><rect x="37.5" y="437" width="0.1" height="15.0" fill="rgb(249,161,40)" rx="2" ry="2" />
<text  x="40.47" y="447.5" ></text>
</g>
<g >
<title>mxnet::FallBackCompute&lt;void  (12 samples, 0.01%)</title><rect x="116.2" y="405" width="0.1" height="15.0" fill="rgb(236,94,3)" rx="2" ry="2" />
<text  x="119.20" y="415.5" ></text>
</g>
<g >
<title>dmlc::parameter::ParamManager::Find (26 samples, 0.02%)</title><rect x="288.9" y="485" width="0.2" height="15.0" fill="rgb(232,133,22)" rx="2" ry="2" />
<text  x="291.91" y="495.5" ></text>
</g>
<g >
<title>migrate_pages (512 samples, 0.38%)</title><rect x="200.6" y="501" width="4.5" height="15.0" fill="rgb(242,221,14)" rx="2" ry="2" />
<text  x="203.59" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::cpp::NDArray, std::allocator&lt;mxnet::cpp::NDArray&gt; &gt;::vector (104 samples, 0.08%)</title><rect x="262.4" y="613" width="0.9" height="15.0" fill="rgb(239,202,53)" rx="2" ry="2" />
<text  x="265.42" y="623.5" ></text>
</g>
<g >
<title>gemm_driver.constprop.0 (34 samples, 0.03%)</title><rect x="302.7" y="677" width="0.3" height="15.0" fill="rgb(253,140,17)" rx="2" ry="2" />
<text  x="305.70" y="687.5" ></text>
</g>
<g >
<title>mxnet::Imperative::InvokeOp (548 samples, 0.41%)</title><rect x="281.4" y="581" width="4.8" height="15.0" fill="rgb(219,100,46)" rx="2" ry="2" />
<text  x="284.42" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;mxnet::cpp::NDBlob&gt;::~shared_ptr (549 samples, 0.41%)</title><rect x="217.8" y="613" width="4.8" height="15.0" fill="rgb(241,22,27)" rx="2" ry="2" />
<text  x="220.82" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (57 samples, 0.04%)</title><rect x="35.7" y="517" width="0.5" height="15.0" fill="rgb(225,30,51)" rx="2" ry="2" />
<text  x="38.67" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mxnet::IIterator&lt;mxnet::io::TBlobBatch&gt;, std::default_delete&lt;mxnet::IIterator&lt;mxnet::io::TBlobBatch&gt; &gt; &gt;::get (12 samples, 0.01%)</title><rect x="34.4" y="517" width="0.1" height="15.0" fill="rgb(214,216,18)" rx="2" ry="2" />
<text  x="37.41" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Rehash_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, std::integral_constant&lt;bool, true&gt; &gt;::reserve (97 samples, 0.07%)</title><rect x="258.9" y="533" width="0.9" height="15.0" fill="rgb(237,220,5)" rx="2" ry="2" />
<text  x="261.92" y="543.5" ></text>
</g>
<g >
<title>mxnet::TShape::TShape (12 samples, 0.01%)</title><rect x="240.1" y="549" width="0.1" height="15.0" fill="rgb(214,6,8)" rx="2" ry="2" />
<text  x="243.07" y="559.5" ></text>
</g>
<g >
<title>x86_pmu_enable_all (134 samples, 0.10%)</title><rect x="336.3" y="485" width="1.1" height="15.0" fill="rgb(247,131,2)" rx="2" ry="2" />
<text  x="339.27" y="495.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::ExecuteOprBlock (9,538 samples, 7.07%)</title><rect x="36.7" y="533" width="83.4" height="15.0" fill="rgb(227,84,12)" rx="2" ry="2" />
<text  x="39.72" y="543.5" >mxnet::en..</text>
</g>
<g >
<title>std::vector&lt;void*, std::allocator&lt;void*&gt; &gt;::_M_realloc_insert&lt;void*&gt; (49 samples, 0.04%)</title><rect x="261.4" y="533" width="0.5" height="15.0" fill="rgb(240,100,38)" rx="2" ry="2" />
<text  x="264.43" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;mxnet::NDArray::Chunk&gt; &gt;::destroy&lt;mxnet::NDArray::Chunk&gt; (493 samples, 0.37%)</title><rect x="218.2" y="373" width="4.3" height="15.0" fill="rgb(234,184,4)" rx="2" ry="2" />
<text  x="221.23" y="383.5" ></text>
</g>
<g >
<title>mxnet::MKLDNNRun (360 samples, 0.27%)</title><rect x="107.9" y="405" width="3.1" height="15.0" fill="rgb(205,142,8)" rx="2" ry="2" />
<text  x="110.86" y="415.5" ></text>
</g>
<g >
<title>dnnl::memory::desc::desc (15 samples, 0.01%)</title><rect x="111.8" y="325" width="0.1" height="15.0" fill="rgb(221,192,0)" rx="2" ry="2" />
<text  x="114.79" y="335.5" ></text>
</g>
<g >
<title>mxnet::common::SetupDefaultBlobsIn (22 samples, 0.02%)</title><rect x="116.7" y="421" width="0.2" height="15.0" fill="rgb(229,116,33)" rx="2" ry="2" />
<text  x="119.69" y="431.5" ></text>
</g>
<g >
<title>smp_call_function_interrupt (20 samples, 0.01%)</title><rect x="599.6" y="629" width="0.2" height="15.0" fill="rgb(228,195,51)" rx="2" ry="2" />
<text  x="602.60" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;mxnet::TShape&gt; &gt;::construct&lt;mxnet::TShape, mxnet::TShape const&amp;&gt; (58 samples, 0.04%)</title><rect x="256.6" y="517" width="0.5" height="15.0" fill="rgb(208,214,16)" rx="2" ry="2" />
<text  x="259.59" y="527.5" ></text>
</g>
<g >
<title>mxnet::imperative::DerefInputOutput (37 samples, 0.03%)</title><rect x="283.2" y="549" width="0.3" height="15.0" fill="rgb(227,66,54)" rx="2" ry="2" />
<text  x="286.19" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::push_back (19 samples, 0.01%)</title><rect x="291.4" y="613" width="0.2" height="15.0" fill="rgb(219,224,37)" rx="2" ry="2" />
<text  x="294.41" y="623.5" ></text>
</g>
<g >
<title>default_send_IPI_single_phys (16 samples, 0.01%)</title><rect x="1121.5" y="485" width="0.1" height="15.0" fill="rgb(225,191,10)" rx="2" ry="2" />
<text  x="1124.46" y="495.5" ></text>
</g>
<g >
<title>mxnet::MKLDNNRun (569 samples, 0.42%)</title><rect x="111.1" y="405" width="4.9" height="15.0" fill="rgb(212,163,32)" rx="2" ry="2" />
<text  x="114.05" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;dmlc::parameter::FieldAccessEntry*, dmlc::parameter::FieldAccessEntry*, std::_Identity&lt;dmlc::parameter::FieldAccessEntry*&gt;, std::less&lt;dmlc::parameter::FieldAccessEntry*&gt;, std::allocator&lt;dmlc::parameter::FieldAccessEntry*&gt; &gt;::find (16 samples, 0.01%)</title><rect x="289.6" y="485" width="0.1" height="15.0" fill="rgb(216,82,21)" rx="2" ry="2" />
<text  x="292.60" y="495.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::Tuple (51 samples, 0.04%)</title><rect x="256.6" y="469" width="0.5" height="15.0" fill="rgb(238,147,10)" rx="2" ry="2" />
<text  x="259.63" y="479.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::operator= (14 samples, 0.01%)</title><rect x="240.8" y="565" width="0.1" height="15.0" fill="rgb(207,61,51)" rx="2" ry="2" />
<text  x="243.75" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate (15 samples, 0.01%)</title><rect x="274.9" y="565" width="0.2" height="15.0" fill="rgb(229,4,36)" rx="2" ry="2" />
<text  x="277.93" y="575.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::gemm_threading_driver&lt;float, float, float&gt; (67 samples, 0.05%)</title><rect x="113.6" y="197" width="0.6" height="15.0" fill="rgb(226,129,29)" rx="2" ry="2" />
<text  x="116.62" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, dnnl::impl::cpu::avx_gemm_f32::get_xbyak_gemm (33 samples, 0.02%)</title><rect x="301.8" y="597" width="0.3" height="15.0" fill="rgb(243,51,26)" rx="2" ry="2" />
<text  x="304.84" y="607.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (12 samples, 0.01%)</title><rect x="300.5" y="533" width="0.1" height="15.0" fill="rgb(233,14,11)" rx="2" ry="2" />
<text  x="303.47" y="543.5" ></text>
</g>
<g >
<title>sys_futex (38 samples, 0.03%)</title><rect x="35.8" y="485" width="0.3" height="15.0" fill="rgb(229,159,43)" rx="2" ry="2" />
<text  x="38.81" y="495.5" ></text>
</g>
<g >
<title>mxnet::op::SoftmaxOutputOp&lt;mshadow::cpu, float&gt;::Backward (18 samples, 0.01%)</title><rect x="119.7" y="405" width="0.2" height="15.0" fill="rgb(218,58,20)" rx="2" ry="2" />
<text  x="122.74" y="415.5" ></text>
</g>
<g >
<title>up_read (18 samples, 0.01%)</title><rect x="30.8" y="453" width="0.1" height="15.0" fill="rgb(239,81,44)" rx="2" ry="2" />
<text  x="33.77" y="463.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (23 samples, 0.02%)</title><rect x="462.9" y="629" width="0.2" height="15.0" fill="rgb(245,207,1)" rx="2" ry="2" />
<text  x="465.93" y="639.5" ></text>
</g>
<g >
<title>__default_send_IPI_dest_field (167 samples, 0.12%)</title><rect x="29.0" y="229" width="1.4" height="15.0" fill="rgb(205,8,19)" rx="2" ry="2" />
<text  x="31.97" y="239.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;mxnet::NDArray::Chunk&gt;::operator= (14 samples, 0.01%)</title><rect x="224.4" y="581" width="0.1" height="15.0" fill="rgb(205,111,25)" rx="2" ry="2" />
<text  x="227.40" y="591.5" ></text>
</g>
<g >
<title>std::function&lt;void  (29 samples, 0.02%)</title><rect x="99.5" y="293" width="0.2" height="15.0" fill="rgb(231,64,42)" rx="2" ry="2" />
<text  x="102.48" y="303.5" ></text>
</g>
<g >
<title>stop_one_cpu (32 samples, 0.02%)</title><rect x="1189.7" y="597" width="0.3" height="15.0" fill="rgb(212,182,49)" rx="2" ry="2" />
<text  x="1192.71" y="607.5" ></text>
</g>
<g >
<title>mxnet::op::OpSignature::AddSign (40 samples, 0.03%)</title><rect x="112.2" y="325" width="0.4" height="15.0" fill="rgb(231,170,2)" rx="2" ry="2" />
<text  x="115.23" y="335.5" ></text>
</g>
<g >
<title>mxnet::cpp::Operator::operator (266 samples, 0.20%)</title><rect x="277.4" y="629" width="2.3" height="15.0" fill="rgb(245,132,41)" rx="2" ry="2" />
<text  x="280.40" y="639.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::function&lt;void  (9,592 samples, 7.11%)</title><rect x="36.3" y="661" width="83.9" height="15.0" fill="rgb(229,45,47)" rx="2" ry="2" />
<text  x="39.29" y="671.5" >std::thre..</text>
</g>
<g >
<title>finish_task_switch (20 samples, 0.01%)</title><rect x="348.0" y="629" width="0.2" height="15.0" fill="rgb(252,211,7)" rx="2" ry="2" />
<text  x="351.03" y="639.5" ></text>
</g>
<g >
<title>all (134,894 samples, 100%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(253,162,28)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;mxnet::cpp::NDBlob&gt;::~shared_ptr (29 samples, 0.02%)</title><rect x="223.1" y="613" width="0.2" height="15.0" fill="rgb(240,20,17)" rx="2" ry="2" />
<text  x="226.09" y="623.5" ></text>
</g>
<g >
<title>nnvm::OpMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::count (25 samples, 0.02%)</title><rect x="266.0" y="597" width="0.2" height="15.0" fill="rgb(212,163,17)" rx="2" ry="2" />
<text  x="269.00" y="607.5" ></text>
</g>
<g >
<title>dnnl::primitive::execute (188 samples, 0.14%)</title><rect x="113.1" y="309" width="1.7" height="15.0" fill="rgb(241,220,46)" rx="2" ry="2" />
<text  x="116.13" y="319.5" ></text>
</g>
<g >
<title>try_to_unmap_one (545 samples, 0.40%)</title><rect x="25.7" y="341" width="4.8" height="15.0" fill="rgb(206,135,32)" rx="2" ry="2" />
<text  x="28.70" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (85 samples, 0.06%)</title><rect x="236.2" y="469" width="0.7" height="15.0" fill="rgb(213,92,49)" rx="2" ry="2" />
<text  x="239.20" y="479.5" ></text>
</g>
<g >
<title>mxnet::imperative::SetDependency (17 samples, 0.01%)</title><rect x="252.3" y="533" width="0.2" height="15.0" fill="rgb(230,50,26)" rx="2" ry="2" />
<text  x="255.34" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (19 samples, 0.01%)</title><rect x="240.2" y="485" width="0.2" height="15.0" fill="rgb(254,164,45)" rx="2" ry="2" />
<text  x="243.19" y="495.5" ></text>
</g>
<g >
<title>mxnet::TShape::TShape (16 samples, 0.01%)</title><rect x="242.0" y="597" width="0.2" height="15.0" fill="rgb(211,157,38)" rx="2" ry="2" />
<text  x="245.03" y="607.5" ></text>
</g>
<g >
<title>finish_task_switch (17 samples, 0.01%)</title><rect x="737.3" y="597" width="0.2" height="15.0" fill="rgb(227,191,25)" rx="2" ry="2" />
<text  x="740.32" y="607.5" ></text>
</g>
<g >
<title>mxnet::exec::GraphExecutor::Backward (15 samples, 0.01%)</title><rect x="243.5" y="597" width="0.1" height="15.0" fill="rgb(243,183,3)" rx="2" ry="2" />
<text  x="246.49" y="607.5" ></text>
</g>
<g >
<title>native_apic_mem_write (26 samples, 0.02%)</title><rect x="493.1" y="629" width="0.2" height="15.0" fill="rgb(216,86,8)" rx="2" ry="2" />
<text  x="496.08" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (33 samples, 0.02%)</title><rect x="276.9" y="613" width="0.2" height="15.0" fill="rgb(212,171,3)" rx="2" ry="2" />
<text  x="279.85" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (14 samples, 0.01%)</title><rect x="284.2" y="405" width="0.2" height="15.0" fill="rgb(245,186,3)" rx="2" ry="2" />
<text  x="287.23" y="415.5" ></text>
</g>
<g >
<title>std::transform&lt;__gnu_cxx::__normal_iterator&lt;mxnet::cpp::NDArray*, std::vector&lt;mxnet::cpp::NDArray, std::allocator&lt;mxnet::cpp::NDArray&gt; &gt; &gt;, std::back_insert_iterator&lt;std::vector&lt;void*, std::allocator&lt;void*&gt; &gt; &gt;, mxnet::cpp::Operator::Invoke (82 samples, 0.06%)</title><rect x="261.2" y="597" width="0.7" height="15.0" fill="rgb(205,21,23)" rx="2" ry="2" />
<text  x="264.20" y="607.5" ></text>
</g>
<g >
<title>kvm_guest_apic_eoi_write (26 samples, 0.02%)</title><rect x="493.1" y="645" width="0.2" height="15.0" fill="rgb(210,224,50)" rx="2" ry="2" />
<text  x="496.08" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt;::emplace_back&lt;mshadow::Tensor&lt;mshadow::cpu, 2, float&gt; &gt; (99 samples, 0.07%)</title><rect x="33.3" y="517" width="0.9" height="15.0" fill="rgb(247,9,36)" rx="2" ry="2" />
<text  x="36.30" y="527.5" ></text>
</g>
<g >
<title>do_page_fault (14 samples, 0.01%)</title><rect x="11.6" y="645" width="0.2" height="15.0" fill="rgb(234,14,17)" rx="2" ry="2" />
<text  x="14.64" y="655.5" ></text>
</g>
<g >
<title>smp_call_function_interrupt (30 samples, 0.02%)</title><rect x="493.0" y="661" width="0.3" height="15.0" fill="rgb(243,146,44)" rx="2" ry="2" />
<text  x="496.04" y="671.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::function&lt;void  (9,592 samples, 7.11%)</title><rect x="36.3" y="613" width="83.9" height="15.0" fill="rgb(218,25,44)" rx="2" ry="2" />
<text  x="39.29" y="623.5" >std::__in..</text>
</g>
<g >
<title>sgemm_oncopy (157 samples, 0.12%)</title><rect x="343.3" y="677" width="1.4" height="15.0" fill="rgb(253,171,34)" rx="2" ry="2" />
<text  x="346.35" y="687.5" ></text>
</g>
<g >
<title>mxnet::op::SoftmaxOutputComputeExCPU (33 samples, 0.02%)</title><rect x="116.2" y="421" width="0.3" height="15.0" fill="rgb(245,62,26)" rx="2" ry="2" />
<text  x="119.20" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (19 samples, 0.01%)</title><rect x="240.2" y="469" width="0.2" height="15.0" fill="rgb(231,34,9)" rx="2" ry="2" />
<text  x="243.19" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (32 samples, 0.02%)</title><rect x="269.3" y="501" width="0.3" height="15.0" fill="rgb(207,11,23)" rx="2" ry="2" />
<text  x="272.27" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::Storage::Handle, std::allocator&lt;mxnet::Storage::Handle&gt; &gt;::operator= (15 samples, 0.01%)</title><rect x="222.1" y="325" width="0.1" height="15.0" fill="rgb(253,203,6)" rx="2" ry="2" />
<text  x="225.09" y="335.5" ></text>
</g>
<g >
<title>mxnet::NDArray::data (16 samples, 0.01%)</title><rect x="116.7" y="405" width="0.1" height="15.0" fill="rgb(237,2,15)" rx="2" ry="2" />
<text  x="119.70" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (55 samples, 0.04%)</title><rect x="298.0" y="613" width="0.5" height="15.0" fill="rgb(218,100,25)" rx="2" ry="2" />
<text  x="301.00" y="623.5" ></text>
</g>
<g >
<title>mxnet::NDArray::~NDArray (13 samples, 0.01%)</title><rect x="241.9" y="597" width="0.1" height="15.0" fill="rgb(220,57,17)" rx="2" ry="2" />
<text  x="244.90" y="607.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (21 samples, 0.02%)</title><rect x="36.5" y="501" width="0.2" height="15.0" fill="rgb(231,210,17)" rx="2" ry="2" />
<text  x="39.51" y="511.5" ></text>
</g>
<g >
<title>mxnet::cpp::Optimizer::GetParamKeys_ (45 samples, 0.03%)</title><rect x="291.0" y="629" width="0.4" height="15.0" fill="rgb(215,49,33)" rx="2" ry="2" />
<text  x="293.96" y="639.5" ></text>
</g>
<g >
<title>nnvm::OpMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::contains (23 samples, 0.02%)</title><rect x="266.0" y="581" width="0.2" height="15.0" fill="rgb(244,2,16)" rx="2" ry="2" />
<text  x="269.02" y="591.5" ></text>
</g>
<g >
<title>mxnet::TShape::TShape (20 samples, 0.01%)</title><rect x="33.9" y="453" width="0.2" height="15.0" fill="rgb(234,39,9)" rx="2" ry="2" />
<text  x="36.91" y="463.5" ></text>
</g>
<g >
<title>dmlc::ThreadedIter&lt;mxnet::DataBatch&gt;::ThrowExceptionIfSet (15 samples, 0.01%)</title><rect x="244.4" y="581" width="0.2" height="15.0" fill="rgb(246,101,0)" rx="2" ry="2" />
<text  x="247.44" y="591.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (515 samples, 0.38%)</title><rect x="835.5" y="565" width="4.5" height="15.0" fill="rgb(216,138,12)" rx="2" ry="2" />
<text  x="838.54" y="575.5" ></text>
</g>
<g >
<title>rcu_all_qs (25 samples, 0.02%)</title><rect x="307.5" y="565" width="0.2" height="15.0" fill="rgb(229,157,50)" rx="2" ry="2" />
<text  x="310.48" y="575.5" ></text>
</g>
<g >
<title>mxnet::engine::CallbackOnComplete::operator (77 samples, 0.06%)</title><rect x="98.7" y="469" width="0.7" height="15.0" fill="rgb(242,112,21)" rx="2" ry="2" />
<text  x="101.74" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (17 samples, 0.01%)</title><rect x="238.8" y="549" width="0.2" height="15.0" fill="rgb(226,138,33)" rx="2" ry="2" />
<text  x="241.82" y="559.5" ></text>
</g>
<g >
<title>call_function_interrupt (22 samples, 0.02%)</title><rect x="1188.7" y="677" width="0.2" height="15.0" fill="rgb(226,10,33)" rx="2" ry="2" />
<text  x="1191.68" y="687.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (5,997 samples, 4.45%)</title><rect x="1069.2" y="693" width="52.4" height="15.0" fill="rgb(252,122,27)" rx="2" ry="2" />
<text  x="1072.19" y="703.5" >pthre..</text>
</g>
<g >
<title>remove_migration_ptes (28 samples, 0.02%)</title><rect x="25.3" y="389" width="0.2" height="15.0" fill="rgb(250,112,51)" rx="2" ry="2" />
<text  x="28.30" y="399.5" ></text>
</g>
<g >
<title>change_protection (14 samples, 0.01%)</title><rect x="641.4" y="581" width="0.1" height="15.0" fill="rgb(235,174,17)" rx="2" ry="2" />
<text  x="644.39" y="591.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (86 samples, 0.06%)</title><rect x="120.2" y="677" width="0.8" height="15.0" fill="rgb(225,17,44)" rx="2" ry="2" />
<text  x="123.25" y="687.5" ></text>
</g>
<g >
<title>std::function&lt;void  (360 samples, 0.27%)</title><rect x="107.9" y="389" width="3.1" height="15.0" fill="rgb(210,95,2)" rx="2" ry="2" />
<text  x="110.86" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;void  (247 samples, 0.18%)</title><rect x="100.3" y="421" width="2.2" height="15.0" fill="rgb(212,70,19)" rx="2" ry="2" />
<text  x="103.31" y="431.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1,722 samples, 1.28%)</title><rect x="584.7" y="661" width="15.1" height="15.0" fill="rgb(227,162,18)" rx="2" ry="2" />
<text  x="587.71" y="671.5" ></text>
</g>
<g >
<title>nnvm::OpMap&lt;std::function&lt;unsigned int  (16 samples, 0.01%)</title><rect x="259.9" y="533" width="0.2" height="15.0" fill="rgb(245,52,0)" rx="2" ry="2" />
<text  x="262.94" y="543.5" ></text>
</g>
<g >
<title>std::normal_distribution&lt;float&gt;::operator (14 samples, 0.01%)</title><rect x="190.6" y="597" width="0.1" height="15.0" fill="rgb(213,44,22)" rx="2" ry="2" />
<text  x="193.59" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (56 samples, 0.04%)</title><rect x="284.5" y="533" width="0.5" height="15.0" fill="rgb(209,174,49)" rx="2" ry="2" />
<text  x="287.53" y="543.5" ></text>
</g>
<g >
<title>mxnet::TBlob::Size (17 samples, 0.01%)</title><rect x="97.7" y="421" width="0.2" height="15.0" fill="rgb(228,95,41)" rx="2" ry="2" />
<text  x="100.73" y="431.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPool&lt;mxnet::engine::ThreadedOpr&gt;::New&lt;&gt; (28 samples, 0.02%)</title><rect x="218.6" y="261" width="0.3" height="15.0" fill="rgb(253,120,35)" rx="2" ry="2" />
<text  x="221.63" y="271.5" ></text>
</g>
<g >
<title>mxnet::NDArray::Detach (81 samples, 0.06%)</title><rect x="239.9" y="581" width="0.7" height="15.0" fill="rgb(253,162,31)" rx="2" ry="2" />
<text  x="242.86" y="591.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::assign&lt;long const*&gt; (13 samples, 0.01%)</title><rect x="241.0" y="533" width="0.1" height="15.0" fill="rgb(227,161,31)" rx="2" ry="2" />
<text  x="244.02" y="543.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr (32 samples, 0.02%)</title><rect x="1189.7" y="613" width="0.3" height="15.0" fill="rgb(252,184,16)" rx="2" ry="2" />
<text  x="1192.71" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;mxnet::NDArray::Chunk&gt;::operator= (17 samples, 0.01%)</title><rect x="241.8" y="581" width="0.1" height="15.0" fill="rgb(227,33,20)" rx="2" ry="2" />
<text  x="244.75" y="591.5" ></text>
</g>
<g >
<title>mxnet::op::broadcast::Reduce&lt;mshadow::red::sum, 2, float, mxnet::op::mshadow_op::identity, false&gt; (195 samples, 0.14%)</title><rect x="117.6" y="357" width="1.7" height="15.0" fill="rgb(243,106,43)" rx="2" ry="2" />
<text  x="120.64" y="367.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::PushAsync (40 samples, 0.03%)</title><rect x="246.6" y="565" width="0.3" height="15.0" fill="rgb(248,36,0)" rx="2" ry="2" />
<text  x="249.60" y="575.5" ></text>
</g>
<g >
<title>mxnet::NDArray::SetTBlob (27 samples, 0.02%)</title><rect x="37.6" y="421" width="0.3" height="15.0" fill="rgb(237,112,46)" rx="2" ry="2" />
<text  x="40.62" y="431.5" ></text>
</g>
<g >
<title>mxnet::NDArray::SetTBlob (70 samples, 0.05%)</title><rect x="31.7" y="517" width="0.6" height="15.0" fill="rgb(236,1,29)" rx="2" ry="2" />
<text  x="34.72" y="527.5" ></text>
</g>
<g >
<title>cfree (14 samples, 0.01%)</title><rect x="234.0" y="533" width="0.1" height="15.0" fill="rgb(233,90,8)" rx="2" ry="2" />
<text  x="236.96" y="543.5" ></text>
</g>
<g >
<title>native_apic_mem_write (20 samples, 0.01%)</title><rect x="599.6" y="597" width="0.2" height="15.0" fill="rgb(251,33,45)" rx="2" ry="2" />
<text  x="602.60" y="607.5" ></text>
</g>
<g >
<title>async_page_fault (88 samples, 0.07%)</title><rect x="1146.2" y="677" width="0.7" height="15.0" fill="rgb(254,201,15)" rx="2" ry="2" />
<text  x="1149.17" y="687.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (172 samples, 0.13%)</title><rect x="268.4" y="549" width="1.5" height="15.0" fill="rgb(248,144,38)" rx="2" ry="2" />
<text  x="271.37" y="559.5" ></text>
</g>
<g >
<title>mxnet::Imperative::Invoke (756 samples, 0.56%)</title><rect x="251.3" y="565" width="6.6" height="15.0" fill="rgb(240,137,2)" rx="2" ry="2" />
<text  x="254.25" y="575.5" ></text>
</g>
<g >
<title>migrate_page_states (16 samples, 0.01%)</title><rect x="25.0" y="341" width="0.2" height="15.0" fill="rgb(208,169,52)" rx="2" ry="2" />
<text  x="28.05" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::engine::Var*, std::allocator&lt;mxnet::engine::Var*&gt; &gt;::reserve (12 samples, 0.01%)</title><rect x="285.9" y="549" width="0.1" height="15.0" fill="rgb(209,13,49)" rx="2" ry="2" />
<text  x="288.89" y="559.5" ></text>
</g>
<g >
<title>wake_up_q (5,922 samples, 4.39%)</title><rect x="1069.8" y="597" width="51.8" height="15.0" fill="rgb(243,149,21)" rx="2" ry="2" />
<text  x="1072.83" y="607.5" >wake_..</text>
</g>
<g >
<title>std::_Destroy&lt;mxnet::TShape*&gt; (19 samples, 0.01%)</title><rect x="256.3" y="485" width="0.2" height="15.0" fill="rgb(254,98,23)" rx="2" ry="2" />
<text  x="259.34" y="495.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;mxnet::TBlob*&gt; (13 samples, 0.01%)</title><rect x="33.1" y="453" width="0.1" height="15.0" fill="rgb(221,171,48)" rx="2" ry="2" />
<text  x="36.12" y="463.5" ></text>
</g>
<g >
<title>call_function_interrupt (100 samples, 0.07%)</title><rect x="411.0" y="677" width="0.9" height="15.0" fill="rgb(236,38,30)" rx="2" ry="2" />
<text  x="414.02" y="687.5" ></text>
</g>
<g >
<title>SetNDInputsOutputs (28 samples, 0.02%)</title><rect x="281.0" y="597" width="0.3" height="15.0" fill="rgb(211,159,53)" rx="2" ry="2" />
<text  x="284.04" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;char const*, std::allocator&lt;char const*&gt; &gt;::_M_realloc_insert&lt;char const*&gt; (17 samples, 0.01%)</title><rect x="291.4" y="581" width="0.2" height="15.0" fill="rgb(221,22,42)" rx="2" ry="2" />
<text  x="294.42" y="591.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel&lt;dnnl::impl::cpu::simple_reorder_impl&lt; (14 samples, 0.01%)</title><rect x="109.8" y="213" width="0.2" height="15.0" fill="rgb(249,188,45)" rx="2" ry="2" />
<text  x="112.84" y="223.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPoolAllocatable&lt;mxnet::engine::ThreadedOpr&gt;::New&lt;&gt; (42 samples, 0.03%)</title><rect x="218.5" y="277" width="0.4" height="15.0" fill="rgb(249,111,25)" rx="2" ry="2" />
<text  x="221.54" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (13 samples, 0.01%)</title><rect x="258.3" y="533" width="0.1" height="15.0" fill="rgb(242,67,9)" rx="2" ry="2" />
<text  x="261.30" y="543.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPoolAllocatable&lt;mxnet::engine::OprBlock&gt;::Delete (15 samples, 0.01%)</title><rect x="98.8" y="437" width="0.1" height="15.0" fill="rgb(251,135,37)" rx="2" ry="2" />
<text  x="101.75" y="447.5" ></text>
</g>
<g >
<title>update_rq_clock (132 samples, 0.10%)</title><rect x="967.9" y="613" width="1.1" height="15.0" fill="rgb(206,103,31)" rx="2" ry="2" />
<text  x="970.89" y="623.5" ></text>
</g>
<g >
<title>dnnl::impl::(anonymous namespace)::init_info_mem&lt;dnnl::impl::reorder_pd_t&gt; (12 samples, 0.01%)</title><rect x="108.8" y="197" width="0.1" height="15.0" fill="rgb(222,75,39)" rx="2" ry="2" />
<text  x="111.77" y="207.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (14 samples, 0.01%)</title><rect x="13.7" y="549" width="0.1" height="15.0" fill="rgb(209,202,44)" rx="2" ry="2" />
<text  x="16.67" y="559.5" ></text>
</g>
<g >
<title>try_to_wake_up (6,316 samples, 4.68%)</title><rect x="1013.9" y="581" width="55.3" height="15.0" fill="rgb(205,112,33)" rx="2" ry="2" />
<text  x="1016.94" y="591.5" >try_t..</text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.01%)</title><rect x="36.6" y="437" width="0.1" height="15.0" fill="rgb(245,213,33)" rx="2" ry="2" />
<text  x="39.57" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;char const*&amp;, char const*&amp;&gt; (22 samples, 0.02%)</title><rect x="290.1" y="533" width="0.2" height="15.0" fill="rgb(237,119,54)" rx="2" ry="2" />
<text  x="293.07" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, mxnet::cpp::NDArray&gt; &gt; &gt;::_M_lower_bound (180 samples, 0.13%)</title><rect x="299.6" y="597" width="1.6" height="15.0" fill="rgb(217,180,7)" rx="2" ry="2" />
<text  x="302.60" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;mxnet::NDArray&gt; &gt;::construct&lt;mxnet::NDArray, mxnet::NDArray&amp;&gt; (22 samples, 0.02%)</title><rect x="283.3" y="517" width="0.2" height="15.0" fill="rgb(237,9,34)" rx="2" ry="2" />
<text  x="286.26" y="527.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::avx_gemm_f32::get_xbyak_gemm (12 samples, 0.01%)</title><rect x="156.8" y="549" width="0.1" height="15.0" fill="rgb(247,161,22)" rx="2" ry="2" />
<text  x="159.84" y="559.5" ></text>
</g>
<g >
<title>async_page_fault (524 samples, 0.39%)</title><rect x="200.5" y="613" width="4.6" height="15.0" fill="rgb(253,75,5)" rx="2" ry="2" />
<text  x="203.55" y="623.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;bool, int&gt; const*, std::vector&lt;std::pair&lt;bool, int&gt;, std::allocator&lt;std::pair&lt;bool, int&gt; &gt; &gt; &gt;, std::pair&lt;bool, int&gt;*&gt; (318 samples, 0.24%)</title><rect x="104.0" y="389" width="2.8" height="15.0" fill="rgb(243,31,29)" rx="2" ry="2" />
<text  x="107.01" y="399.5" ></text>
</g>
<g >
<title>mxnet::NDArray::NDArray (16 samples, 0.01%)</title><rect x="112.0" y="341" width="0.1" height="15.0" fill="rgb(225,49,52)" rx="2" ry="2" />
<text  x="114.99" y="351.5" ></text>
</g>
<g >
<title>mxnet::TShape::TShape (52 samples, 0.04%)</title><rect x="256.6" y="485" width="0.5" height="15.0" fill="rgb(213,190,31)" rx="2" ry="2" />
<text  x="259.62" y="495.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::inner_product_utils::pp_kernel_t&lt; (765 samples, 0.57%)</title><rect x="142.3" y="581" width="6.7" height="15.0" fill="rgb(215,47,4)" rx="2" ry="2" />
<text  x="145.33" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,329 samples, 3.21%)</title><rect x="305.0" y="645" width="37.9" height="15.0" fill="rgb(212,198,16)" rx="2" ry="2" />
<text  x="307.99" y="655.5" >do_..</text>
</g>
<g >
<title>sgemm_beta (2,360 samples, 1.75%)</title><rect x="1121.7" y="693" width="20.6" height="15.0" fill="rgb(231,15,42)" rx="2" ry="2" />
<text  x="1124.67" y="703.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel&lt;dnnl::impl::cpu::gemm_inner_product_fwd_t&lt; (995 samples, 0.74%)</title><rect x="142.2" y="613" width="8.7" height="15.0" fill="rgb(226,214,13)" rx="2" ry="2" />
<text  x="145.15" y="623.5" ></text>
</g>
<g >
<title>sys_futex (16 samples, 0.01%)</title><rect x="247.2" y="469" width="0.2" height="15.0" fill="rgb(249,91,35)" rx="2" ry="2" />
<text  x="250.24" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;mxnet::NDArray const*, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; &gt;, mxnet::NDArray*, mxnet::NDArray&gt; (16 samples, 0.01%)</title><rect x="285.1" y="533" width="0.1" height="15.0" fill="rgb(216,105,36)" rx="2" ry="2" />
<text  x="288.08" y="543.5" ></text>
</g>
<g >
<title>mxnet::TShape::TShape (27 samples, 0.02%)</title><rect x="31.8" y="501" width="0.3" height="15.0" fill="rgb(225,82,2)" rx="2" ry="2" />
<text  x="34.84" y="511.5" ></text>
</g>
<g >
<title>mxnet::imperative::PushFComputeEx (85 samples, 0.06%)</title><rect x="251.6" y="533" width="0.7" height="15.0" fill="rgb(227,130,30)" rx="2" ry="2" />
<text  x="254.60" y="543.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;mxnet::TShape*&gt; (14 samples, 0.01%)</title><rect x="256.4" y="469" width="0.1" height="15.0" fill="rgb(224,110,21)" rx="2" ry="2" />
<text  x="259.38" y="479.5" ></text>
</g>
<g >
<title>sys_futex (4,307 samples, 3.19%)</title><rect x="305.2" y="629" width="37.7" height="15.0" fill="rgb(243,158,54)" rx="2" ry="2" />
<text  x="308.18" y="639.5" >sys..</text>
</g>
<g >
<title>mxnet::common::SetupDefaultBlobsInOut (41 samples, 0.03%)</title><rect x="116.7" y="437" width="0.3" height="15.0" fill="rgb(213,105,35)" rx="2" ry="2" />
<text  x="119.66" y="447.5" ></text>
</g>
<g >
<title>std::_Construct&lt;mxnet::cpp::NDArray, mxnet::cpp::NDArray const&amp;&gt; (13 samples, 0.01%)</title><rect x="263.1" y="533" width="0.1" height="15.0" fill="rgb(230,20,38)" rx="2" ry="2" />
<text  x="266.09" y="543.5" ></text>
</g>
<g >
<title>mxnet::TBlob::TBlob&lt;mshadow::cpu, 2, float&gt; (19 samples, 0.01%)</title><rect x="34.2" y="469" width="0.2" height="15.0" fill="rgb(224,78,34)" rx="2" ry="2" />
<text  x="37.21" y="479.5" ></text>
</g>
<g >
<title>mxnet::MKLDNNStream::Submit (29 samples, 0.02%)</title><rect x="107.4" y="341" width="0.2" height="15.0" fill="rgb(249,193,31)" rx="2" ry="2" />
<text  x="110.37" y="351.5" ></text>
</g>
<g >
<title>__put_page (18 samples, 0.01%)</title><rect x="24.3" y="389" width="0.2" height="15.0" fill="rgb(220,114,9)" rx="2" ry="2" />
<text  x="27.32" y="399.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEnginePerDevice::PushToExecute (191 samples, 0.14%)</title><rect x="219.4" y="277" width="1.6" height="15.0" fill="rgb(238,194,54)" rx="2" ry="2" />
<text  x="222.37" y="287.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;int*&gt;, int*&gt; (231 samples, 0.17%)</title><rect x="235.6" y="533" width="2.1" height="15.0" fill="rgb(208,228,41)" rx="2" ry="2" />
<text  x="238.64" y="543.5" ></text>
</g>
<g >
<title>mxnet::NDArray::operator= (61 samples, 0.05%)</title><rect x="224.0" y="597" width="0.5" height="15.0" fill="rgb(245,172,14)" rx="2" ry="2" />
<text  x="227.00" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,102 samples, 6.75%)</title><rect x="497.1" y="677" width="79.7" height="15.0" fill="rgb(238,86,35)" rx="2" ry="2" />
<text  x="500.14" y="687.5" >entry_SYS..</text>
</g>
<g >
<title>x86_pmu_disable_all (18 samples, 0.01%)</title><rect x="308.4" y="453" width="0.1" height="15.0" fill="rgb(253,131,51)" rx="2" ry="2" />
<text  x="311.39" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;void**&gt;, void**&gt; (12 samples, 0.01%)</title><rect x="261.6" y="469" width="0.1" height="15.0" fill="rgb(252,81,14)" rx="2" ry="2" />
<text  x="264.62" y="479.5" ></text>
</g>
<g >
<title>mshadow::MapExpCPUEngine&lt;true, mshadow::sv::multo, mshadow::Tensor&lt;mshadow::cpu, 3, float&gt;, 3, float, mshadow::expr::ScalarExp&lt;float&gt;, 1&gt;::Map (18 samples, 0.01%)</title><rect x="297.2" y="501" width="0.1" height="15.0" fill="rgb(226,50,47)" rx="2" ry="2" />
<text  x="300.18" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (12 samples, 0.01%)</title><rect x="276.5" y="565" width="0.1" height="15.0" fill="rgb(232,60,31)" rx="2" ry="2" />
<text  x="279.53" y="575.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (69 samples, 0.05%)</title><rect x="35.6" y="533" width="0.6" height="15.0" fill="rgb(240,77,45)" rx="2" ry="2" />
<text  x="38.59" y="543.5" ></text>
</g>
<g >
<title>dnnl::impl::math::get_bias (37 samples, 0.03%)</title><rect x="195.1" y="581" width="0.3" height="15.0" fill="rgb(244,147,35)" rx="2" ry="2" />
<text  x="198.11" y="591.5" ></text>
</g>
<g >
<title>mxnet::Imperative::InvokeOp (112 samples, 0.08%)</title><rect x="251.5" y="549" width="1.0" height="15.0" fill="rgb(230,139,11)" rx="2" ry="2" />
<text  x="254.53" y="559.5" ></text>
</g>
<g >
<title>mxnet::TShape::Size (28 samples, 0.02%)</title><rect x="249.3" y="549" width="0.2" height="15.0" fill="rgb(236,4,20)" rx="2" ry="2" />
<text  x="252.26" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (32 samples, 0.02%)</title><rect x="1189.7" y="661" width="0.3" height="15.0" fill="rgb(210,192,7)" rx="2" ry="2" />
<text  x="1192.71" y="671.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::assign&lt;long const*&gt; (24 samples, 0.02%)</title><rect x="224.2" y="549" width="0.2" height="15.0" fill="rgb(240,136,45)" rx="2" ry="2" />
<text  x="227.17" y="559.5" ></text>
</g>
<g >
<title>mxnet::engine::CallbackOnComplete::operator (123 samples, 0.09%)</title><rect x="219.6" y="197" width="1.0" height="15.0" fill="rgb(236,178,52)" rx="2" ry="2" />
<text  x="222.57" y="207.5" ></text>
</g>
<g >
<title>mxnet::NDArray::NDArray (22 samples, 0.02%)</title><rect x="239.5" y="597" width="0.2" height="15.0" fill="rgb(207,68,9)" rx="2" ry="2" />
<text  x="242.53" y="607.5" ></text>
</g>
<g >
<title>mxnet::op::GetActBackward (22 samples, 0.02%)</title><rect x="110.6" y="341" width="0.2" height="15.0" fill="rgb(243,56,31)" rx="2" ry="2" />
<text  x="113.61" y="351.5" ></text>
</g>
<g >
<title>mxnet::TBlob::FlatTo2D&lt;mshadow::cpu, float&gt; (33 samples, 0.02%)</title><rect x="32.4" y="533" width="0.3" height="15.0" fill="rgb(251,201,28)" rx="2" ry="2" />
<text  x="35.42" y="543.5" ></text>
</g>
<g >
<title>mxnet::op::OperatorTune&lt;float&gt;::TuneAll (21 samples, 0.02%)</title><rect x="462.3" y="597" width="0.1" height="15.0" fill="rgb(233,48,23)" rx="2" ry="2" />
<text  x="465.26" y="607.5" ></text>
</g>
<g >
<title>mxnet::cpp::NDArray::SyncCopyToCPU (163 samples, 0.12%)</title><rect x="216.4" y="629" width="1.4" height="15.0" fill="rgb(252,47,22)" rx="2" ry="2" />
<text  x="219.38" y="639.5" ></text>
</g>
<g >
<title>mxnet::op::UnaryOpTune&lt;mshadow::half::half_t&gt;::UnaryOpTune (12 samples, 0.01%)</title><rect x="462.6" y="629" width="0.1" height="15.0" fill="rgb(251,96,11)" rx="2" ry="2" />
<text  x="465.57" y="639.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;mxnet::engine::Var*, std::hash&lt;mxnet::engine::Var*&gt;, std::equal_to&lt;mxnet::engine::Var*&gt;, std::allocator&lt;mxnet::engine::Var*&gt; &gt;::reserve (15 samples, 0.01%)</title><rect x="287.9" y="565" width="0.1" height="15.0" fill="rgb(237,48,23)" rx="2" ry="2" />
<text  x="290.86" y="575.5" ></text>
</g>
<g >
<title>mxnet::exec::GraphExecutor::RunOps (14 samples, 0.01%)</title><rect x="243.5" y="581" width="0.1" height="15.0" fill="rgb(238,14,49)" rx="2" ry="2" />
<text  x="246.49" y="591.5" ></text>
</g>
<g >
<title>mlp_cpu (134,893 samples, 100.00%)</title><rect x="10.0" y="709" width="1180.0" height="15.0" fill="rgb(217,226,44)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >mlp_cpu</text>
</g>
<g >
<title>[unknown] (20 samples, 0.01%)</title><rect x="141.0" y="661" width="0.2" height="15.0" fill="rgb(234,227,32)" rx="2" ry="2" />
<text  x="144.05" y="671.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel&lt;dnnl::impl::cpu::jit_uni_eltwise_fwd_t&lt; (18 samples, 0.01%)</title><rect x="151.7" y="613" width="0.1" height="15.0" fill="rgb(244,173,2)" rx="2" ry="2" />
<text  x="154.67" y="623.5" ></text>
</g>
<g >
<title>mxnet::cpp::Optimizer::UpdateCount_ (21 samples, 0.02%)</title><rect x="291.7" y="629" width="0.1" height="15.0" fill="rgb(223,46,14)" rx="2" ry="2" />
<text  x="294.66" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int&gt; (341 samples, 0.25%)</title><rect x="229.1" y="581" width="2.9" height="15.0" fill="rgb(220,2,52)" rx="2" ry="2" />
<text  x="232.07" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;dnnl::primitive, std::unordered_map&lt;int, dnnl::memory, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::memory&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;dnnl::primitive, std::unordered_map&lt;int, dnnl::memory, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::memory&gt; &gt; &gt; &gt; &gt; &gt;::_M_erase_at_end (16 samples, 0.01%)</title><rect x="114.8" y="293" width="0.2" height="15.0" fill="rgb(242,39,14)" rx="2" ry="2" />
<text  x="117.81" y="303.5" ></text>
</g>
<g >
<title>mxnet::TBlob::operator= (12 samples, 0.01%)</title><rect x="224.0" y="581" width="0.2" height="15.0" fill="rgb(250,204,10)" rx="2" ry="2" />
<text  x="227.05" y="591.5" ></text>
</g>
<g >
<title>mxnet::cpp::NDArray::~NDArray (550 samples, 0.41%)</title><rect x="217.8" y="629" width="4.8" height="15.0" fill="rgb(243,174,49)" rx="2" ry="2" />
<text  x="220.81" y="639.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, dmlc::parameter::FieldAccessEntry*, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, dmlc::parameter::FieldAccessEntry*&gt; &gt; &gt;::find (22 samples, 0.02%)</title><rect x="288.9" y="469" width="0.2" height="15.0" fill="rgb(237,191,12)" rx="2" ry="2" />
<text  x="291.94" y="479.5" ></text>
</g>
<g >
<title>mxnet::TBlob::TBlob (14 samples, 0.01%)</title><rect x="37.9" y="437" width="0.1" height="15.0" fill="rgb(208,127,18)" rx="2" ry="2" />
<text  x="40.91" y="447.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (519 samples, 0.38%)</title><rect x="218.0" y="421" width="4.6" height="15.0" fill="rgb(236,47,54)" rx="2" ry="2" />
<text  x="221.03" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;bool, int&gt; const*, std::vector&lt;std::pair&lt;bool, int&gt;, std::allocator&lt;std::pair&lt;bool, int&gt; &gt; &gt; &gt;::base (26 samples, 0.02%)</title><rect x="105.2" y="357" width="0.2" height="15.0" fill="rgb(242,54,10)" rx="2" ry="2" />
<text  x="108.17" y="367.5" ></text>
</g>
<g >
<title>mxnet::imperative::PushFCompute (446 samples, 0.33%)</title><rect x="281.6" y="565" width="3.9" height="15.0" fill="rgb(253,180,8)" rx="2" ry="2" />
<text  x="284.60" y="575.5" ></text>
</g>
<g >
<title>mxnet::common::LazyAllocArray&lt;mxnet::engine::ThreadedEnginePerDevice::ThreadWorkerBlock&lt; (21 samples, 0.02%)</title><rect x="245.9" y="533" width="0.1" height="15.0" fill="rgb(217,34,34)" rx="2" ry="2" />
<text  x="248.86" y="543.5" ></text>
</g>
<g >
<title>call_function_interrupt (15 samples, 0.01%)</title><rect x="961.6" y="613" width="0.1" height="15.0" fill="rgb(235,56,36)" rx="2" ry="2" />
<text  x="964.57" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (23 samples, 0.02%)</title><rect x="462.9" y="661" width="0.2" height="15.0" fill="rgb(221,91,37)" rx="2" ry="2" />
<text  x="465.93" y="671.5" ></text>
</g>
<g >
<title>native_apic_mem_write (14 samples, 0.01%)</title><rect x="961.6" y="565" width="0.1" height="15.0" fill="rgb(226,138,4)" rx="2" ry="2" />
<text  x="964.58" y="575.5" ></text>
</g>
<g >
<title>do_futex (14 samples, 0.01%)</title><rect x="247.3" y="453" width="0.1" height="15.0" fill="rgb(214,4,24)" rx="2" ry="2" />
<text  x="250.25" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1,436 samples, 1.06%)</title><rect x="226.7" y="613" width="12.6" height="15.0" fill="rgb(208,173,2)" rx="2" ry="2" />
<text  x="229.70" y="623.5" ></text>
</g>
<g >
<title>mxnet::MKLDNNMemoryCopy (124 samples, 0.09%)</title><rect x="108.0" y="309" width="1.1" height="15.0" fill="rgb(215,224,9)" rx="2" ry="2" />
<text  x="111.03" y="319.5" ></text>
</g>
<g >
<title>mxnet::ChunkMem::ChunkMem (17 samples, 0.01%)</title><rect x="218.3" y="325" width="0.1" height="15.0" fill="rgb(252,59,18)" rx="2" ry="2" />
<text  x="221.27" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (523 samples, 0.39%)</title><rect x="727.3" y="597" width="4.6" height="15.0" fill="rgb(210,188,1)" rx="2" ry="2" />
<text  x="730.30" y="607.5" ></text>
</g>
<g >
<title>ctx_sched_out (23 samples, 0.02%)</title><rect x="308.3" y="501" width="0.2" height="15.0" fill="rgb(236,127,43)" rx="2" ry="2" />
<text  x="311.35" y="511.5" ></text>
</g>
<g >
<title>do_page_fault (88 samples, 0.07%)</title><rect x="1146.2" y="645" width="0.7" height="15.0" fill="rgb(237,193,53)" rx="2" ry="2" />
<text  x="1149.17" y="655.5" ></text>
</g>
<g >
<title>sys_futex (6,334 samples, 4.70%)</title><rect x="1013.8" y="645" width="55.4" height="15.0" fill="rgb(231,24,13)" rx="2" ry="2" />
<text  x="1016.78" y="655.5" >sys_f..</text>
</g>
<g >
<title>std::atomic&lt;dmlc::ThreadedIter&lt;mxnet::DataBatch&gt;::Signal&gt;::load (17 samples, 0.01%)</title><rect x="12.9" y="549" width="0.2" height="15.0" fill="rgb(217,117,26)" rx="2" ry="2" />
<text  x="15.94" y="559.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::imperative::PushFCompute (54 samples, 0.04%)</title><rect x="284.6" y="501" width="0.4" height="15.0" fill="rgb(209,119,51)" rx="2" ry="2" />
<text  x="287.55" y="511.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPoolAllocatable&lt;mxnet::engine::ThreadedOpr&gt;::Delete (36 samples, 0.03%)</title><rect x="219.8" y="149" width="0.3" height="15.0" fill="rgb(247,154,37)" rx="2" ry="2" />
<text  x="222.78" y="159.5" ></text>
</g>
<g >
<title>std::function&lt;void  (12 samples, 0.01%)</title><rect x="252.1" y="501" width="0.1" height="15.0" fill="rgb(225,34,17)" rx="2" ry="2" />
<text  x="255.07" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt;::_M_fill_insert (14 samples, 0.01%)</title><rect x="288.1" y="549" width="0.1" height="15.0" fill="rgb(230,26,20)" rx="2" ry="2" />
<text  x="291.10" y="559.5" ></text>
</g>
<g >
<title>mxnet::cpp::Executor::Backward (16 samples, 0.01%)</title><rect x="243.5" y="645" width="0.1" height="15.0" fill="rgb(210,179,4)" rx="2" ry="2" />
<text  x="246.49" y="655.5" ></text>
</g>
<g >
<title>dnnl::impl::parallel&lt;dnnl::impl::cpu::jit_uni_eltwise_bwd_t&lt; (34 samples, 0.03%)</title><rect x="196.1" y="629" width="0.3" height="15.0" fill="rgb(228,31,13)" rx="2" ry="2" />
<text  x="199.07" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt;::emplace_back&lt;mxnet::NDArray&amp;&gt; (23 samples, 0.02%)</title><rect x="283.2" y="533" width="0.3" height="15.0" fill="rgb(218,84,54)" rx="2" ry="2" />
<text  x="286.25" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (14 samples, 0.01%)</title><rect x="238.6" y="549" width="0.2" height="15.0" fill="rgb(234,1,11)" rx="2" ry="2" />
<text  x="241.65" y="559.5" ></text>
</g>
<g >
<title>perf_ctx_unlock (594 samples, 0.44%)</title><rect x="337.5" y="517" width="5.2" height="15.0" fill="rgb(233,216,24)" rx="2" ry="2" />
<text  x="340.48" y="527.5" ></text>
</g>
<g >
<title>deactivate_task (22 samples, 0.02%)</title><rect x="308.5" y="533" width="0.2" height="15.0" fill="rgb(239,98,20)" rx="2" ry="2" />
<text  x="311.55" y="543.5" ></text>
</g>
<g >
<title>change_prot_numa (14 samples, 0.01%)</title><rect x="641.4" y="597" width="0.1" height="15.0" fill="rgb(252,134,3)" rx="2" ry="2" />
<text  x="644.39" y="607.5" ></text>
</g>
<g >
<title>check_preempt_curr (18 samples, 0.01%)</title><rect x="1121.4" y="533" width="0.2" height="15.0" fill="rgb(243,70,54)" rx="2" ry="2" />
<text  x="1124.44" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;::_M_ptr (14 samples, 0.01%)</title><rect x="268.0" y="501" width="0.1" height="15.0" fill="rgb(233,181,28)" rx="2" ry="2" />
<text  x="271.02" y="511.5" ></text>
</g>
<g >
<title>mxnet::common::SetupDefaultBlobsIn (27 samples, 0.02%)</title><rect x="99.9" y="405" width="0.2" height="15.0" fill="rgb(234,161,53)" rx="2" ry="2" />
<text  x="102.90" y="415.5" ></text>
</g>
<g >
<title>std::_Construct&lt;mxnet::NDArray, mxnet::NDArray const&amp;&gt; (14 samples, 0.01%)</title><rect x="285.1" y="485" width="0.1" height="15.0" fill="rgb(219,4,41)" rx="2" ry="2" />
<text  x="288.09" y="495.5" ></text>
</g>
<g >
<title>mxnet::NDArray::NDArray (21 samples, 0.02%)</title><rect x="282.9" y="389" width="0.2" height="15.0" fill="rgb(212,97,9)" rx="2" ry="2" />
<text  x="285.94" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, dnnl::impl::memory_arg_t&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::impl::memory_arg_t&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (17 samples, 0.01%)</title><rect x="109.4" y="261" width="0.1" height="15.0" fill="rgb(210,25,22)" rx="2" ry="2" />
<text  x="112.38" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mxnet::IIterator&lt;mxnet::io::TBlobBatch&gt;, std::default_delete&lt;mxnet::IIterator&lt;mxnet::io::TBlobBatch&gt; &gt; &gt;::operator (12 samples, 0.01%)</title><rect x="34.4" y="533" width="0.1" height="15.0" fill="rgb(247,84,46)" rx="2" ry="2" />
<text  x="37.41" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (43 samples, 0.03%)</title><rect x="259.2" y="469" width="0.4" height="15.0" fill="rgb(212,122,26)" rx="2" ry="2" />
<text  x="262.19" y="479.5" ></text>
</g>
<g >
<title>mxnet::Tuple&lt;long&gt;::Tuple (29 samples, 0.02%)</title><rect x="241.2" y="549" width="0.3" height="15.0" fill="rgb(219,148,28)" rx="2" ry="2" />
<text  x="244.24" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;mxnet::TBlob&gt; &gt;::construct&lt;mxnet::TBlob, mshadow::Tensor&lt;mshadow::cpu, 2, float&gt;&amp;&gt; (22 samples, 0.02%)</title><rect x="34.2" y="501" width="0.2" height="15.0" fill="rgb(222,3,46)" rx="2" ry="2" />
<text  x="37.19" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (31 samples, 0.02%)</title><rect x="300.7" y="533" width="0.2" height="15.0" fill="rgb(227,71,47)" rx="2" ry="2" />
<text  x="303.67" y="543.5" ></text>
</g>
<g >
<title>dnnl_engine::get_primitive&lt;dnnl::impl::cpu::simple_reorder_t&lt; (26 samples, 0.02%)</title><rect x="108.1" y="229" width="0.3" height="15.0" fill="rgb(215,2,19)" rx="2" ry="2" />
<text  x="111.15" y="239.5" ></text>
</g>
<g >
<title>do_async_page_fault (20 samples, 0.01%)</title><rect x="410.8" y="661" width="0.2" height="15.0" fill="rgb(228,130,53)" rx="2" ry="2" />
<text  x="413.84" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mxnet::TBlob&gt;::construct&lt;mxnet::TBlob, mshadow::Tensor&lt;mshadow::cpu, 2, float&gt;&amp;&gt; (21 samples, 0.02%)</title><rect x="34.2" y="485" width="0.2" height="15.0" fill="rgb(216,87,20)" rx="2" ry="2" />
<text  x="37.20" y="495.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1,770 samples, 1.31%)</title><rect x="673.1" y="613" width="15.5" height="15.0" fill="rgb(250,144,50)" rx="2" ry="2" />
<text  x="676.10" y="623.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (6,340 samples, 4.70%)</title><rect x="1013.7" y="693" width="55.5" height="15.0" fill="rgb(214,15,20)" rx="2" ry="2" />
<text  x="1016.73" y="703.5" >pthre..</text>
</g>
<g >
<title>mxnet::NDArray::CopyFrom (136 samples, 0.10%)</title><rect x="108.0" y="325" width="1.2" height="15.0" fill="rgb(228,79,1)" rx="2" ry="2" />
<text  x="111.01" y="335.5" ></text>
</g>
<g >
<title>try_to_unmap_one (475 samples, 0.35%)</title><rect x="200.9" y="437" width="4.2" height="15.0" fill="rgb(207,191,23)" rx="2" ry="2" />
<text  x="203.92" y="447.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::avx_gemm_f32::xbyak_gemm::xbyak_gemm (32 samples, 0.02%)</title><rect x="301.8" y="533" width="0.3" height="15.0" fill="rgb(236,59,34)" rx="2" ry="2" />
<text  x="304.84" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (16 samples, 0.01%)</title><rect x="228.9" y="581" width="0.1" height="15.0" fill="rgb(207,100,42)" rx="2" ry="2" />
<text  x="231.91" y="591.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::Push (14 samples, 0.01%)</title><rect x="246.8" y="549" width="0.1" height="15.0" fill="rgb(245,3,15)" rx="2" ry="2" />
<text  x="249.81" y="559.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::PushSync (29 samples, 0.02%)</title><rect x="99.5" y="309" width="0.2" height="15.0" fill="rgb(238,14,3)" rx="2" ry="2" />
<text  x="102.48" y="319.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;mxnet::cpp::NDBlob, std::allocator&lt;mxnet::cpp::NDBlob&gt;,  (19 samples, 0.01%)</title><rect x="224.9" y="517" width="0.1" height="15.0" fill="rgb(209,22,18)" rx="2" ry="2" />
<text  x="227.87" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::Storage::Handle, std::allocator&lt;mxnet::Storage::Handle&gt; &gt;::vector (13 samples, 0.01%)</title><rect x="218.3" y="309" width="0.1" height="15.0" fill="rgb(244,108,2)" rx="2" ry="2" />
<text  x="221.31" y="319.5" ></text>
</g>
<g >
<title>std::function&lt;void  (329 samples, 0.24%)</title><rect x="117.1" y="453" width="2.9" height="15.0" fill="rgb(208,182,16)" rx="2" ry="2" />
<text  x="120.11" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;void*, std::allocator&lt;void*&gt; &gt;::_M_realloc_insert&lt;void*&gt; (211 samples, 0.16%)</title><rect x="277.8" y="581" width="1.9" height="15.0" fill="rgb(250,29,45)" rx="2" ry="2" />
<text  x="280.82" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (53 samples, 0.04%)</title><rect x="279.8" y="597" width="0.5" height="15.0" fill="rgb(208,112,53)" rx="2" ry="2" />
<text  x="282.81" y="607.5" ></text>
</g>
<g >
<title>task_numa_work (15 samples, 0.01%)</title><rect x="641.4" y="613" width="0.1" height="15.0" fill="rgb(214,184,41)" rx="2" ry="2" />
<text  x="644.38" y="623.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedVar::AppendWriteDependency (31 samples, 0.02%)</title><rect x="246.2" y="549" width="0.2" height="15.0" fill="rgb(235,21,2)" rx="2" ry="2" />
<text  x="249.18" y="559.5" ></text>
</g>
<g >
<title>mxnet::op::mxnet_op::Kernel&lt;mxnet::op::SGDKernel, mshadow::cpu&gt;::Launch&lt;float*, float*, float*, float, float, float, float, mxnet::OpReqType&gt; (564 samples, 0.42%)</title><rect x="210.9" y="629" width="4.9" height="15.0" fill="rgb(248,199,18)" rx="2" ry="2" />
<text  x="213.92" y="639.5" ></text>
</g>
<g >
<title>mxnet::op::mxnet_op::Kernel&lt;mxnet::op::SGDKernel, mshadow::cpu&gt;::Launch&lt;float*, float*, float*, float, float, float, float, mxnet::OpReqType&gt; (234 samples, 0.17%)</title><rect x="100.4" y="341" width="2.0" height="15.0" fill="rgb(226,224,34)" rx="2" ry="2" />
<text  x="103.38" y="351.5" ></text>
</g>
<g >
<title>std::function&lt;void  (63 samples, 0.05%)</title><rect x="107.3" y="389" width="0.5" height="15.0" fill="rgb(209,42,4)" rx="2" ry="2" />
<text  x="110.26" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;dmlc::ParamFieldInfo, std::allocator&lt;dmlc::ParamFieldInfo&gt; &gt;::size (12 samples, 0.01%)</title><rect x="265.6" y="581" width="0.1" height="15.0" fill="rgb(221,110,42)" rx="2" ry="2" />
<text  x="268.64" y="591.5" ></text>
</g>
<g >
<title>__calc_delta (2,011 samples, 1.49%)</title><rect x="817.9" y="565" width="17.6" height="15.0" fill="rgb(221,118,0)" rx="2" ry="2" />
<text  x="820.95" y="575.5" ></text>
</g>
<g >
<title>do_page_fault (521 samples, 0.39%)</title><rect x="200.6" y="581" width="4.5" height="15.0" fill="rgb(250,182,5)" rx="2" ry="2" />
<text  x="203.58" y="591.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;mxnet::imperative::PushFCompute (26 samples, 0.02%)</title><rect x="99.5" y="261" width="0.2" height="15.0" fill="rgb(243,48,31)" rx="2" ry="2" />
<text  x="102.51" y="271.5" ></text>
</g>
<g >
<title>mxnet::cpp::FullyConnected (13 samples, 0.01%)</title><rect x="216.1" y="629" width="0.1" height="15.0" fill="rgb(208,208,4)" rx="2" ry="2" />
<text  x="219.11" y="639.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (15 samples, 0.01%)</title><rect x="301.6" y="677" width="0.2" height="15.0" fill="rgb(244,190,38)" rx="2" ry="2" />
<text  x="304.62" y="687.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (13 samples, 0.01%)</title><rect x="245.9" y="485" width="0.1" height="15.0" fill="rgb(243,37,29)" rx="2" ry="2" />
<text  x="248.93" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (15 samples, 0.01%)</title><rect x="273.7" y="613" width="0.1" height="15.0" fill="rgb(245,95,10)" rx="2" ry="2" />
<text  x="276.71" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt;::~vector (13 samples, 0.01%)</title><rect x="284.8" y="469" width="0.1" height="15.0" fill="rgb(247,180,8)" rx="2" ry="2" />
<text  x="287.80" y="479.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::DeleteVariable (377 samples, 0.28%)</title><rect x="218.4" y="325" width="3.3" height="15.0" fill="rgb(216,188,30)" rx="2" ry="2" />
<text  x="221.45" y="335.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::OnComplete (25 samples, 0.02%)</title><rect x="103.0" y="437" width="0.2" height="15.0" fill="rgb(212,127,52)" rx="2" ry="2" />
<text  x="106.02" y="447.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::simple_reorder_t&lt; (14 samples, 0.01%)</title><rect x="108.2" y="213" width="0.1" height="15.0" fill="rgb(248,16,49)" rx="2" ry="2" />
<text  x="111.16" y="223.5" ></text>
</g>
<g >
<title>mshadow::Softmax&lt;float&gt; (49 samples, 0.04%)</title><rect x="198.6" y="613" width="0.4" height="15.0" fill="rgb(243,151,53)" rx="2" ry="2" />
<text  x="201.60" y="623.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;dnnl::impl::cpu::simple_reorder_t&lt; (12 samples, 0.01%)</title><rect x="108.2" y="181" width="0.1" height="15.0" fill="rgb(212,34,23)" rx="2" ry="2" />
<text  x="111.17" y="191.5" ></text>
</g>
<g >
<title>mshadow::expr::ExpEngine&lt;mshadow::sv::multo, mshadow::Tensor&lt;mshadow::cpu, 3, float&gt;, float&gt;::Eval&lt;mshadow::expr::ScalarExp&lt;float&gt; &gt; (18 samples, 0.01%)</title><rect x="297.2" y="533" width="0.1" height="15.0" fill="rgb(224,41,26)" rx="2" ry="2" />
<text  x="300.18" y="543.5" ></text>
</g>
<g >
<title>_cond_resched (20 samples, 0.01%)</title><rect x="306.8" y="581" width="0.2" height="15.0" fill="rgb(211,96,6)" rx="2" ry="2" />
<text  x="309.81" y="591.5" ></text>
</g>
<g >
<title>mxnet::CopyFromTo (7,014 samples, 5.20%)</title><rect x="37.4" y="485" width="61.3" height="15.0" fill="rgb(251,118,17)" rx="2" ry="2" />
<text  x="40.38" y="495.5" >mxnet:..</text>
</g>
<g >
<title>mxnet::imperative::PushFCompute (314 samples, 0.23%)</title><rect x="99.8" y="437" width="2.8" height="15.0" fill="rgb(227,60,36)" rx="2" ry="2" />
<text  x="102.83" y="447.5" ></text>
</g>
<g >
<title>mxnet::NDArray::CheckAndAlloc (13 samples, 0.01%)</title><rect x="31.6" y="517" width="0.1" height="15.0" fill="rgb(231,71,48)" rx="2" ry="2" />
<text  x="34.61" y="527.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; &gt; (17 samples, 0.01%)</title><rect x="275.3" y="549" width="0.1" height="15.0" fill="rgb(247,81,30)" rx="2" ry="2" />
<text  x="278.27" y="559.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (2,432 samples, 1.80%)</title><rect x="13.6" y="581" width="21.2" height="15.0" fill="rgb(236,89,41)" rx="2" ry="2" />
<text  x="16.55" y="591.5" >s..</text>
</g>
<g >
<title>mxnet::common::ObjectPoolAllocatable&lt;mxnet::engine::ThreadedOpr&gt;::New&lt;&gt; (25 samples, 0.02%)</title><rect x="244.9" y="549" width="0.2" height="15.0" fill="rgb(244,132,11)" rx="2" ry="2" />
<text  x="247.92" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (18 samples, 0.01%)</title><rect x="222.8" y="613" width="0.1" height="15.0" fill="rgb(244,205,28)" rx="2" ry="2" />
<text  x="225.79" y="623.5" ></text>
</g>
<g >
<title>mxnet::NDArray::NDArray (42 samples, 0.03%)</title><rect x="223.6" y="597" width="0.4" height="15.0" fill="rgb(209,216,17)" rx="2" ry="2" />
<text  x="226.63" y="607.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::simple_reorder_impl&lt; (269 samples, 0.20%)</title><rect x="151.9" y="597" width="2.3" height="15.0" fill="rgb(222,198,29)" rx="2" ry="2" />
<text  x="154.86" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::NDArray*, std::allocator&lt;mxnet::NDArray*&gt; &gt;::_M_allocate_and_copy&lt;std::move_iterator&lt;mxnet::NDArray**&gt; &gt; (72 samples, 0.05%)</title><rect x="250.4" y="533" width="0.6" height="15.0" fill="rgb(206,13,47)" rx="2" ry="2" />
<text  x="253.41" y="543.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPoolAllocatable&lt;mxnet::engine::OprBlock&gt;::New&lt;&gt; (15 samples, 0.01%)</title><rect x="219.2" y="277" width="0.1" height="15.0" fill="rgb(222,136,25)" rx="2" ry="2" />
<text  x="222.21" y="287.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedVar::CompleteWriteDependency&lt;mxnet::engine::ThreadedEngine::OnComplete (17 samples, 0.01%)</title><rect x="103.1" y="421" width="0.1" height="15.0" fill="rgb(229,224,14)" rx="2" ry="2" />
<text  x="106.09" y="431.5" ></text>
</g>
<g >
<title>futex_wake (12 samples, 0.01%)</title><rect x="35.9" y="453" width="0.1" height="15.0" fill="rgb(230,195,47)" rx="2" ry="2" />
<text  x="38.91" y="463.5" ></text>
</g>
<g >
<title>smp_call_function_interrupt (83 samples, 0.06%)</title><rect x="458.0" y="661" width="0.7" height="15.0" fill="rgb(253,72,34)" rx="2" ry="2" />
<text  x="460.97" y="671.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::gemm_inner_product_fwd_t&lt; (132 samples, 0.10%)</title><rect x="113.5" y="245" width="1.2" height="15.0" fill="rgb(246,204,20)" rx="2" ry="2" />
<text  x="116.54" y="255.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::gemm_inner_product_fwd_t&lt; (132 samples, 0.10%)</title><rect x="113.5" y="261" width="1.2" height="15.0" fill="rgb(209,196,37)" rx="2" ry="2" />
<text  x="116.54" y="271.5" ></text>
</g>
<g >
<title>MXNDArraySyncCopyToCPU (155 samples, 0.11%)</title><rect x="216.4" y="613" width="1.4" height="15.0" fill="rgb(227,112,25)" rx="2" ry="2" />
<text  x="219.41" y="623.5" ></text>
</g>
<g >
<title>native_read_msr (13 samples, 0.01%)</title><rect x="308.4" y="437" width="0.1" height="15.0" fill="rgb(242,167,41)" rx="2" ry="2" />
<text  x="311.39" y="447.5" ></text>
</g>
<g >
<title>mlp (13 samples, 0.01%)</title><rect x="216.1" y="645" width="0.1" height="15.0" fill="rgb(221,220,25)" rx="2" ry="2" />
<text  x="219.11" y="655.5" ></text>
</g>
<g >
<title>__do_page_fault (20 samples, 0.01%)</title><rect x="410.8" y="629" width="0.2" height="15.0" fill="rgb(232,217,54)" rx="2" ry="2" />
<text  x="413.84" y="639.5" ></text>
</g>
<g >
<title>_raw_spin_lock (71 samples, 0.05%)</title><rect x="1146.2" y="581" width="0.6" height="15.0" fill="rgb(215,52,28)" rx="2" ry="2" />
<text  x="1149.18" y="591.5" ></text>
</g>
<g >
<title>__kmp_init_implicit_task (39 samples, 0.03%)</title><rect x="458.8" y="693" width="0.3" height="15.0" fill="rgb(239,204,27)" rx="2" ry="2" />
<text  x="461.80" y="703.5" ></text>
</g>
<g >
<title>mshadow::MapPlan&lt;mshadow::sv::multo, mshadow::Tensor&lt;mshadow::cpu, 2, float&gt;, 2, float, mshadow::expr::ScalarExp&lt;float&gt; &gt; (39 samples, 0.03%)</title><rect x="158.2" y="613" width="0.4" height="15.0" fill="rgb(213,107,51)" rx="2" ry="2" />
<text  x="161.22" y="623.5" ></text>
</g>
<g >
<title>nnvm::OpMap&lt;bool&gt;::OpMap (356 samples, 0.26%)</title><rect x="103.7" y="453" width="3.1" height="15.0" fill="rgb(235,183,43)" rx="2" ry="2" />
<text  x="106.68" y="463.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (490 samples, 0.36%)</title><rect x="26.2" y="293" width="4.3" height="15.0" fill="rgb(214,77,42)" rx="2" ry="2" />
<text  x="29.17" y="303.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::avx_gemm_f32::xbyak_gemm::xbyak_gemm (31 samples, 0.02%)</title><rect x="301.8" y="517" width="0.3" height="15.0" fill="rgb(242,168,26)" rx="2" ry="2" />
<text  x="304.85" y="527.5" ></text>
</g>
<g >
<title>__kmp_GOMP_microtask_wrapper (2,630 samples, 1.95%)</title><rect x="192.9" y="645" width="23.0" height="15.0" fill="rgb(239,206,48)" rx="2" ry="2" />
<text  x="195.86" y="655.5" >_..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (21 samples, 0.02%)</title><rect x="275.5" y="517" width="0.1" height="15.0" fill="rgb(220,154,20)" rx="2" ry="2" />
<text  x="278.45" y="527.5" ></text>
</g>
<g >
<title>mxnet::exec::StorageFallbackOpExecutor::PreFCompute (52 samples, 0.04%)</title><rect x="116.6" y="453" width="0.5" height="15.0" fill="rgb(247,66,39)" rx="2" ry="2" />
<text  x="119.64" y="463.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2,209 samples, 1.64%)</title><rect x="989.7" y="677" width="19.3" height="15.0" fill="rgb(231,106,24)" rx="2" ry="2" />
<text  x="992.71" y="687.5" ></text>
</g>
<g >
<title>MXDataIterCreateIter (608 samples, 0.45%)</title><rect x="292.4" y="613" width="5.3" height="15.0" fill="rgb(231,100,5)" rx="2" ry="2" />
<text  x="295.36" y="623.5" ></text>
</g>
<g >
<title>wake_up_q (16 samples, 0.01%)</title><rect x="463.0" y="565" width="0.1" height="15.0" fill="rgb(213,198,11)" rx="2" ry="2" />
<text  x="465.99" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt;::_M_erase_at_end (24 samples, 0.02%)</title><rect x="33.1" y="501" width="0.2" height="15.0" fill="rgb(207,15,40)" rx="2" ry="2" />
<text  x="36.09" y="511.5" ></text>
</g>
<g >
<title>__kmp_GOMP_microtask_wrapper (5,588 samples, 4.14%)</title><rect x="141.9" y="629" width="48.9" height="15.0" fill="rgb(217,119,52)" rx="2" ry="2" />
<text  x="144.87" y="639.5" >__km..</text>
</g>
<g >
<title>nnvm::OpMap&lt;std::function&lt;unsigned int  (18 samples, 0.01%)</title><rect x="259.9" y="549" width="0.2" height="15.0" fill="rgb(224,155,9)" rx="2" ry="2" />
<text  x="262.92" y="559.5" ></text>
</g>
<g >
<title>call_function_interrupt (33 samples, 0.02%)</title><rect x="731.9" y="597" width="0.3" height="15.0" fill="rgb(214,102,21)" rx="2" ry="2" />
<text  x="734.88" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (18 samples, 0.01%)</title><rect x="282.7" y="437" width="0.1" height="15.0" fill="rgb(254,121,49)" rx="2" ry="2" />
<text  x="285.68" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;mxnet::DataBatch*, std::allocator&lt;mxnet::DataBatch*&gt; &gt;::pop_front (12 samples, 0.01%)</title><rect x="35.2" y="565" width="0.1" height="15.0" fill="rgb(206,123,0)" rx="2" ry="2" />
<text  x="38.21" y="575.5" ></text>
</g>
<g >
<title>futex_wake (5,970 samples, 4.43%)</title><rect x="1069.4" y="613" width="52.2" height="15.0" fill="rgb(223,191,49)" rx="2" ry="2" />
<text  x="1072.41" y="623.5" >futex..</text>
</g>
<g >
<title>mxnet::op::MKLDNNSoftmaxOutputForward (21 samples, 0.02%)</title><rect x="116.3" y="357" width="0.2" height="15.0" fill="rgb(242,98,40)" rx="2" ry="2" />
<text  x="119.31" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;dmlc::parameter::FieldAccessEntry*, dmlc::parameter::FieldAccessEntry*, std::_Identity&lt;dmlc::parameter::FieldAccessEntry*&gt;, std::less&lt;dmlc::parameter::FieldAccessEntry*&gt;, std::allocator&lt;dmlc::parameter::FieldAccessEntry*&gt; &gt;::_M_insert_&lt;dmlc::parameter::FieldAccessEntry* const&amp;, std::_Rb_tree&lt;dmlc::parameter::FieldAccessEntry*, dmlc::parameter::FieldAccessEntry*, std::_Identity&lt;dmlc::parameter::FieldAccessEntry*&gt;, std::less&lt;dmlc::parameter::FieldAccessEntry*&gt;, std::allocator&lt;dmlc::parameter::FieldAccessEntry*&gt; &gt;::_Alloc_node&gt; (12 samples, 0.01%)</title><rect x="289.3" y="453" width="0.1" height="15.0" fill="rgb(238,218,21)" rx="2" ry="2" />
<text  x="292.29" y="463.5" ></text>
</g>
<g >
<title>mxnet::common::ObjectPoolAllocatable&lt;mxnet::engine::VersionedVarBlock&gt;::New&lt;&gt; (15 samples, 0.01%)</title><rect x="246.2" y="533" width="0.2" height="15.0" fill="rgb(238,83,46)" rx="2" ry="2" />
<text  x="249.23" y="543.5" ></text>
</g>
<g >
<title>migrate_misplaced_page (731 samples, 0.54%)</title><rect x="24.2" y="421" width="6.4" height="15.0" fill="rgb(208,80,11)" rx="2" ry="2" />
<text  x="27.19" y="431.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (470 samples, 0.35%)</title><rect x="201.0" y="405" width="4.1" height="15.0" fill="rgb(206,66,14)" rx="2" ry="2" />
<text  x="203.96" y="415.5" ></text>
</g>
<g >
<title>mxnet::Imperative::Invoke (810 samples, 0.60%)</title><rect x="281.3" y="597" width="7.1" height="15.0" fill="rgb(250,41,14)" rx="2" ry="2" />
<text  x="284.32" y="607.5" ></text>
</g>
<g >
<title>do_futex (6,334 samples, 4.70%)</title><rect x="1013.8" y="629" width="55.4" height="15.0" fill="rgb(218,19,6)" rx="2" ry="2" />
<text  x="1016.78" y="639.5" >do_fu..</text>
</g>
<g >
<title>dnnl::reorder::reorder (105 samples, 0.08%)</title><rect x="108.1" y="293" width="0.9" height="15.0" fill="rgb(249,134,4)" rx="2" ry="2" />
<text  x="111.07" y="303.5" ></text>
</g>
<g >
<title>kvm_guest_apic_eoi_write (12 samples, 0.01%)</title><rect x="205.2" y="581" width="0.1" height="15.0" fill="rgb(226,206,42)" rx="2" ry="2" />
<text  x="208.15" y="591.5" ></text>
</g>
<g >
<title>native_smp_send_reschedule (16 samples, 0.01%)</title><rect x="1121.5" y="501" width="0.1" height="15.0" fill="rgb(246,165,1)" rx="2" ry="2" />
<text  x="1124.46" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (95 samples, 0.07%)</title><rect x="272.0" y="517" width="0.8" height="15.0" fill="rgb(230,169,37)" rx="2" ry="2" />
<text  x="274.98" y="527.5" ></text>
</g>
<g >
<title>std::make_shared&lt;dnnl::impl::cpu::simple_reorder_t&lt; (13 samples, 0.01%)</title><rect x="108.2" y="197" width="0.1" height="15.0" fill="rgb(229,106,35)" rx="2" ry="2" />
<text  x="111.17" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;mxnet::cpp::NDBlob&gt; &gt;::destroy&lt;mxnet::cpp::NDBlob&gt; (14 samples, 0.01%)</title><rect x="223.2" y="533" width="0.1" height="15.0" fill="rgb(251,99,20)" rx="2" ry="2" />
<text  x="226.21" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mxnet::NDArray::Chunk&gt;::destroy&lt;mxnet::NDArray::Chunk&gt; (493 samples, 0.37%)</title><rect x="218.2" y="357" width="4.3" height="15.0" fill="rgb(207,0,2)" rx="2" ry="2" />
<text  x="221.23" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;dmlc::parameter::FieldAccessEntry*, dmlc::parameter::FieldAccessEntry*, std::_Identity&lt;dmlc::parameter::FieldAccessEntry*&gt;, std::less&lt;dmlc::parameter::FieldAccessEntry*&gt;, std::allocator&lt;dmlc::parameter::FieldAccessEntry*&gt; &gt;::_M_insert_unique&lt;dmlc::parameter::FieldAccessEntry* const&amp;&gt; (24 samples, 0.02%)</title><rect x="289.2" y="469" width="0.2" height="15.0" fill="rgb(216,82,44)" rx="2" ry="2" />
<text  x="292.23" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, void*, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::operator[] (279 samples, 0.21%)</title><rect x="270.4" y="597" width="2.5" height="15.0" fill="rgb(224,130,24)" rx="2" ry="2" />
<text  x="273.43" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (62 samples, 0.05%)</title><rect x="297.9" y="629" width="0.6" height="15.0" fill="rgb(212,164,5)" rx="2" ry="2" />
<text  x="300.94" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (84 samples, 0.06%)</title><rect x="300.3" y="549" width="0.7" height="15.0" fill="rgb(241,210,38)" rx="2" ry="2" />
<text  x="303.26" y="559.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (549 samples, 0.41%)</title><rect x="217.8" y="581" width="4.8" height="15.0" fill="rgb(212,52,28)" rx="2" ry="2" />
<text  x="220.82" y="591.5" ></text>
</g>
<g >
<title>std::function&lt;void  (557 samples, 0.41%)</title><rect x="111.2" y="389" width="4.8" height="15.0" fill="rgb(232,164,19)" rx="2" ry="2" />
<text  x="114.16" y="399.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (24 samples, 0.02%)</title><rect x="275.4" y="533" width="0.2" height="15.0" fill="rgb(210,59,44)" rx="2" ry="2" />
<text  x="278.43" y="543.5" ></text>
</g>
<g >
<title>sys_sched_yield (38,420 samples, 28.48%)</title><rect x="642.7" y="645" width="336.1" height="15.0" fill="rgb(247,43,45)" rx="2" ry="2" />
<text  x="645.69" y="655.5" >sys_sched_yield</text>
</g>
<g >
<title>std::function&lt;void  (9,468 samples, 7.02%)</title><rect x="37.3" y="517" width="82.8" height="15.0" fill="rgb(211,187,53)" rx="2" ry="2" />
<text  x="40.31" y="527.5" >std::func..</text>
</g>
<g >
<title>mxnet::NDArray::SyncCopyToCPU (138 samples, 0.10%)</title><rect x="216.5" y="597" width="1.2" height="15.0" fill="rgb(231,82,13)" rx="2" ry="2" />
<text  x="219.47" y="607.5" ></text>
</g>
<g >
<title>smp_call_function_many (490 samples, 0.36%)</title><rect x="26.2" y="277" width="4.3" height="15.0" fill="rgb(251,222,34)" rx="2" ry="2" />
<text  x="29.17" y="287.5" ></text>
</g>
<g >
<title>pvclock_clocksource_read (78 samples, 0.06%)</title><rect x="960.0" y="549" width="0.6" height="15.0" fill="rgb(230,10,22)" rx="2" ry="2" />
<text  x="962.96" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (88 samples, 0.07%)</title><rect x="1146.2" y="629" width="0.7" height="15.0" fill="rgb(245,72,53)" rx="2" ry="2" />
<text  x="1149.17" y="639.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;mxnet::cpp::NDArray const*, mxnet::cpp::NDArray*&gt; (23 samples, 0.02%)</title><rect x="263.0" y="565" width="0.2" height="15.0" fill="rgb(243,196,53)" rx="2" ry="2" />
<text  x="266.00" y="575.5" ></text>
</g>
<g >
<title>__kmp_launch_worker (88 samples, 0.07%)</title><rect x="1188.9" y="677" width="0.8" height="15.0" fill="rgb(248,9,45)" rx="2" ry="2" />
<text  x="1191.92" y="687.5" ></text>
</g>
<g >
<title>move_to_new_page (14 samples, 0.01%)</title><rect x="200.7" y="485" width="0.1" height="15.0" fill="rgb(216,34,15)" rx="2" ry="2" />
<text  x="203.67" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, dnnl::impl::memory_arg_t&gt;, std::allocator&lt;std::pair&lt;int const, dnnl::impl::memory_arg_t&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (19 samples, 0.01%)</title><rect x="113.2" y="245" width="0.2" height="15.0" fill="rgb(225,140,41)" rx="2" ry="2" />
<text  x="116.25" y="255.5" ></text>
</g>
<g >
<title>schedule_tail (21 samples, 0.02%)</title><rect x="348.0" y="645" width="0.2" height="15.0" fill="rgb(218,218,15)" rx="2" ry="2" />
<text  x="351.03" y="655.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::pair&lt;bool, int&gt;, std::pair&lt;bool, int&gt; const&amp;&gt; (132 samples, 0.10%)</title><rect x="105.4" y="373" width="1.2" height="15.0" fill="rgb(217,15,15)" rx="2" ry="2" />
<text  x="108.42" y="383.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::avx_gemm_f32::sgemm_nocopy_driver (26 samples, 0.02%)</title><rect x="156.8" y="565" width="0.2" height="15.0" fill="rgb(240,58,40)" rx="2" ry="2" />
<text  x="159.76" y="575.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (39 samples, 0.03%)</title><rect x="242.7" y="533" width="0.3" height="15.0" fill="rgb(212,104,13)" rx="2" ry="2" />
<text  x="245.66" y="543.5" ></text>
</g>
<g >
<title>rwsem_wake (16 samples, 0.01%)</title><rect x="463.0" y="581" width="0.1" height="15.0" fill="rgb(225,128,34)" rx="2" ry="2" />
<text  x="465.99" y="591.5" ></text>
</g>
<g >
<title>__do_page_fault (14 samples, 0.01%)</title><rect x="11.6" y="629" width="0.2" height="15.0" fill="rgb(245,218,34)" rx="2" ry="2" />
<text  x="14.64" y="639.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::qz_a1b0&lt;float, float, void&gt;::operator (55 samples, 0.04%)</title><rect x="194.6" y="581" width="0.5" height="15.0" fill="rgb(254,81,1)" rx="2" ry="2" />
<text  x="197.63" y="591.5" ></text>
</g>
<g >
<title>mxnet::engine::ThreadedEngine::Push (31 samples, 0.02%)</title><rect x="282.1" y="517" width="0.3" height="15.0" fill="rgb(248,99,2)" rx="2" ry="2" />
<text  x="285.15" y="527.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, int*, int*&gt; (116 samples, 0.09%)</title><rect x="236.1" y="485" width="1.0" height="15.0" fill="rgb(250,50,6)" rx="2" ry="2" />
<text  x="239.06" y="495.5" ></text>
</g>
<g >
<title>call_function_interrupt (53 samples, 0.04%)</title><rect x="204.3" y="357" width="0.5" height="15.0" fill="rgb(218,85,52)" rx="2" ry="2" />
<text  x="207.33" y="367.5" ></text>
</g>
<g >
<title>schedule (4,006 samples, 2.97%)</title><rect x="307.7" y="565" width="35.0" height="15.0" fill="rgb(242,11,34)" rx="2" ry="2" />
<text  x="310.70" y="575.5" >sc..</text>
</g>
<g >
<title>change_protection_range (14 samples, 0.01%)</title><rect x="641.4" y="565" width="0.1" height="15.0" fill="rgb(239,72,54)" rx="2" ry="2" />
<text  x="644.39" y="575.5" ></text>
</g>
<g >
<title>mxnet::NDArray::Chunk::~Chunk (486 samples, 0.36%)</title><rect x="218.2" y="341" width="4.3" height="15.0" fill="rgb(219,133,47)" rx="2" ry="2" />
<text  x="221.24" y="351.5" ></text>
</g>
<g >
<title>dnnl::impl::cpu::extended_sgemm (78 samples, 0.06%)</title><rect x="113.5" y="229" width="0.7" height="15.0" fill="rgb(245,124,18)" rx="2" ry="2" />
<text  x="116.55" y="239.5" ></text>
</g>
<g >
<title>llist_add_batch (42 samples, 0.03%)</title><rect x="28.5" y="261" width="0.4" height="15.0" fill="rgb(211,32,23)" rx="2" ry="2" />
<text  x="31.54" y="271.5" ></text>
</g>
</g>
</svg>
