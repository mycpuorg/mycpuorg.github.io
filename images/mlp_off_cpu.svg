<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="278" onload="init(evt)" viewBox="0 0 1200 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#e0e0ff" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="278.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Off-CPU Time Flame Graph</text>
<text id="details" x="10.00" y="261" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="261" > </text>
<g id="frames">
<g >
<title>all (411,145,789 us, 100%)</title><rect x="10.0" y="229" width="1180.0" height="15.0" fill="rgb(95,95,211)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>finish_task_switch (47,519,224 us, 11.56%)</title><rect x="1053.4" y="37" width="136.4" height="15.0" fill="rgb(118,118,212)" rx="2" ry="2" />
<text  x="1056.41" y="47.5" >finish_task_switch</text>
</g>
<g >
<title>[Missed User Stack] (3,297,120 us, 0.80%)</title><rect x="10.0" y="197" width="9.5" height="15.0" fill="rgb(91,91,218)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>finish_task_switch (48,380 us, 0.01%)</title><rect x="1189.8" y="37" width="0.2" height="15.0" fill="rgb(113,113,238)" rx="2" ry="2" />
<text  x="1192.82" y="47.5" ></text>
</g>
<g >
<title>schedule (3,254,574 us, 0.79%)</title><rect x="10.0" y="85" width="9.3" height="15.0" fill="rgb(109,109,194)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>SyS_futex (360,246,006 us, 87.62%)</title><rect x="19.5" y="133" width="1033.9" height="15.0" fill="rgb(84,84,202)" rx="2" ry="2" />
<text  x="22.48" y="143.5" >SyS_futex</text>
</g>
<g >
<title>do_futex (47,519,224 us, 11.56%)</title><rect x="1053.4" y="101" width="136.4" height="15.0" fill="rgb(93,93,240)" rx="2" ry="2" />
<text  x="1056.41" y="111.5" >do_futex</text>
</g>
<g >
<title>[unknown] (407,848,669 us, 99.20%)</title><rect x="19.5" y="197" width="1170.5" height="15.0" fill="rgb(135,135,204)" rx="2" ry="2" />
<text  x="22.46" y="207.5" >[unknown]</text>
</g>
<g >
<title>- (54,330 us, 0.01%)</title><rect x="1189.8" y="117" width="0.2" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1192.81" y="127.5" ></text>
</g>
<g >
<title>finish_task_switch (3,254,574 us, 0.79%)</title><rect x="10.0" y="69" width="9.3" height="15.0" fill="rgb(86,86,202)" rx="2" ry="2" />
<text  x="13.00" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,295,523 us, 0.80%)</title><rect x="10.0" y="165" width="9.5" height="15.0" fill="rgb(90,90,229)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (47,519,305 us, 11.56%)</title><rect x="1053.4" y="133" width="136.4" height="15.0" fill="rgb(135,135,201)" rx="2" ry="2" />
<text  x="1056.41" y="143.5" >do_syscall_64</text>
</g>
<g >
<title>[unknown] (71,209 us, 0.02%)</title><rect x="1189.8" y="165" width="0.2" height="15.0" fill="rgb(101,101,244)" rx="2" ry="2" />
<text  x="1192.80" y="175.5" ></text>
</g>
<g >
<title>SyS_futex (3,254,574 us, 0.79%)</title><rect x="10.0" y="149" width="9.3" height="15.0" fill="rgb(111,111,219)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>schedule (48,380 us, 0.01%)</title><rect x="1189.8" y="53" width="0.2" height="15.0" fill="rgb(96,96,237)" rx="2" ry="2" />
<text  x="1192.82" y="63.5" ></text>
</g>
<g >
<title>do_futex (3,254,574 us, 0.79%)</title><rect x="10.0" y="133" width="9.3" height="15.0" fill="rgb(88,88,240)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>finish_task_switch (360,246,006 us, 87.62%)</title><rect x="19.5" y="53" width="1033.9" height="15.0" fill="rgb(122,122,224)" rx="2" ry="2" />
<text  x="22.48" y="63.5" >finish_task_switch</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (48,380 us, 0.01%)</title><rect x="1189.8" y="101" width="0.2" height="15.0" fill="rgb(87,87,195)" rx="2" ry="2" />
<text  x="1192.82" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,295,523 us, 0.80%)</title><rect x="10.0" y="181" width="9.5" height="15.0" fill="rgb(139,139,219)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (360,249,787 us, 87.62%)</title><rect x="19.5" y="149" width="1033.9" height="15.0" fill="rgb(94,94,209)" rx="2" ry="2" />
<text  x="22.48" y="159.5" >do_syscall_64</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (47,519,305 us, 11.56%)</title><rect x="1053.4" y="149" width="136.4" height="15.0" fill="rgb(109,109,200)" rx="2" ry="2" />
<text  x="1056.41" y="159.5" >entry_SYSCALL_64_..</text>
</g>
<g >
<title>- (47,520,455 us, 11.56%)</title><rect x="1053.4" y="165" width="136.4" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1056.41" y="175.5" >-</text>
</g>
<g >
<title>schedule (40,779 us, 0.01%)</title><rect x="19.3" y="133" width="0.2" height="15.0" fill="rgb(95,95,210)" rx="2" ry="2" />
<text  x="22.34" y="143.5" ></text>
</g>
<g >
<title>futex_wait (3,254,574 us, 0.79%)</title><rect x="10.0" y="117" width="9.3" height="15.0" fill="rgb(113,113,219)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>schedule (360,246,006 us, 87.62%)</title><rect x="19.5" y="69" width="1033.9" height="15.0" fill="rgb(131,131,197)" rx="2" ry="2" />
<text  x="22.48" y="79.5" >schedule</text>
</g>
<g >
<title>prepare_exit_to_usermode (48,380 us, 0.01%)</title><rect x="1189.8" y="85" width="0.2" height="15.0" fill="rgb(101,101,235)" rx="2" ry="2" />
<text  x="1192.82" y="95.5" ></text>
</g>
<g >
<title>sys_sched_yield (40,779 us, 0.01%)</title><rect x="19.3" y="149" width="0.2" height="15.0" fill="rgb(104,104,240)" rx="2" ry="2" />
<text  x="22.34" y="159.5" ></text>
</g>
<g >
<title>futex_wait (360,246,006 us, 87.62%)</title><rect x="19.5" y="101" width="1033.9" height="15.0" fill="rgb(117,117,237)" rx="2" ry="2" />
<text  x="22.48" y="111.5" >futex_wait</text>
</g>
<g >
<title>futex_wait_queue_me (3,254,574 us, 0.79%)</title><rect x="10.0" y="101" width="9.3" height="15.0" fill="rgb(116,116,214)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>- (360,256,847 us, 87.62%)</title><rect x="19.5" y="181" width="1033.9" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="22.46" y="191.5" >-</text>
</g>
<g >
<title>futex_wait_queue_me (360,246,006 us, 87.62%)</title><rect x="19.5" y="85" width="1033.9" height="15.0" fill="rgb(133,133,190)" rx="2" ry="2" />
<text  x="22.48" y="95.5" >futex_wait_queue_me</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (360,249,787 us, 87.62%)</title><rect x="19.5" y="165" width="1033.9" height="15.0" fill="rgb(100,100,190)" rx="2" ry="2" />
<text  x="22.48" y="175.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>exit_to_usermode_loop (48,380 us, 0.01%)</title><rect x="1189.8" y="69" width="0.2" height="15.0" fill="rgb(128,128,241)" rx="2" ry="2" />
<text  x="1192.82" y="79.5" ></text>
</g>
<g >
<title>futex_wait (47,519,224 us, 11.56%)</title><rect x="1053.4" y="85" width="136.4" height="15.0" fill="rgb(128,128,218)" rx="2" ry="2" />
<text  x="1056.41" y="95.5" >futex_wait</text>
</g>
<g >
<title>do_futex (360,246,006 us, 87.62%)</title><rect x="19.5" y="117" width="1033.9" height="15.0" fill="rgb(84,84,217)" rx="2" ry="2" />
<text  x="22.48" y="127.5" >do_futex</text>
</g>
<g >
<title>futex_wait_queue_me (47,519,224 us, 11.56%)</title><rect x="1053.4" y="69" width="136.4" height="15.0" fill="rgb(113,113,234)" rx="2" ry="2" />
<text  x="1056.41" y="79.5" >futex_wait_queue_me</text>
</g>
<g >
<title>[unknown] (69,482 us, 0.02%)</title><rect x="1189.8" y="149" width="0.2" height="15.0" fill="rgb(81,81,205)" rx="2" ry="2" />
<text  x="1192.80" y="159.5" ></text>
</g>
<g >
<title>[unknown] (67,356 us, 0.02%)</title><rect x="1189.8" y="133" width="0.2" height="15.0" fill="rgb(91,91,230)" rx="2" ry="2" />
<text  x="1192.81" y="143.5" ></text>
</g>
<g >
<title>SyS_futex (47,519,224 us, 11.56%)</title><rect x="1053.4" y="117" width="136.4" height="15.0" fill="rgb(86,86,199)" rx="2" ry="2" />
<text  x="1056.41" y="127.5" >SyS_futex</text>
</g>
<g >
<title>[unknown] (47,591,664 us, 11.58%)</title><rect x="1053.4" y="181" width="136.6" height="15.0" fill="rgb(129,129,211)" rx="2" ry="2" />
<text  x="1056.41" y="191.5" >[unknown]</text>
</g>
<g >
<title>schedule (47,519,224 us, 11.56%)</title><rect x="1053.4" y="53" width="136.4" height="15.0" fill="rgb(123,123,210)" rx="2" ry="2" />
<text  x="1056.41" y="63.5" >schedule</text>
</g>
<g >
<title>finish_task_switch (40,779 us, 0.01%)</title><rect x="19.3" y="117" width="0.2" height="15.0" fill="rgb(138,138,192)" rx="2" ry="2" />
<text  x="22.34" y="127.5" ></text>
</g>
<g >
<title>mlp_cpu (411,145,789 us, 100.00%)</title><rect x="10.0" y="213" width="1180.0" height="15.0" fill="rgb(127,127,236)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >mlp_cpu</text>
</g>
</g>
</svg>
